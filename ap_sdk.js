/**
 * Provides the global namespace for SDK framework classes.  Provides convenience
 * methods for app management.
 * @module AP
 * @static
 */
window.AP = (function() {

	function AP() {}

	function extend(dest, src) {
		for(var prop in src) {
			if(src.hasOwnProperty(prop)) {
				dest[prop] = src[prop];
			}
		}
	}

	var properties = {
		/**
		 * Name of the active application.
		 * @property activeAppName
		 * @type String
		 */
		activeAppName: null,

		/**
		 * Namespace for authentication/authorization classes.
		 * @property auth
		 * @type Object
		 */
		auth: {},

		/**
		 * Namespace for general utility classes.
		 * @property utility
		 * @type Object
		 */
		utility: {},

		/**
		 * Namespace for SDK model superclasses.
		 * @property model
		 * @type Object
		 */
		model: {},

		 /**
		  * Namespace for SDK collection superclasses.
		  * @property collection
		  * @type Object
		  */
		 collection: {},

		 /**
		  * Namespace for model relationship classes.
		  * @property relationship
		  * @type Object
		  */
		 relationship: {},

		/**
		* Namespace for adapter classes.
		* @property adapter
		* @type Object
		*/
		adapter: {},

		 /**
		  * Namespace for apps.  In most cases only one app is present.
		  * @property apps
		  * @type Object
		  */
		 apps: {},

		 /**
		  * Base URL for all XHR requests.
		  * @property baseUrl
		  * @type String
		  */
		 baseUrl: null,

		 /**
		  * Enables mock server in all applications.  SinonJS is required if
		  * `useMockServer` is `true`.
		  * @property useMockServer
		  * @type Boolean
		  */
		 useMockServer: false,

		 /**
		  * Enables offline caching of successful `GET` requests.
		  * @property useOfflineCache
		  * @type Boolean
		  */
		 useOfflineCache: true,

		 /**
		  * Offline cache storage capacity in bytes.
		  * @property offlineStorageCapacity
		  * @type Number
		  */
		 offlineStorageCapacity: 5 * 1024 * 1024, // request capacity in bytes

		 /**
		  * Registers an app class with a given name.  The name may be used later
		  * for look-up.  Registering an app with a duplicate name replaces any
		  * existing app.
		  * @method registerApp
		  * @param {AP.Application} app the application class
		  * @param {String} name the name of the application
		  */
		 registerApp: function(app, name) {
			if(app && name) {
				this.apps[name] = app;
			}
		 },

		 /**
		  * Returns an app class registered under the given name.
		  * @method getApp
		  * @param {String} name the name of the application to look up
		  * @return {AP.Application} the application class
		  */
		 getApp: function(name) {
			 return this.apps[name];
		 },

		 /**
		  * Returns the currently active app, if any.
		  * @method getActiveApp
		  * @return {AP.Application} the active application class, if any.
		  */
		 getActiveApp: function() {
			 return this.getApp(this.activeAppName);
		 }
	};

	extend(AP, properties);

	// return the module
	return AP;
})();

/**
 Utility function to define classes using a prototypal inheritance model.
 Adds a "_super" property on the class constructor which contains the superclass prototype if "extends" was declared.
 Also if the class is a subclass, then all static properties from the superclass get copied into the subclass.

 Example usage:
 @example

 var MySuperClass = new AP.utility.createClass({

 	mySuperMethod: function() {...},

 	anotherMethod: function() {...}

 });

 var MyClass = new AP.utility.createClass({

 	// "MySuperClass" must be a constructor function to be extended
 	extends: MySuperClass,

 	// All properties added to the static object are accesible only from the constructor
 	//  specific instances will not get this properties
 	static: {
 		staticMethodNumberOne: function() {...}
 	},

 	// Optional constructor function. If no constructor is passed it will use an empty function
 	_constructor: function MyClass() {
 		this.anAttribute = "A random attribute";
 	},

 	// Classes created get a static "_super" attribute from which to access their parent's prototype
 	mySuperMethod: function() {
 		return MyClass._super.mySuperMethod();
 	},

 	methodOne: function() {...},

 	propertyOne: "foo",
 });


 MyClass.staticMethodNumberOne();

 var instance = new MyClass();

 instance.mySuperMethod(); // Overrided method
 instance.anotherMethod(); // Parent class method is accessible
 instance.methodOne();
 instance.propertyOne;

 @module AP
 @submodule utility
 @class Class
 */
AP.utility.createClass = (function() {
	
	function isValidString(str) {
		return (str && typeof str === "string" && str !== "") ? true : false;
	}
	
	function isValidObject(obj) {
		return (obj && typeof obj === "object") ? true : false;
	}
	
	function isValidFunction(fn) {
		return (fn && typeof fn === "function") ? true : false;
	}
	
	function Class(definition) {
		var _constructor = null,
			_extends = null,
			isExtension = false,
			Dummy = null;
			
		if(isValidFunction(definition["extends"])) {
			isExtension = true;
			_extends = definition["extends"];
		}
		
		if(!isValidFunction(definition["_constructor"])) {
			_constructor = function() {};
		} else {
			_constructor = definition["_constructor"];
		}
		
		// If it has a super class, copy static methods from parent to child
		if(isExtension) {
			for(var superProp in _extends) {
				if(_extends.hasOwnProperty(superProp)) {
					_constructor[superProp] = _extends[superProp];
				}
			}
		}
		
		// Then add class' static methods
		if(isValidObject(definition["static"])) {
			for(var staticProp in definition["static"]) {
				if(definition["static"].hasOwnProperty(staticProp)) {
					_constructor[staticProp] = definition["static"][staticProp];
				}
			}
		}
		
		if(isExtension) {
			Dummy = function() {};
			Dummy.prototype = _extends.prototype;
			_constructor.prototype = new Dummy();
			_constructor.prototype.constructor = _constructor;
			// Add _super attribute to be able to call superclass methods within subclass methods
			_constructor._super = _extends.prototype;
		}
		
		for(var prop in definition) {
			if(prop !== "_constructor" && prop !== "extends" && prop !== "static" && prop !== "prototype") {
				if(definition.hasOwnProperty(prop)) {
					_constructor.prototype[prop] = definition[prop];
				}	
			}
		}
		
		return _constructor;
	}
	
	return Class;
	
}(AP.utility || {}));
/**
Utility singleton for encoding and decoding Base64 strings.
@module AP
@submodule utility
@class Base64
@static
@private
 */
AP.utility.Base64 = (function($class) {
  
  var base64 = $class({
    
    _constructor: function Base64() {},
    
    /**
     * class @static methods and properties
     */
    static: {
        /**
        @property _keyStr
        @type String
        @static
        @private
         */
        _keyStr: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
    
        /**
        Encodes an input string to Base64.
        @method encode
        @static
        @param {String} input the string to be Base64-encoded
        @return {String} a Base64-encoded string
         */
        encode: function(input) {
          var chr1, chr2, chr3, enc1, enc2, enc3, enc4, i, output;
          output = '';
          i = 0;
          input = this._utf8_encode(input);
          while (i < input.length) {
            chr1 = input.charCodeAt(i++);
            chr2 = input.charCodeAt(i++);
            chr3 = input.charCodeAt(i++);
            enc1 = chr1 >> 2;
            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
            enc4 = chr3 & 63;
            if (isNaN(chr2)) {
              enc3 = enc4 = 64;
            } else {
              if (isNaN(chr3)) {
                enc4 = 64;
              }
            }
            output = output + this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) + this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);
          }
          return output;
        },
    
        /**
        Decodes an input string from Base64.
        @method decode
        @static
        @param {String} input the string to be Base64-decoded
        @return {String} a string decoded from Base64
         */
        decode: function(input) {
          var chr1, chr2, chr3, enc1, enc2, enc3, enc4, i, output;
          output = '';
          i = 0;
          input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');
          while (i < input.length) {
            enc1 = this._keyStr.indexOf(input.charAt(i++));
            enc2 = this._keyStr.indexOf(input.charAt(i++));
            enc3 = this._keyStr.indexOf(input.charAt(i++));
            enc4 = this._keyStr.indexOf(input.charAt(i++));
            chr1 = (enc1 << 2) | (enc2 >> 4);
            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
            chr3 = ((enc3 & 3) << 6) | enc4;
            output = output + String.fromCharCode(chr1);
            if (enc3 !== 64) {
              output = output + String.fromCharCode(chr2);
            }
            if (enc4 !== 64) {
              output = output + String.fromCharCode(chr3);
            }
          }
          output = this._utf8_decode(output);
          return output;
        },
    
        /**
        @private
        @method _utf8_encode
        @static
         */
        _utf8_encode: function(string) {
          var c, n, utftext;
          string = string.replace(/\r\n/g, '\n');
          utftext = '';
          n = 0;
          while (n < string.length) {
            c = string.charCodeAt(n);
            if (c < 128) {
              utftext += String.fromCharCode(c);
            } else if ((c > 127) && (c < 2048)) {
              utftext += String.fromCharCode((c >> 6) | 192);
              utftext += String.fromCharCode((c & 63) | 128);
            } else {
              utftext += String.fromCharCode((c >> 12) | 224);
              utftext += String.fromCharCode(((c >> 6) & 63) | 128);
              utftext += String.fromCharCode((c & 63) | 128);
            }
            n++;
          }
          return utftext;
        },
    
        /**
        @private
        @method _utf8_decode
        @static
         */
        _utf8_decode: function(utftext) {
          var c, c1, c2, c3, i, string;
          string = '';
          i = 0;
          c = c1 = c2 = 0;
          while (i < utftext.length) {
            c = utftext.charCodeAt(i);
            if (c < 128) {
              string += String.fromCharCode(c);
              i++;
            } else if ((c > 191) && (c < 224)) {
              c2 = utftext.charCodeAt(i + 1);
              string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
              i += 2;
            } else {
              c2 = utftext.charCodeAt(i + 1);
              c3 = utftext.charCodeAt(i + 2);
              string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
              i += 3;
            }
          }
          return string;
        }
    }
  });
  
  return base64;
  
})(AP.utility.createClass);

/**
Simplifies interaction with browser cookies.
@module AP
@submodule utility
@class Cookie
@static
 */
AP.utility.Cookie = (function($class) {
  
  var cookie = $class({
    
    _constructor: function Cookie() {},
    
    /**
     * class @static methods and properties
     */
    static: {
        /**
        @method getFromCookieStorage
        @static
        @return {String} a copy of the raw cookie string
         */
        getFromCookieStorage: function() {
          return document.cookie.toString();
        },
    
        /**
        Saves cookie to document cookies.
        @method saveToCookieStorage
        @static
        @param {String} cookie a formatted cookie-string to save to document cookies
         */
        saveToCookieStorage: function(cookie) {
          return document.cookie = cookie;
        },
    
        /**
        Formats an expiration date for a cookie string.
        @method formatCookieStorageDate
        @static
        @param {Integer/Date} expiration number of days from today after which to
        expire cookie *or* a JavaScript `Date` of the absolute expiration date.
         */
        formatCookieStorageDate: function(expiration) {
          var d;
          if (_.isNumber(expiration)) {
            d = new Date();
            d.setTime(d.getTime() + (expiration * 86400000));
            expiration = d;
          }
          if (_.isDate(expiration)) {
            return expiration.toGMTString();
          }
        },
    
        /**
        Builds a formatted cookie-string for saving to `document.cookies`.
        @method buildCookieStorageString
        @static
        @param {String} n name of cookie
        @param {String} v value of cookie
        @param {Integer/Date} expiration optional number of days from today after
        which to expire cookie *or* a JavaScript `Date` of the absolute
        expiration date.
         */
        buildCookieStorageString: function(n, v, expiration) {
          var e;
          e = '';
          if (expiration) {
            e = '; expires=' + this.formatCookieStorageDate(expiration);
          }
          return n + '=' + v + e + '; path=/';
        },
    
        /**
        Saves a cookie to `document.cookies`.
        @method set
        @static
        @param {String} n name of cookie
        @param {String} v value of cookie
        @param {Integer/Date} expiration optional number of days from today after
        which to expire cookie *or* a JavaScript `Date` of the absolute
        expiration date.
         */
        set: function(n, v, expiration) {
          var cookie;
          cookie = this.buildCookieStorageString(n, v, expiration);
          return this.saveToCookieStorage(cookie);
        },
    
        /**
        Returns a cookie with name `n` from underlaying cookie
        storage, `document.cookie`.
        @method get
        @static
        @param {String} n name of cookie
        @return {String} the cookie value, if any
         */
        get: function(n) {
          var c, ca, i, match;
          ca = this.getFromCookieStorage().split(';');
          match = n + '=';
          c = '';
          i = 0;
          while (i < ca.length) {
            c = ca[i].replace(/^\s*/, '');
            if (c.indexOf(match) === 0) {
              return c.substring(match.length, c.length);
            }
            i++;
          }
          return null;
        },
    
        /**
        Deletes a cookie with name `n` from underlaying cookie storage.
        @method del
        @static
        @param {String} n name of cookie
         */
        del: function(n) {
          return this.set(n, '', -1);
        } 
    }
    
  });
  
  return cookie;
  
})(AP.utility.createClass);

// Generated by CoffeeScript 1.9.2

/**
Utility singleton for working with URLs and paths.
@module AP
@submodule utility
@class Url
@static
@private
 */
AP.utility.Url = (function($class) {
  
  var url = $class({
    
    _constructor: function Url() {},
    
    static: {
      parseUrl: function(url) {
        var matches, path;
        path = {
          urlParseRE: /^\s*(((([^:\/#\?]+:)?(?:(\/\/)((?:(([^:@\/#\?]+)(?:\:([^:@\/#\?]+))?)@)?(([^:\/#\?\]\[]+|\[[^\/\]@#?]+\])(?:\:([0-9]+))?))?)?)?((\/?(?:[^\/\?#]+\/+)*)([^\?#]*)))?(\?[^#]+)?)(#.*)?/,
          getLocation: function(url) {
            var hash, uri;
            uri = url ? this.parseUrl(url) : location;
            hash = this.parseUrl(url || location.href).hash;
            hash = hash === '#' ? '' : hash;
            return uri.protocol + '//' + uri.host + uri.pathname + uri.search + hash;
          }
        };
        if ($.type(url) === 'object') {
          return url;
        }
        matches = path.urlParseRE.exec(url || '') || [];
        return {
          href: matches[0] || '',
          hrefNoHash: matches[1] || '',
          hrefNoSearch: matches[2] || '',
          domain: matches[3] || '',
          protocol: matches[4] || '',
          doubleSlash: matches[5] || '',
          authority: matches[6] || '',
          username: matches[8] || '',
          password: matches[9] || '',
          host: matches[10] || '',
          hostname: matches[11] || '',
          port: matches[12] || '',
          pathname: matches[13] || '',
          directory: matches[14] || '',
          filename: matches[15] || '',
          search: matches[16] || '',
          hash: matches[17] || ''
        };
      }
    }
  });
  
  return url;
  
})(AP.utility.createClass);

/**
Mock server instances are used by the test framework to intercept XHR requests
and simulate the functionality of an API backend, entirely offline.  A mock
server handles all requests matching collections within the application within
which it is instantiated.

To enable a mock server in an application, simply enable the global
`useMockServer` flag:
@example
    AP.useMockServer = true

@module AP
@submodule utility
@class MockServer
 */
AP.utility.MockServer = (function($class) {
  
  var mockServer = $class({
    
    _constructor: function MockServer() {
      this.initialize.apply(this, arguments);
    },
    
    /**
    The application class with which this mock server as instantiated.
    See {@link #initialize}.
    @property application
    @type AP.Application
     */
    application: null,

    /**
    A sinon fake server instance, automatically instantiated.  The sinon fake
    server intercepts XHR requests and handles the low-level request/response
    cycle.  See [Sinon.JS](http://sinonjs.org) for more information.
    @private
    @property server
    @type sinon.fakeServer
     */
    server: null,

    /**
    The collections property is an internal datastore used by the mock server to
    simulate a database.  The collections property is a collection (database) of
    collections (tables) with additional metadata for ease of use.
    @private
    @property collections
    @type Backbone.Collection
     */
    collections: null,


    /**
    Constructs a mock server instance.
    @method initialize
    @param {AP.Application} application an application class to which this
    mock server applies
     */
    initialize: function(application) {
      this.application = application;
      this.server = sinon.fakeServer.create();
      this.server.autoRespond = true;
      this.collections = new Backbone.Collection();
      return this.initResponses();
    },

    /**
    Initializes XHR request interceptors via sinon for requests originating from
    any collection within the application.
    @method initResponses
     */
    initResponses: function() {
      var responseUrls;
      responseUrls = [];
      return _.each(this.application.collections, (function(_this) {
        return function(collectionClass) {
          var url, urlWithQueryString;
          url = _this.getEndpointUrlFor(collectionClass);
          urlWithQueryString = _this.getEndpointRegexWithQueryStringFor(collectionClass);
          _this.server.respondWith('GET', urlWithQueryString, function(xhr) {
            return _this.handleRequest(xhr, collectionClass);
          });
          if (_.indexOf(responseUrls, url) < 0) {
            responseUrls.push(url);
            url = _this.getEndpointRegexFor(collectionClass);
            _this.server.respondWith('POST', url, function(xhr) {
              return _this.handleRequest(xhr, collectionClass);
            });
            _this.server.respondWith('PUT', url, function(xhr) {
              return _this.handleRequest(xhr, collectionClass);
            });
            return _this.server.respondWith('DELETE', url, function(xhr) {
              return _this.handleRequest(xhr, collectionClass);
            });
          }
        };
      })(this));
    },

    /**
    Returns the API endpoint URL associated with a given collection class.
    @method getEndpointUrlFor
    @param {AP.collection.Collection} collectionClass a collection class
    @return {String} the API enpoint URL for the collection class
     */
    getEndpointUrlFor: function(collectionClass) {
      return collectionClass.prototype.apiEndpoint;
    },

    /**
    Returns a regular expression used to match URLs for the given
    collection class.
    @method getEndpointRegexFor
    @param {AP.collection.Collection} collectionClass a collection class
    @return {RegExp} a regular expression matching the API endpoint URL of the
    collection class
     */
    getEndpointRegexFor: function(collectionClass) {
      return new RegExp(("" + (this.getEndpointUrlFor(collectionClass).replace('.json', ''))).replace('.', '\\.'));
    },

    /**
    Returns a regular expression used to match URLs for the given
    collection class with respect for URL query parameters matching the collection
    class' `extraParams`.
    @method getEndpointRegexWithQueryStringFor
    @param {AP.collection.Collection} collectionClass a collection class
    @return {RegExp} a regular expression matching the API endpoint URL of the
    collection class with respect for `extraParams` as query parameters
     */
    getEndpointRegexWithQueryStringFor: function(collectionClass) {
      return new RegExp(((this.getEndpointUrlFor(collectionClass)) + "?" + ($.param(collectionClass.prototype.extraParams))).replace('?', '\\?').replace('&', '\\&').replace('.', '\\.'));
    },

    /**
    Gets the previously instantiated collection matching the given colleciton
    class, if one exists in the internal datastore, otherwise instantiates one.
    @method getOrCreateCollectionInstanceFor
    @param {AP.collection.Collection} collectionClass a collection class
    @return {AP.collection.Collection} a collection instance from the datastore
     */
    getOrCreateCollectionInstanceFor: function(collectionClass) {
      var collection, name;
      name = collectionClass.prototype.model.name;
      collection = this.collections.findWhere({
        name: name
      });
      if (!collection) {
        collection = AP.utility.MockServer.Collections.createCollectionInstanceFor(collectionClass);
        this.collections.add({
          id: collectionClass.prototype.collectionId,
          name: name,
          instance: collection
        });
      }
      return (collection != null ? collection.get('instance') : void 0) || collection;
    },

    /**
    Resets internal datastore.
    This is useful when tests require consistent datastore behavior across runs.
    @method resetDatastore
     */
    resetDatastore: function() {
      return this.collections.reset([]);
    },

    /**
    Parses query parameters out of URL, if any, and transforms them according to
    the given collection class' query fields, if any.
    See `AP.collection.ScopeCollection`.
    @method parseQuery
    @param {AP.collection.Collection} collectionClass a collection class
    @return {Object} query parameters parsed from a URL with respect to the given
    collection class' query fields
     */
    parseQuery: function(url, collectionClass) {
      var modelClass, parsed, query, queryFields;
      modelClass = collectionClass.prototype.model;
      queryFields = collectionClass.prototype.queryFields;
      parsed = _.map(url.split('?')[1].split('&'), function(bits) {
        bits = bits.split('=');
        return [decodeURIComponent(bits[0]), decodeURIComponent(bits[1])];
      });
      query = _.filter(parsed, function(pair) {
        return pair[0].indexOf('query') === 0;
      });
      if (query.length) {
        query = _.map(query, function(pair) {
          var key, value;
          key = pair[0].replace(/query\[(.*)\]/, '$1');
          value = pair[1];
          return [key, value];
        });
        query = _.map(query, function(pair) {
          var queryField;
          queryField = _.findWhere(queryFields, {
            paramName: pair[0]
          });
          if (queryField) {
            pair[0] = queryField.fieldName;
          }
          return pair;
        });
        query = _.map(query, (function(_this) {
          return function(pair) {
            var key, value;
            key = pair[0];
            value = _this.castValue(modelClass, key, pair[1]);
            return [key, value];
          };
        })(this));
        return _.object(query);
      } else {
        return null;
      }
    },

    /**
    @method castValue
    @param {AP.model.Model} modelClass a model class
    @param {String} fieldName name of field in `modelClass`
    @param {String} fieldValue uncast value of field
     */
    castValue: function(modelClass, fieldName, fieldValue) {
      var fieldDef;
      fieldDef = _.findWhere(modelClass.prototype.fieldDefinitions, {
        name: fieldName
      });
      if (fieldDef.name === modelClass.prototype.idAttribute) {
        return fieldValue;
      } else {
        switch (fieldDef.type) {
          case 'integer':
            return parseInt(fieldValue, 10);
          case 'float':
            return parseFloat(fieldValue);
          default:
            return fieldValue;
        }
      }
    },

    /**
    Delegates an intercepted XHR request to the appropriate method, depending on
    the request method.  `GET`, `POST`, and `PUT` are supported at this time, but
    `DELETE` is not.
    @method handleRequest
    @param {AP.collection.Collection} collectionClass a collection class
    @return {Object} query parameters parsed from a URL with respect to the given
    collection class' query fields
     */
    handleRequest: function(xhr, collectionClass) {
      switch (xhr.method.toLowerCase()) {
        case 'get':
          return this.handleGetRequest(xhr, collectionClass);
        case 'post':
          return this.handlePostRequest(xhr, collectionClass);
        case 'put':
          return this.handlePutRequest(xhr, collectionClass);
        case 'delete':
          return this.handleDeleteRequest(xhr, collectionClass);
      }
    },

    /**
    Handles an intercepted XHR `GET` request for the given collection class.  If
    no query is passed, all model instances in the appropriate collection are
    serialized to JSON and returned via a mock XHR `200` response.
    
    If a query is passed, only matching models are returned.
    
    @method handleGetRequest
    @param {Object} xhr mock XHR request object generated by sinon
    @param {AP.collection.Collection} collectionClass the collection class to
    which this request applies
     */
    handleGetRequest: function(xhr, collectionClass) {
      var collectionInstance, query, responseBody, results;
      query = this.parseQuery(xhr.url, collectionClass);
      collectionInstance = this.getOrCreateCollectionInstanceFor(collectionClass);
      if (query) {
        results = collectionInstance.where(query);
      }
      responseBody = JSON.stringify(results || collectionInstance.toJSON());
      return xhr.respond(200, {
        "Content-Type": "application/json"
      }, responseBody);
    },

    /**
    Handles an intercepted XHR `POST` request for the given collection class.  The
    passed request body must be valid JSON.  It is parsed and used to instantiate
    a new model instance of the appropriate type using a randomly generated ID.
    The new model instance is added to the internal datastore and will be returned
    by future requests to the collection.  The resulting model instances is JSON
    serialized and returned via a mock XHR `201` response.
    @method handlePostRequest
    @param {Object} xhr mock XHR request object generated by sinon
    @param {AP.collection.Collection} collectionClass the collection class to
    which this request applies
     */
    handlePostRequest: function(xhr, collectionClass) {
      var collectionInstance, data, idFieldDef, instance, model, responseBody;
      collectionInstance = this.getOrCreateCollectionInstanceFor(collectionClass);
      model = collectionInstance.model;
      data = JSON.parse(xhr.requestBody);
      instance = new model(data);
      idFieldDef = _.findWhere(instance.fieldDefinitions, {
        name: model.prototype.idAttribute
      });
      instance.set(model.prototype.idAttribute, AP.utility.MockServer.Models.generateRandomFieldDataFor(idFieldDef));
      collectionInstance.add(instance);
      responseBody = JSON.stringify(instance.toJSON());
      return xhr.respond(201, {
        "Content-Type": "application/json"
      }, responseBody);
    },

    /**
    Handles an intercepted XHR `PUT` request for the given collection class.  The
    passed request body must be valid JSON and must contain an ID attribute.
    It is parsed and used to update an existing model instance of the appropriate
    type within the datastore.
    
    If the requested instance exists, it is JSON  serialized and returned via a
    mock XHR `200` response.
    
    If the requested instance does not exist, a mock XHR `404` response is sent.
    
    @method handlePutRequest
    @param {Object} xhr mock XHR request object generated by sinon
    @param {AP.collection.Collection} collectionClass the collection class to
    which this request applies
     */
    handlePutRequest: function(xhr, collectionClass) {
      var collectionInstance, data, id, idAttribute, instance, model, responseBody, whereClause;
      collectionInstance = this.getOrCreateCollectionInstanceFor(collectionClass);
      model = collectionInstance.model;
      data = JSON.parse(xhr.requestBody);
      id = xhr.url.split('/').reverse()[0].replace('.json', '');
      idAttribute = model.prototype.idAttribute;
      whereClause = {};
      whereClause[idAttribute] = this.castValue(model, idAttribute, id);
      instance = collectionInstance.findWhere(whereClause);
      if (instance) {
        instance.set(data);
        responseBody = JSON.stringify(instance.toJSON());
        return xhr.respond(200, {
          "Content-Type": "application/json"
        }, responseBody);
      } else {
        return xhr.respond(404);
      }
    },

    /**
    Handles an intercepted XHR `DELETE` request for the given collection class.
    The passed request body must be valid JSON and must contain an ID attribute.
    It is parsed and used to remove an existing model instance from the datastore.
    
    If the requested instance exists, an empty XHR `204` response is returned.
    
    If the requested instance does not exist, a mock XHR `404` response is sent.
    
    @method handleDeleteRequest
    @param {Object} xhr mock XHR request object generated by sinon
    @param {AP.collection.Collection} collectionClass the collection class to
    which this request applies
     */
    handleDeleteRequest: function(xhr, collectionClass) {
      var collectionInstance, id, idAttribute, instance, model, responseBody, whereClause;
      collectionInstance = this.getOrCreateCollectionInstanceFor(collectionClass);
      model = collectionInstance.model;
      id = xhr.url.split('/').reverse()[0].replace('.json', '');
      idAttribute = model.prototype.idAttribute;
      whereClause = {};
      whereClause[idAttribute] = this.castValue(model, idAttribute, id);
      instance = collectionInstance.findWhere(whereClause);
      if (instance) {
        collectionInstance.remove(instance);
        responseBody = '';
        return xhr.respond(204, {
          "Content-Type": "application/json"
        }, responseBody);
      } else {
        return xhr.respond(404);
      }
    }
    
  });
  
  /**
    @module AP
    @submodule utility
    @submodule MockServer
    @class Collections
    @static
     */
  mockServer.Collections = $class({
    
    _constructor: function Collections() {},
    
    /**
     * class @static methods and properties
     */
    static: {      
        /**
        Number of model instances with which to prepopulate a collection
        instantiated via `AP.utility.MockServer.Collections.createCollectionInstanceFor`.
        @property instancesPerCollection
        @type Number
        @static
         */
        instancesPerCollection: 3,
  
        /**
        Generates an `AP.collection.Collection` collection instance from the given
        collection class.  The instance is prepopulated with a number of model
        instances appropriate to the collection, the number of which is defined
        by {@link #instancesPerCollection}.
        @method createCollectionInstanceFor
        @static
        @param {AP.collection.Collection} collectionClass a class object
        @return {AP.collection.Collection} prepopulated collection instance
         */
        createCollectionInstanceFor: function(collectionClass) {
          var collection, instances;
          collection = new collectionClass();
          instances = this.createInstancesFor(collectionClass.prototype.model);
          collection.add(instances);
          return collection;
        },
  
        /**
        Generates a number of `AP.model.Model` model instances from the given model
        class.  The number generated
        @method createInstancesFor
        @static
        @param {AP.model.Model} modelClass a class object
        @return {AP.model.Model[]} array of model instances
         */
        createInstancesFor: function(modelClass) {
          var i, idAttribute, instance, num, ref, results1;
          results1 = [];
          for (num = i = 0, ref = this.instancesPerCollection; 0 <= ref ? i < ref : i > ref; num = 0 <= ref ? ++i : --i) {
            instance = this.createInstanceFor(modelClass, num);
            idAttribute = modelClass.prototype.idAttribute;
            instance.set(idAttribute, modelClass.prototype.name + "-" + num);
            results1.push(instance);
          }
          return results1;
        },
  
        /**
        Generates a single `AP.model.Model` model instance from the given model
        class, prepopulated with random field data
        via {@link AP.utility.MockServer.Models.generateRandomInstanceDataFor}.
        @method createInstanceFor
        @static
        @param {AP.model.Model} modelClass a class object
        @return {AP.model.Model} a model instance
         */
        createInstanceFor: function(modelClass) {
          var instanceData;
          instanceData = AP.utility.MockServer.Models.generateRandomInstanceDataFor(modelClass);
          return new modelClass(instanceData);
        }
      
    }
    
  });
  
  
  /**
    @module AP
    @submodule utility
    @submodule MockServer
    @class Models
    @static
     */
  mockServer.Models = $class({
    
    _constructor: function Models() {},
    
    /**
     * class @static methods and properties
     */
    static: {
        /**
        Generates random field data for a model class based on that class'
        field definitions.
        @method generateRandomInstanceDataFor
        @static
        @param {AP.model.Model} modelClass a class object
        @return {Object} key/value hash of field names and randomly generated values
        appropriate for use in instantiating the model class
         */
        generateRandomInstanceDataFor: function(modelClass) {
          return _.object(_.map(modelClass.prototype.fieldDefinitions, (function(_this) {
            return function(fieldDef) {
              var name, value;
              name = fieldDef.name;
              value = _this.generateRandomFieldDataFor(fieldDef);
              return [name, value];
            };
          })(this)));
        },
  
        /**
        Generates random field data for a model class based on that class'
        field definitions.
        @method generateRandomFieldDataFor
        @static
        @param {AP.model.Model} fieldDef a class object
        @return {Object} key/value hash of field names and randomly generated values
        appropriate for use in instantiating the model class
         */
        generateRandomFieldDataFor: function(fieldDef) {
          switch (fieldDef.type) {
            case 'string':
              return _.uniqueId(fieldDef.name + "_");
            case 'boolean':
              return (Math.random() * 100) < 50;
            case 'integer':
              return _.random(0, 1000000000);
            case 'float':
              return Math.random() * 1000000000;
            case 'date':
            case 'time':
              return (new Date()).toISOString();
            case 'array':
              return [_.random(0, 1000000000), _.random(0, 1000000000), _.random(0, 1000000000)];
            case 'hash':
              return {
                "field1": _.uniqueId('field1'),
                "field2": _.uniqueId('field2'),
                "field3": _.uniqueId('field3')
              };
          }
        }
    }
    
  });
  
  return mockServer;
  
})(AP.utility.createClass);

/**
Provides an extensible facility for validating arbitrary data.  While validator
is used primarily by {@link AP.model.Model}, it may be used to
validate any data object.

Subclass validator to implement additional validation types.  Built-in
validation types include:

- `required`:  field must have a non-null value
- `type`:  field type is consistent with the type specified in `is`

Example usage:
@example
    validator = new AP.utility.Validator();
    validator.data = {
      name: 'John Doe',
      age: 46
    };
    validator.validations = [{
      field: 'name',
      validate: 'required'
    }, {
      field: 'age',
      validate: 'type',
      is: 'integer'
    }];

    validator.validate();
    // true
    validator.data.age = null;
    validator.validate();
    // true
    // age is not required:  although "null" is not an integer, it is valid
    // because the type validator ignores null values.
    
    validator.data.name = '';
    validator.validate();
    // false

@module AP
@submodule utility
@class Validator
 */
AP.utility.Validator = (function($class) {
  
  var validator = $class({
    
    _constructor: function Validator(data, validations) {
      this.data = data;
      this.validations = validations;
      this._errors = [];
      this.data = _.clone(this.data);
      this.validations = _.clone(this.validations);
    },
    
    /**
    Internal errors array.  If the errors array contains any errors then the
    validator is considered to be in an invalid state.
    @private
    @property _errors
    @type Object[]
     */
    _errors: [],

    /**
    Internal hash of error messages.  Each key is an error type where its value
    is an error message string.
    @private
    @property _errorMessages
    @type Object
     */
    _errorMessages: {
      required: 'this field is required',
      numericality: 'this field must resemble a number',
      booleanType: 'this field must be a boolean',
      stringType: 'this field must be a string',
      numberType: 'this field must be a number',
      integer: 'this field must be an integer',
      float: 'this field must be a float',
      missingType: 'this field cannot be validated as type {0}'
    },

    /**
    The data object to validate.
    @property data
    @type Object
     */
    data: {},

    /**
    A list of validations to apply.  Validations is an array of validation
    configuration objects.  Validation configuration objects must contain at least
    the following members:
    
    - `field`:  a key in the {@link #data} object
    - `validate`:  a string reprenting the validation type
    
    Certain validations may require additional information.  For example, the
    `type` validation requires an `is` member, the data type.
    
    For example:
    @example
        [
          field: 'name'
          validate: 'required'
        ,
          field: 'amount'
          validate: 'numericality'
        ,
          field: 'age'
          validate: 'type'
          is: 'integer'
        ]
    
    @property validations
    @type Object[]
     */
    validations: [],

    /**
    Returns true if the validator has no errors.  **Note**:  {@link #validate}
    should be executed before calling `isValid`.  Always returns `true` if
    executed before `validate`.
    @method isValid
    @return {Boolean} `true` if there
     */
    isValid: function() {
      return !this.errors().length;
    },

    /**
    Applies the validations specified in {@link #validations} to {@link #data},
    clearing any existing errors first.
    @method validate
    @return {Boolean} the return value of {@link #isValid}.
     */
    validate: function() {
      var j, len, ref, validation;
      this._errors = [];
      ref = this.validations;
      for (j = 0, len = ref.length; j < len; j++) {
        validation = ref[j];
        if (this[validation.validate]) {
          this[validation.validate](this.data[validation.field], validation);
        }
      }
      return this.isValid();
    },

    /**
    Adds an error of `type` for field `fieldName` to the validator where `type` is
    a key in the internal {@link #_errorMessages error messages hash}.  Additional
    data may be passed as an array via `extra` which is interpolated into the
    error message.
    @method addError
    @param {String} fieldName the field to which the error applies
    @param {String} type the error type, corresponding to a key in the internal
    error messages hash.
    @param {String[]} [extra] optional array of strings to be interpolated into
    the error message
     */
    addError: function(fieldName, type, extra) {
      var i, j, len, message, value;
      message = this._errorMessages[type] || 'is invalid';
      if (extra) {
        for (i = j = 0, len = extra.length; j < len; i = ++j) {
          value = extra[i];
          message = message.replace("{" + i + "}", value);
        }
      }
      return this._errors.push({
        field: fieldName,
        message: message
      });
    },

    /**
    Returns the internal errors array.
    @method errors
    @return {String[]} the internal errors array.
     */
    errors: function() {
      return this._errors;
    },

    /**
    Validates that the value is non-null.  If null or undefined, adds an error.
    @method required
    @param value the value to validate
    @param {Object} options a validation configuration object, for example:
        {field: 'title', validate: 'required'}
     */
    required: function(value, options) {
      if (value === null || value === void 0) {
        return this.addError(options.field, 'required');
      }
    },

    /**
    Validates that the value looks like a number.  The value is allowed to be
    either a strict string or number type, as long as it looks like a number.
    @method numericality
    @param value the value to valiate as numerical
    @param {Object} options a validation configuration object, for example:
        {field: 'amount', validate: 'numericality'}
     */
    numericality: function(value, options) {
      if ((value != null) && !value.toString().match(/^[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?$/)) {
        return this.addError(options.field, 'numericality');
      }
    },

    /**
    Validates that the value is of a specified type.  Adds an error if the value
    is not of the specified type.
    @method type
    @param value the value to validate
    @param {Object} options a validation configuration object with an extra `is`
    member to specify type, for example:
        {field: 'title', validate: 'type', is: 'string'}
     */
    type: function(value, options) {
      var type;
      type = options.is.toLowerCase();
      if (this[type + "Type"]) {
        return this[type + "Type"](value, options);
      } else {
        return this.addError(options.field, 'missingType', [type]);
      }
    },

    /**
    Validates that `value` is a boolean.  Adds an error if `value` is present but
    not of type boolean.
    @method booleanType
    @param value the value to validate
    @param {Object} options a validation configuration object with an extra `is`
    member to specify type, for example:
        {field: 'title', validate: 'type', is: 'boolean'}
     */
    booleanType: function(value, options) {
      if (((typeof value) !== 'boolean') && (value !== null && value !== void 0)) {
        return this.addError(options.field, 'booleanType');
      }
    },

    /**
    Validates that `value` is a string.  Adds an error if `value` is present but
    not of type string.
    @method stringType
    @param value the value to validate
    @param {Object} options a validation configuration object with an extra `is`
    member to specify type, for example:
        {field: 'title', validate: 'type', is: 'string'}
     */
    stringType: function(value, options) {
      if (((typeof value) !== 'string') && (value !== null && value !== void 0)) {
        return this.addError(options.field, 'stringType');
      }
    },

    /**
    Validates that `value` is a number.  Adds an error if `value` is present but
    not of type number.
    @method numberType
    @param value the value to validate
    @param {Object} options a validation configuration object with an extra `is`
    member to specify type, for example:
        {field: 'title', validate: 'type', is: 'number'}
     */
    numberType: function(value, options) {
      if (((typeof value) !== 'number') && (value !== null && value !== void 0)) {
        return this.addError(options.field, 'numberType');
      }
    },

    /**
    Validates that `value` is a number.  Adds an error if `value` is present but
    not of type number.
    @method floatType
    @param value the value to validate
    @param {Object} options a validation configuration object with an extra `is`
    member to specify type, for example:
        {field: 'title', validate: 'type', is: 'float'}
     */
    floatType: function(value, options) {
      if (((typeof value) !== 'number') && (value !== null && value !== void 0)) {
        return this.addError(options.field, 'floatType');
      }
    },

    /**
    Validates that `value` is a whole number.  Adds an error if `value` is present
    but not of a whole number.
    @method integerType
    @param value the value to validate
    @param {Object} options a validation configuration object with an extra `is`
    member to specify type, for example:
        {field: 'title', validate: 'type', is: 'integer'}
     */
    integerType: function(value, options) {
      if (value !== null && value !== void 0) {
        if (!(((typeof value) === 'number') && (value.toString().indexOf('.') === -1))) {
          return this.addError(options.field, 'integerType');
        }
      }
    },

    /**
    **UNIMPLEMENTED***
    Validates that `value` is a data.
    @method dateType
    @beta
    @param value the value to validate
    @param {Object} options a validation configuration object with an extra `is`
    member to specify type, for example:
        {field: 'title', validate: 'type', is: 'date'}
     */
    dateType: function(value, options) {},

    /**
    **UNIMPLEMENTED***
    Validates that `value` is a time.
    @method timeType
    @beta
    @param value the value to validate
    @param {Object} options a validation configuration object with an extra `is`
    member to specify type, for example:
        {field: 'title', validate: 'type', is: 'time'}
     */
    timeType: function(value, options) {}
    
  });
  
  return validator;
  
})(AP.utility.createClass);

AP.utility.TransientStore = (function($class) {
  
  var transientStore = $class({
    
    _constructor: function TransientStore(options) {
      if (options == null) {
        options = {};
      }
      this.namespace = (options != null ? options.namespace : void 0) || this.namespace;
      this.expiresAfter = (options != null ? options.expiresAfter : void 0) || this.expiresAfter;
      this._data = {};
    },
    
    namespace: 'ap',

    expiresAfter: 7,

    _data: null,
    
    getFromUnderlayingStorage: function(qualifiedKey) {
      return this._data[qualifiedKey];
    },

    setToUnderlayingStorage: function(qualifiedKey, value, expirationDate) {
      return this._data[qualifiedKey] = value;
    },

    removeFromUnderlayingStorage: function(qualifiedKey) {
      return delete this._data[qualifiedKey];
    },

    encodeValue: function(value) {
      var encoded;
      encoded = JSON.stringify([value]);
      return AP.utility.Base64.encode(encoded);
    },

    decodeValue: function(value) {
      var decoded, error;
      if (value) {
        decoded = AP.utility.Base64.decode(value);
      }
      try {
        decoded = JSON.parse(decoded);
      } catch (_error) {
        error = _error;
      }
      return decoded != null ? decoded[0] : void 0;
    },

    getKeyString: function(key) {
      var strKey;
      strKey = this.encodeValue(key);
      return strKey;
    },

    getQualifiedKey: function(key) {
      var strKey;
      strKey = this.getKeyString(key);
      return this.namespace + "-" + strKey;
    },

    getQualifiedExpireKey: function(key) {
      var strKey;
      strKey = this.getKeyString(key);
      return this.namespace + "-expire-" + strKey;
    },

    getExpirationDate: function(days) {
      var d;
      d = new Date();
      d.setTime(d.getTime() + (days * 86400000));
      return d;
    },

    get: function(key) {
      var expire, expireKey, qKey, record;
      qKey = this.getQualifiedKey(key);
      expireKey = this.getQualifiedExpireKey(key);
      record = this.getFromUnderlayingStorage(qKey);
      if (this.getFromUnderlayingStorage(expireKey)) {
        expire = parseInt(this.decodeValue(this.getFromUnderlayingStorage(expireKey)), 10);
      }
      if (_.isNumber(expire) && (expire <= Date.now())) {
        this.remove(key);
        record = this.getFromUnderlayingStorage(qKey);
      }
      return this.decodeValue(record);
    },

    set: function(key, value, expiresAfter) {
      var expirationDate, expireKey, qKey;
      qKey = this.getQualifiedKey(key);
      expireKey = this.getQualifiedExpireKey(key);
      expirationDate = this.getExpirationDate(expiresAfter || this.expiresAfter);
      this.setToUnderlayingStorage(qKey, this.encodeValue(value), expirationDate);
      return this.setToUnderlayingStorage(expireKey, this.encodeValue(expirationDate.getTime()), expirationDate);
    },

    remove: function(key) {
      var expireKey, qKey;
      qKey = this.getQualifiedKey(key);
      expireKey = this.getQualifiedExpireKey(key);
      this.removeFromUnderlayingStorage(qKey);
      return this.removeFromUnderlayingStorage(expireKey);
    }
    
  });
  
  return transientStore;
  
})(AP.utility.createClass);

AP.utility.TransientCookieStore = (function($class, _TransientStore) {
  
  var transientCookieStore = $class({
    
    extends: _TransientStore,
    
    static: {
      supported: (function() {
        var actualValue, key, supported, value;
        supported = window.document.cookie != null;
        if (supported) {
          key = _.uniqueId('ap-cookie-support-test');
          value = 'success';
          AP.utility.Cookie.set(key, value);
          actualValue = AP.utility.Cookie.get(key);
          if (value !== actualValue) {
            supported = false;
          }
        }
        return supported;
      })()
    },
    
    _constructor: function TransientCookieStore() {
      AP.utility.TransientCookieStore._super.constructor.apply(this, arguments);
    },
    
    getFromUnderlayingStorage: function(qualifiedKey) {
      var value;
      value = AP.utility.TransientCookieStore._super.getFromUnderlayingStorage.apply(this, arguments);
      if (AP.utility.TransientCookieStore.supported) {
        value = AP.utility.Cookie.get(qualifiedKey);
      }
      return value;
    },

    setToUnderlayingStorage: function(qualifiedKey, value, expirationDate) {
      AP.utility.TransientCookieStore._super.setToUnderlayingStorage.apply(this, arguments);
      if (AP.utility.TransientCookieStore.supported) {
        return AP.utility.Cookie.set(qualifiedKey, value, expirationDate);
      }
    },

    removeFromUnderlayingStorage: function(qualifiedKey) {
      AP.utility.TransientCookieStore._super.removeFromUnderlayingStorage.apply(this, arguments);
      if (AP.utility.TransientCookieStore.supported) {
        return AP.utility.Cookie.del(qualifiedKey);
      }
    },
    
  });
  
  return transientCookieStore;
  
})(AP.utility.createClass, AP.utility.TransientStore);

AP.utility.TransientLocalStore = (function($class, _TransientStore) {
  
  var transientLocalStore = $class({
    
    extends: _TransientStore,
    
    static: {
      supported: window.localStorage != null
    },
    
    _constructor: function TransientLocalStore() {
      AP.utility.TransientLocalStore._super.constructor.apply(this, arguments);
    },
    
    storage: window.localStorage,

    getFromUnderlayingStorage: function(qualifiedKey) {
      var value;
      value = AP.utility.TransientLocalStore._super.getFromUnderlayingStorage.apply(this, arguments);
      if (AP.utility.TransientLocalStore.supported) {
        value = this.storage.getItem(qualifiedKey);
      }
      return value;
    },

    setToUnderlayingStorage: function(qualifiedKey, value, expirationDate) {
      AP.utility.TransientLocalStore._super.setToUnderlayingStorage.apply(this, arguments);
      if (AP.utility.TransientLocalStore.supported) {
        return this.storage.setItem(qualifiedKey, value);
      }
    },

    removeFromUnderlayingStorage: function(qualifiedKey) {
      AP.utility.TransientLocalStore._super.removeFromUnderlayingStorage.apply(this, arguments);
      if (AP.utility.TransientLocalStore.supported) {
        return this.storage.removeItem(qualifiedKey);
      }
    }
    
  });
  
  return transientLocalStore;
    
})(AP.utility.createClass, AP.utility.TransientStore);

AP.utility.TransientLargeLocalStore = (function($class, _TransientStore) {
  
  var transientLargeLocalStore = $class({
    
    extends: _TransientStore,
    
    static: {
      supported: window.LargeLocalStorage != null
    },
    
    storage: null,

    storageCapacity: 64 * 1024 * 1024,

    storageName: 'large-local-storage',
    
    _constructor: function TransientLargeLocalStore() {
      AP.utility.TransientLargeLocalStore._super.constructor.apply(this, arguments);
      if (AP.utility.TransientLargeLocalStore.supported) {
        this.storage = new LargeLocalStorage({
          size: this.storageCapacity,
          name: this.namespace + "-" + this.storageName
        });
      }
    },
    
    getFromUnderlayingStorage: function(qualifiedKey) {
      if ((this.storage != null) && AP.utility.TransientLargeLocalStore.supported) {
        return this.storage.initialized.then((function(_this) {
          return function() {
            return _this.storage.getContents(qualifiedKey);
          };
        })(this));
      } else {
        return AP.utility.TransientLargeLocalStore._super.getFromUnderlayingStorage.apply(this, arguments);
      }
    },

    setToUnderlayingStorage: function(qualifiedKey, value, expirationDate) {
      if ((this.storage != null) && AP.utility.TransientLargeLocalStore.supported) {
        return this.storage.initialized.then((function(_this) {
          return function() {
            return _this.storage.setContents(qualifiedKey, value);
          };
        })(this));
      } else {
        return AP.utility.TransientLargeLocalStore._super.setToUnderlayingStorage.apply(this, arguments);
      }
    },

    removeFromUnderlayingStorage: function(qualifiedKey) {
      if ((this.storage != null) && AP.utility.TransientLargeLocalStore.supported) {
        return this.storage.initialized.then((function(_this) {
          return function() {
            return _this.storage.rm(qualifiedKey);
          };
        })(this));
      } else {
        return AP.utility.TransientLargeLocalStore._super.removeFromUnderlayingStorage.apply(this, arguments);
      }
    },

    get: function(key, options) {
      var callback, expireKey, qKey, ref;
      if (options == null) {
        options = {};
      }
      qKey = this.getQualifiedKey(key);
      expireKey = this.getQualifiedExpireKey(key);
      callback = function(value) {
        if (value != null) {
          if (_.isFunction(options.success)) {
            return options.success(value);
          }
        } else if (_.isFunction(options.error)) {
          return options.error();
        }
      };
      if ((this.storage != null) && (_.isFunction(options.success || _.isFunction(options.error)))) {
        return (ref = this.storage) != null ? ref.initialized.then((function(_this) {
          return function() {
            return _this.getFromUnderlayingStorage(qKey).then(function(record) {
              return _this.getFromUnderlayingStorage(expireKey).then(function(expireRecord) {
                var expire, value;
                if (expireRecord) {
                  expire = +_this.decodeValue(expireRecord);
                }
                if (_.isNumber(expire) && (expire <= Date.now())) {
                  _this.remove(key);
                  record = null;
                }
                value = _this.decodeValue(record);
                return callback(value);
              });
            });
          };
        })(this)) : void 0;
      } else {
        return callback(AP.utility.TransientLargeLocalStore._super.get.apply(this, arguments));
      }
    }
    
  });
  
  return transientLargeLocalStore;
  
})(AP.utility.createClass, AP.utility.TransientStore);

/**
* JSON utilities class
*
* @module AP
* @submodule utility
* @class JSON
* @static
*/
AP.utility.JSON = (function($class) {

  /* JSONPath 0.8.0 - XPath for JSON
   *
   * Copyright (c) 2007 Stefan Goessner (goessner.net)
   * Licensed under the MIT (MIT-LICENSE.txt) licence.
   */
  function jsonPath(obj, expr, arg) {
      var P = {
          resultType: arg && arg.resultType || "VALUE",
          result: [],
          normalize: function(expr) {
              var subx = [];
              return expr.replace(/[\['](\??\(.*?\))[\]']/g, function($0,$1){return "[#"+(subx.push($1)-1)+"]";})
                  .replace(/'?\.'?|\['?/g, ";")
                  .replace(/;;;|;;/g, ";..;")
                  .replace(/;$|'?\]|'$/g, "")
                  .replace(/#([0-9]+)/g, function($0,$1){return subx[$1];});
          },
          asPath: function(path) {
              var x = path.split(";"), p = "$";
              for (var i=1,n=x.length; i<n; i++)
                  p += /^[0-9*]+$/.test(x[i]) ? ("["+x[i]+"]") : ("['"+x[i]+"']");
              return p;
          },
          store: function(p, v) {
              if (p) P.result[P.result.length] = P.resultType == "PATH" ? P.asPath(p) : v;
              return !!p;
          },
          trace: function(expr, val, path) {
              if (expr) {
                  var x = expr.split(";"), loc = x.shift();
                  x = x.join(";");
                  if (val && val.hasOwnProperty(loc))
                      P.trace(x, val[loc], path + ";" + loc);
                  else if (loc === "*")
                      P.walk(loc, x, val, path, function(m,l,x,v,p) { P.trace(m+";"+x,v,p); });
                  else if (loc === "..") {
                      P.trace(x, val, path);
                      P.walk(loc, x, val, path, function(m,l,x,v,p) { typeof v[m] === "object" && P.trace("..;"+x,v[m],p+";"+m); });
                  }
                  else if (/,/.test(loc)) { // [name1,name2,...]
                      for (var s=loc.split(/'?,'?/),i=0,n=s.length; i<n; i++)
                          P.trace(s[i]+";"+x, val, path);
                  }
                  else if (/^\(.*?\)$/.test(loc)) // [(expr)]
                      P.trace(P.eval(loc, val, path.substr(path.lastIndexOf(";")+1))+";"+x, val, path);
                  else if (/^\?\(.*?\)$/.test(loc)) // [?(expr)]
                      P.walk(loc, x, val, path, function(m,l,x,v,p) { if (P.eval(l.replace(/^\?\((.*?)\)$/,"$1"),v[m],m)) P.trace(m+";"+x,v,p); });
                  else if (/^(-?[0-9]*):(-?[0-9]*):?([0-9]*)$/.test(loc)) // [start:end:step]  phyton slice syntax
                      P.slice(loc, x, val, path);
              }
              else
                  P.store(path, val);
          },
          walk: function(loc, expr, val, path, f) {
              if (val instanceof Array) {
                  for (var i=0,n=val.length; i<n; i++)
                      if (i in val)
                          f(i,loc,expr,val,path);
              }
              else if (typeof val === "object") {
                  for (var m in val)
                      if (val.hasOwnProperty(m))
                          f(m,loc,expr,val,path);
              }
          },
          slice: function(loc, expr, val, path) {
              if (val instanceof Array) {
                  var len=val.length, start=0, end=len, step=1;
                  loc.replace(/^(-?[0-9]*):(-?[0-9]*):?(-?[0-9]*)$/g, function($0,$1,$2,$3){start=parseInt($1||start);end=parseInt($2||end);step=parseInt($3||step);});
                  start = (start < 0) ? Math.max(0,start+len) : Math.min(len,start);
                  end   = (end < 0)   ? Math.max(0,end+len)   : Math.min(len,end);
                  for (var i=start; i<end; i+=step)
                      P.trace(i+";"+expr, val, path);
              }
          },
          eval: function(x, _v, _vname) {
              try { return $ && _v && eval(x.replace(/@/g, "_v")); }
              catch(e) { throw new SyntaxError("jsonPath: " + e.message + ": " + x.replace(/@/g, "_v").replace(/\^/g, "_a")); }
          }
      };

      var $ = obj;
      if (expr && obj && (P.resultType == "VALUE" || P.resultType == "PATH")) {
          P.trace(P.normalize(expr).replace(/^\$;/,""), obj, "$");
          return P.result.length ? P.result : false;
      }
  }


  function fromXml(xml) {
  	// Create the return object
  	var obj = {};

  	if (xml.nodeType == 1) { // element
  		// do attributes
  		if (xml.attributes.length > 0) {
  			for (var j = 0; j < xml.attributes.length; j++) {
  				var attribute = xml.attributes.item(j);
  				obj[attribute.nodeName] = attribute.nodeValue;
  			}
      }
  	} else if (xml.nodeType == 2 || xml.nodeType == 3) { // text
  		obj = xml.nodeValue;
  	}

  	// do children
  	if (xml.hasChildNodes() && xml.nodeType != 2) {
  		for(var i = 0; i < xml.childNodes.length; i++) {
  			var item = xml.childNodes.item(i);
  			var nodeName = item.nodeName;
  			if (typeof(obj[nodeName]) == "undefined") {
  				obj[nodeName] = fromXml(item);
  			} else {
  				if (typeof(obj[nodeName].push) == "undefined") {
  					var old = obj[nodeName];
  					obj[nodeName] = [];
  					obj[nodeName].push(old);
  				}
  				obj[nodeName].push(fromXml(item));
  			}
  		}
  	}
  	return obj;
  };

  var _JSON = $class({
    _constructor: function JSON() {},

    static: {
      /**
      * Select certain properties from an object based on a JSONPath selector expression
      * @method jsonPath
      * @param {Object} object to get the properties from
      * @param {String} selector JSONPath expression
      * @return {Object} selected properties object or false if not found
      * @static
      */
      jsonPath: function(obj, path) {
        return jsonPath(obj, path);
      },
      /**
      * Parse an XML node into a javascript object
      * @method fromXml
      * @param {Object} XML node to parse
      * @return {Object} javascript object equivalent of the XML node
      * @static
      */
      fromXml: function(xml) {
        return fromXml(xml);
      }
    }
  });

  return _JSON;

})(AP.utility.createClass);

/**
* XML utilities class
*
* @module AP
* @submodule utility
* @class XML
* @static
*/
AP.utility.XML = (function($class) {

  function objectToXmlString(name, obj) {
    var xmlString = '', i;
    if(!(obj instanceof Array || obj instanceof Function || obj instanceof Object)) {
      return '<'+name+'>'+obj+'</'+name+'>';
    }

    if(obj instanceof Date) {
      return '<'+name+'>'+obj+'</'+name+'>';
    } else if(obj instanceof Array) {
      for(i=0; i<obj.length; i++) {
        xmlString += objectToXmlString(name, obj[i]);
      }
    } else if(obj instanceof Object) {
      xmlString = '<'+name+'>';
      for(i in obj) {
        xmlString += objectToXmlString(i, obj[i]);
      }
      xmlString += '</'+name+'>';
    }

    return xmlString;
  }

  var _XML = $class({
    _constructor: function XML() {},

    static: {

      /**
      * Convert a javascript object into an XML string
      * @method toXmlString
      * @param {String} name to use as top level XML tag
      * @param {Object} javascript object to stringify
      * @return {String} XML string version of the object
      * @static
      */
      objectToXmlString: function(name, obj) {
        var xmlString = '<?xml version="1.0" encoding="UTF-8"?>';
        xmlString += objectToXmlString(name, obj);
        return xmlString;
      },

      xmlToString: function(xml) {
        var xmlString;
        //IE
        if (window.ActiveXObject){
            xmlString = xml.xml;
        }
        // code for Mozilla, Firefox, Opera, etc.
        else{
            xmlString = (new XMLSerializer()).serializeToString(xml);
        }
        return xmlString;
      }
    }
  });

  return _XML;

})(AP.utility.createClass);

AP.auth = (AP.auth === null) ? {} : AP.auth;
/**
Provides methods for user authentication and deauthentication.

To login:
@example
    AP.auth.Authentication.login({
        username: "johndoe",
        password: "doe123"
    });

    AP.auth.Authentication.isAuthenticated();
    // true

To logout:
@example
    AP.auth.Authentication.logout();
    
    AP.auth.Authentication.isAuthenticated();
    # false

@module AP
@submodule auth
@class Authentication
@static
 */
AP.auth.Authentication = (function($class, Backbone) {

	
	var authentication = $class({
  
    _constructor: function Authentication() {},
    
    static: {
      
      
      
      /**
      Custom header to send/retrieve the session ID when using CORS.
      @private
      @property _authSessionIdHeaderName
      @type String
       */
      _authSessionIdHeaderName: "X-Session-Id",
      
      /**
      Transient storage instance for persisting session data.
      @private
      @property store
      @type AP.utility.TransientStore
       */
      store: (function() {
        if(AP.utility.TransientLocalStore.supported) {
          return new AP.utility.TransientLocalStore({ namespace: "ap-auth" });
        } else {
          return new AP.utility.TransientCookieStore({ namespace: "ap-auth" });
        }
      })(),
      
      /**
      Executes login request with passed `credentials`.
      @method login
      @static
      @param {Object} credentials the user credentials
       */
      login: function(credentials) {
        if(!this.isAuthenticated()) {
          return this.authenticate(credentials);
        }
      },
      
      /**
      Executes logout request.
      @method logout
      @static
       */
      logout: function() {
        if(this.isAuthenticated()) {
          return this.deauthenticate();
        }
      },
      
      /**
      @method isAuthenticatable
      @static
      @return {Boolean} `true` if authentication is enabled
       */
      isAuthenticatable: function() {
        return !!this.authenticationSettings;
      },
      
      /**
      @method isAuthenticated
      @static
      @return {Boolean} `true` if a user is logged-in
       */
      isAuthenticated: function() {
        return !!(this.getAuthSessionData() && this.getAuthSessionId());
      },
      
      /**
      Performs authentication request with HTTP basic auth.  Upon a successful
      login the user object returned by the API is stored for later use.
      @method authenticate
      @static
      @param {Object} credentials user credentials object, for example:
      `{"username": "johndoe", "password": "doe123"}`.
       */
      authenticate: function(credentials) {
        var AP = window.AP;
        var settings = this.getAuthenticationSettings();
        $.ajax({
          url: settings.authentication_url, //+ ".json",
          type: "POST",
          dataType: "json",
          data: credentials,
          
          beforeSend: function(request, settings) {
            var baseUrl = AP.utility.Url.parseUrl(AP.baseUrl);
            var requestUrl = AP.utility.Url.parseUrl(settings.url);
            var hasNoRequestServer = !(requestUrl.host && requestUrl.protocol);
            var isRequestUrlSameAsBaseUrl = (
              (baseUrl.protocol === requestUrl.protocol) &&
              (baseUrl.host === requestUrl.host) &&
              (baseUrl.port === requestUrl.port)
            ) || hasNoRequestServer;
            if(isRequestUrlSameAsBaseUrl) {
              // send the auth credentials
              request.setRequestHeader("Authorization", this.makeHTTPBasicAuthHeader(credentials))
            }
            // point the request to the proper server
            if(!AP.useMockServer && AP.baseUrl && hasNoRequestServer) {
              // if no host or protocol, add the base URL
              _.extend(settings, {
                crossDomain: true,
                url: AP.baseUrl+settings.url,
                xhrFields: _.extend({}, settings.xhrFields, { withCredentials: true })
              });
            }
          }.bind(this),
          
          success: function(response, status, xhr) {
            // save auth session data into store
            if(response) {
              this.store.set(this.getAuthSessionDataKey(), response, 7)
            }
            // save auth session ID into store
            var sessionId = xhr.getResponseHeader(this.getAuthSessionIdHeaderName());
            if(!sessionId && typeof settings.session_id_field !== "undefined" && settings.session_id_field !== null) {
              sessionId = (typeof response !== "undefined" && response !== null) ? response[settings.session_id_field] : void 0;
            }
            if(sessionId) {
              this.store.set(this.getAuthSessionIdKey(), sessionId, 7);
            }
            // successful login requires auth session data and an auth session ID
            if(response && sessionId) {
              /**
              @event 'auth:authenticated'
              An authenticated event is triggered after a successful login.
               */
              this.trigger("auth:authenticated");
            } else {
              this.trigger("auth:error");
            }
          }.bind(this),
          
          error: function() {
            /**
            @event 'auth:error'
            An auth error event is triggered if a login or logout fails for
            any reason.
             */
            this.trigger("auth:error");
          }.bind(this)
        });
      },
      
      /**
      Performs deauthentication request.  Upon a successful logout, stored user data
      is removed.
      @method deauthenticate
      @static
       */
      deauthenticate: function() {
        var AP = window.AP;
        var settings = this.getAuthenticationSettings();
        $.ajax({
          url: settings.deauthentication_url, //+ "json",
          type: "POST",
          dataType: "text",
          
          beforeSend: function(request, settings) {
            var baseUrl = AP.utility.Url.parseUrl(AP.baseUrl);
            var requestUrl = AP.utility.Url.parseUrl(settings.url);
            var hasNoRequestServer = !(requestUrl.host && requestUrl.protocol);
            var isRequestUrlSameAsBaseUrl = (
              (baseUrl.protocol === requestUrl.protocol) &&
              (baseUrl.host === requestUrl.host) &&
              (baseUrl.port === requestUrl.port)
            ) || hasNoRequestServer;
            if(isRequestUrlSameAsBaseUrl) {
              // send the session ID with the deauthentication request
              var authSessionIdHeader = this.getAuthSessionIdHeaderName();
              var authSessionId = this.getAuthSessionId();
              if(authSessionId) {
                request.setRequestHeader(authSessionIdHeader, authSessionId); 
              }
            }
            // point the request to the proper server
            if(!AP.useMockServer && AP.baseUrl && hasNoRequestServer) {
              // if no host or protocol, add the base URL
              _.extend(settings, {
                crossDomain: true,
                url: AP.baseUrl+settings.url,
                xhrFields: _.extend({}, settings.xhrFields, { withCredentials: true })
              });
            }
          }.bind(this),
          
          complete: function(response) {
            this.destroySession();
          }.bind(this)
        });
      },
      
      /**
      Destroys session by deleting data in auth store.
      @private
      @method destroySession
      @static
       */
      destroySession: function() {
        // delete auth data
        this.store.remove(this.getAuthSessionDataKey());
        this.store.remove(this.getAuthSessionIdKey());
        /**
        @event auth:deauthenticated
        A deauthenticated event is triggered after the session is destroyed.
         */
        this.trigger("auth:deauthenticated");
      },
      
      /**
      Returns the name of the custom session ID header.
      @method getAuthSessionIdHeaderName
      @static
       */
      getAuthSessionIdHeaderName: function() {
        return this._authSessionIdHeaderName;
      },
      
      /**
      Builds a base-URL-specific auth key.  Since multiple apps may
      sometimes be served from the same domain, auth keys must include the name
      of the base URL (API server) in the key name for uniqueness.
      @private
      @method getAuthSessionDataKey
      @static
      @return {String} auth store key, unique by base URL
       */
      getAuthSessionDataKey: function() {
        var baseName = "session";
        var baseUrl;
        if(AP.baseUrl) {
          baseUrl = AP.baseUrl.replace(/[^a-zA-Z\-0-9]/g, ''); 
        }
        if(baseUrl) {
          return baseName+"-"+baseUrl;
        } else {
          return baseName;
        }
      },
      
      /**
      Builds a key name from `getAuthSessionDataKey` with `-session-id` appended.
      @private
      @static
      @method getAuthSessionIdKey
      @return {String} auth session ID key name
       */
      getAuthSessionIdKey: function() {
        return this.getAuthSessionDataKey()+"-id";
      },
      
      /**
      Returns the auth session data (a user) from auth store if logged in.
      @method getAuthSessionData
      @static
      @return {Object/null} the authenticated user object
       */
      getAuthSessionData: function() {
        return this.store.get(this.getAuthSessionDataKey());
      },
      
      /**
      Returns the lookup field value (username) of the currently logged-in user.
      @return {Object/null} the authenticated user's lookup field value (username)
       */
      getUsername: function() {
        var settings = this.getAuthenticationSettings();
        var credentials = this.getAuthSessionData();
        if(typeof credentials !== "undefined" && credentials !== null) {
          if(typeof settings !== "undefined" && settings !== null) {
            return credentials[settings.lookup_field];
          }
        }
      },
      
      /**
      Returns the role(s) of the currently logged-in user.
      @return {Object/null} the authenticated user's role(s)
       */
      getUserRole: function() {
        var settings = this.getAuthenticationSettings();
        var credentials = this.getAuthSessionData();
        if(typeof credentials !== "undefined" && credentials !== null) {
          if(typeof settings !== "undefined" && settings !== null) {
            return credentials[settings.role_field];
          }
        }
      },
      
      /**
      Returns the auth ID from auth store.
      @private
      @static
      @method getAuthSessionId
      @return {String/null} the current session ID
       */
      getAuthSessionId: function() {
        return this.store.get(this.getAuthSessionIdKey());
      },
      
      /**
      @private
      @static
      @method getAuthenticationSettings
      @return {Object/null} the authenticatable object if one is specified.
      Otherwise null.
       */
      getAuthenticationSettings: function() {
        return this.authenticationSettings || null;
      },
      
      /**
      @private
      @static
      @method getAuthenticatableObject
      @return {Object/null} the model specified as the authenticatable object if one
      is specified.  Otherwise null.
       */
      getAuthenticatableObject: function() {
        if(this.getAuthenticationSettings() !== null) {
         return window.AP.getActiveApp().getModel(this.getAuthenticationSettings().object_definition_id); 
        }
      },
      
      /**
      Builds a Base64-encoded HTTP basic auth header for use in an
      authentication request.
      @private
      @static
      @method makeHTTPBasicAuthHeader
      @param {Object} credentials the user credentials
      @return {String} Base-64 encoded HTTP basic auth header with user credentials
       */
      makeHTTPBasicAuthHeader: function(credentials) {
        var settings = this.getAuthenticationSettings();
        var lookup = credentials[settings.lookup_field];
        var match = credentials[settings.match_field];
        return "Basic "+AP.utility.Base64.encode([lookup, match].join(":"));
      }
      
    }
    
	});
  
  _.extend(authentication, Backbone.Events);
  
  // if server ever responds with 401, assume the session expired
  $.ajaxSetup({
    complete: _.debounce((function(auth) {
      return function(xhr, result) {
        if(xhr.status === 401 && result === "error") {
          auth.destroySession();
        }
      };
    })(authentication), 150)
  });
	
	return authentication;
	
})(AP.utility.createClass, Backbone);


if(AP.auth == null) { AP.auth = {}; }


/**
 * Authorizes arbitrary objects against the currently logged-in user (see
 * `AP.auth.Authentication`).  Any object may be made permission-based by adding
 * an auth rules field.  If the currently logged-in user has _any role_ specified
 * in the rules array, it is considered authorized.
 *
 * Example arbitrary permission-based object:
 * @example
 *    var myObject1 = {
 *      member1: "foo",
 *      rules: [{roles: 'manager'}, {roles: 'admin'}]
 *    };
 *    *authorized if logged-in user has _either_ `manager` _or_ `admin` roles
 *
 *    var myObject2 = {
 *      member: "bar",
 *      rules: [{roles: 'manager,admin'}]
 *    };
 *    *authorized if logged-in user has both `manager` and `admin` roles
 *
 * Example usage:
 * @example
 *    AP.auth.Authorization.isAuthorized(myObject1.rules)
 *    AP.auth.Authorization.isAuthorized(myObject2.rules)
 *
 * @module AP
 * @submodule auth
 * @class Authorization
 * @static
 * */
AP.auth.Authorization = (function($class) {
  
  
  var authorization = $class({
    
    _constructor: function Authorization() {},
    
    /**
     * class @static methods and properties
     */
    static: {
      /**
      @method isAuthorized
      @static
      @param {String} rules array of rule objects
      @return {Boolean} `true` if logged-in user has any role in at least one
      rule _or_ there are no rules
       */
      isAuthorized: function(rules) {
        if ((rules == null) || rules.length === 0) {
          return true;
        }
        return this._passesAnyRule(rules);
      },
      
      /**
      @private
      @method _passesAnyRule
      @static
      @param {String} rules array of rule objects
      @return {Boolean} `true` if logged-in user has any role in at least
      one rule
       */
      _passesAnyRule: function(rules) {
        var i, len, rule;
        for (i = 0, len = rules.length; i < len; i++) {
          rule = rules[i];
          if (this._passesRule(rule)) {
            return true;
          }
        }
        return false;
      },
      
      /**
      @private
      @method _passesRule
      @static
      @param {String} rule rule object
      @return {Boolean} `true` if logged-in user has any roles in rule object or
      rule has no roles specified
       */
      _passesRule: function(rule) {
        return this._ruleHasNoRoles(rule) || this._hasAnyRole(rule.roles);
      },
      
      
      /**
      @private
      @static
      @method _ruleHasNoRoles
      @param {String} rule rule object
      @return {Boolean} `true` if rule has no `roles` field
       */
      _ruleHasNoRoles: function(rule) {
        return !rule.hasOwnProperty('roles');
      },
      
      
      /**
      @private
      @static
      @method _hasAnyRole
      @param {String} roles_string string containing comma-separated role names
      @return {Boolean} `true` if logged-in user has any role in the roles string
       */
      _hasAnyRole: function(roles_string) {
        var i, len, ref, role, user_roles;
        user_roles = this._getRoles();
        ref = roles_string.split(',');
        for (i = 0, len = ref.length; i < len; i++) {
          role = ref[i];
          if (user_roles.indexOf($.trim(role)) >= 0) {
            return true;
          }
        }
        if (!roles_string && AP.auth.Authentication.isAuthenticated()) {
          return true;
        }
        return false;
      },
      
      
      /**
      @private
      @static
      @method _getRoles
      @return {String[]} array of roles for the currently logged-in user.  Returns
      an empty array if no user is logged in.
       */
      _getRoles: function() {
        var authSettings, data, roles, rolesField;
        authSettings = AP.auth.Authentication.getAuthenticationSettings();
        rolesField = authSettings.role_field;
        data = AP.auth.Authentication.getUserRole();
        roles = data != null ? data.split(',') : [];
        roles.map(function(x) {
          return $.trim(x);
        });
        return roles;
      } 
      
    }
  });
  
  return authorization;
  
})(AP.utility.createClass);

/**
Base model class.  In addition to the standard methods provided by the
[BackboneJS model class](http://backbonejs.org/#Model), this base model
implements full validations support.

This model should be subclassed, not used directly.  For example:
@example
    var Person = AP.utility.createClass({
        extends: AP.model.Model,
        static: {
            modelId: "person"
        },
        _constructor: function Person() {
            Person._super.constructor.apply(this, arguments);
        },
        name: 'Person',
        urlRoot: "/person/",
        fieldDefinitions: [
            {name: "name", type: "string"},
            {name: "age", type: "integer"}
        ],
        validations: [
            {field: "name", validate: "type", is: "string"},
            {field: "name", validate: "required"},
            {field: "age", validate: "type", is: "integer"}
        ]
    });

For full model usage documentation,
refer to [Backbone JS](http://backbonejs.org/#Model).

@module AP
@submodule model
@class Model 
@extends Backbone.Model
 */
 AP.model.Model = (function($class, Backbone) {
   
   var model = $class({
     extends: Backbone.Model,
     
     _constructor: function Model() {
       AP.model.Model._super.constructor.apply(this, arguments);
     },
     
     /**
    An internal reference to initialized relationship instances for this
    model instance.
    @property _relationships
    @type AP.relationship.Relationship[]
    @private
     */
    _relationships: null,

    /**
    An internal reference to the validator instance used by the model instance.
    @property _validator
    @type AP.utility.Validator
    @private
     */
    _validator: null,

    /**
    An array of validation configurations.  For more information about
    validations, refer to
    the {@link AP.utility.Validator Validator documentation}.
    @property validations
    @type Object[]
     */
    validations: [],
    
    initialize: function() {
      this.initializeRelationships();
      this.initializeValidations();
      return this.on('sync', (function(_this) {
        return function() {
          var ref;
          return (ref = _this.constructor.trigger) != null ? ref.apply(_this.constructor, ['sync'].concat(_.toArray(arguments))) : void 0;
        };
      })(this));
    },
    
    initializeRelationships: function() {
      this._relationships = [];
      return _.each(this.relationshipDefinitions, (function(_this) {
        return function(definition) {
          var relationship;
          relationship = new AP.relationship[definition.type](_this, definition);
          return _this._relationships.push(relationship);
        };
      })(this));
    },

    initializeValidations: function() {
      this.validations = _.clone(this.validations);
      return this._validator = new AP.utility.Validator;
    },
    
    /**
    Retrieves the initialized relationship instance of the given name.
    @method getRelationship
    @param {String} name the name of the relationship
    @return {AP.relationship.Relationship} matching relationship instance
     */
    getRelationship: function(name) {
      return _.where(this._relationships, {
        name: name
      })[0];
    },

    /**
    Performs a `fetch` on the specified relationship.
    @method fetchRelated
    @param {String} name the name of the relationship
    @param {Function} callback called when fetching completes
     */
    fetchRelated: function(name, callback) {
      var ref;
      return (ref = this.getRelationship(name)) != null ? ref.fetch(callback) : void 0;
    },

    /**
    Appends `.json` to the end of the default URL.
    @method url
    @return {String} the URL for this model instance
     */
    url: function() {
      return (AP.model.Model._super.url.apply(this, arguments)) + ".json";
    },

    /**
    Simple proxy to the model's underlaying `fetch` method inherited
    from Backbone JS `Model`.
    @method reload
     */
    reload: function() {
      return this.fetch.apply(this, arguments);
    },

    /**
    Simple override of the built-in Backbone.js `destroy` method to enable
    `before_delete` event handlers.
    @method destroy
     */
    destroy: function() {
      /**
      @event 'before_delete'
      Triggered on a model instance immediately before being destroyed.
       */
      this.trigger('before_delete');
      return AP.model.Model._super.destroy.apply(this, arguments);
    },

    /**
    Simple proxy to the model's underlaying `destroy` method inherited
    from Backbone JS `Model`.
    @method delete
     */
    delete: function() {
      return this.destroy.apply(this, arguments);
    },

    /**
    Simple override of the built-in Backbone.js `set` method to enable
    `before_change` event handlers.
    @method set
     */
    set: function(key, val, options) {
      var attrs;
      if (options == null) {
        options = {};
      }
      if (_.isObject(key)) {
        attrs = key;
        options = val || {};
      } else {
        attrs = {};
        attrs[key] = val;
      }
      if (attrs) {

        /**
        @event 'before_change'
        Triggered on a model instance immediately before being changed.
         */
        this.trigger('before_change', this, attrs);
      }
      return AP.model.Model._super.set.apply(this, arguments);
    },

    /**
    Simple override of the built-in Backbone.js `save` method to enable
    `before_save` event handlers.
    @method save
     */
    save: function() {
      /**
      @event 'before_save'
      Triggered on a model instance immediately before being saved.
       */
      this.trigger('before_save');
      return AP.model.Model._super.save.apply(this, arguments);
    },

    /**
    Validates the model instance and returns any errors reported by the instance's
    validator instance.
    @method errors
    @return {String[]} the errors array reported by the validator
    instance's {@link AP.utility.Validator#errors errors method}.
     */
    errors: function() {
      this.validate();
      return this._validator.errors();
    },

    /**
    Validates the model instance and returns `true` if the instance is valid,
    otherwise `false`.
    @method isValid
    @return {Boolean} the value reported by the validator
    instance's {@link AP.utility.Validator#isValid isValid method}.
     */
    isValid: function() {
      this.validate();
      return this._validator.isValid();
    },


    /**
    Copies the instance data (or optional `values` argument) and the instance
    validations into the {@link #_validator validator instance}.  Returns
    `undefined` if values are valid, otherwise returns
    an {@link #errors errors array}.
    @method validate
    @param {Object} values optional hash of field name/value pairs to validate 
    against this instance's validations.  Pass `values` to validate arbitrary
    data instead of instance data.
    @return {String[]/undefined} if valid, returns `undefined` as expected by
    the underlaying [Backbone JS model class](http://backbonejs.org/#Model).
    If invalid, returns the {@link #errors errors array}.
     */
    validate: function(values) {
      this._validator.data = _.extend({}, values || this.attributes);
      this._validator.validations = this.validations.slice();
      if (this._validator.validate()) {
        return void 0;
      } else {
        return this._validator.errors();
      }
    },

    /**
    Recurses into nested models and calls toJSON.
    @method toJSON
    @return {Object} JSON representation of this model instance
     */
    toJSON: function() {
      var json, key, value;
      json = AP.model.Model._super.toJSON.apply(this, arguments);
      for (key in json) {
        value = json[key];
        if (_.isFunction(value != null ? value.toJSON : void 0)) {
          json[key] = value.toJSON();
        }
      }
      return json;
    }
    
   });
   
   return model;
   
 })(AP.utility.createClass, Backbone);
 
/**
Base relationship class.  Provides attributes and simple initialization common
to all relationships.  This class should not be used directly but subclassed.

Three relationship types are provided for convience.  Please refer to the
relationship documentation pages for more information:

- {@link AP.relationship.BelongsTo BelongsTo}
- {@link AP.relationship.HasMany HasMany}
- {@link AP.relationship.HasOne HasOne}

Relationships should not be instantiated directly.  Please see
{@link AP.model.Model#relationshipDefinitions} for more information on
declaring relationships.

@module AP
@submodule relationship
@class Relationship
@extends Backbone.Events
 */
AP.relationship.Relationship = (function($class, Backbone) {
   
   var relationship = $class({
     
     
    _constructor: function Relationship() {
     this.initialize.apply(this, arguments);
    },
     /**
    The owning model instance of this relationship.
    @property owner
    @type AP.model.Model
     */
    owner: null,

    /**
    The field name for this relationship.  A relationship inserts a field into the
    owner model instance with a default value of {@link #getDefault}.
    The field name is preferably a variant of {@link #foreignKey}.  For instance,
    if `foreignKey` is `user_id`, then `name` should be `user` (or `users` for
    has-many relationships).
    @property name
    @type String
     */
    name: null,

    /**
    Field name where the value of the relationship may be found.  In belongs-to
    relationships, `foreignKey` is found on the owner model instance.  In has-many
    and has-one relationships, `foreignKey` is found on the target model
    instance(s).  See {@link #model}.
    @property foreignKey
    @type String
     */
    foreignKey: null,

    /**
    A string representing the class name of a model or a proper model class.  The
    model class is the target for this relationship.  Related instances must be of
    this model.
    @property model
    @type String/AP.model.Model
     */
    model: null,

    /**
    A string representing the class name of a collection or a proper collection
    class.  The collection class is used by this relationship to store the related
    instance(s).  On initialization of this relationship, the collection is
    instantiated and this property becomes a reference to that instance.
    @property collection
    @type String/AP.collection.Collection
     */
    collection: null,

    initialize: function(owner, options) {
      var base;
      this.options = options != null ? options : {};
      this.app = typeof (base = window.AP).getActiveApp === "function" ? base.getActiveApp() : void 0;
      this.owner = owner || this.owner;
      this.name = this.options.name || this.name;
      this.foreignKey = this.options.foreignKey || this.foreignKey;
      this.initializeModel();
      this.initializeCollection();
      this.initializeDefault();
      return this.initializeEvents();
    },

    initializeModel: function() {
      var ref;
      this.model = this.options.model || this.model;
      return this.model = ((ref = this.app) != null ? ref.getModel(this.model) : void 0) || this.model;
    },

    initializeCollection: function() {
      var ref;
      this.collection = this.options.collection || this.collection;
      return this.collection = new (((ref = this.app) != null ? ref.getCollection(this.collection) : void 0) || this.collection);
    },

    initializeEvents: function() {
      this.listenTo(this.collection, 'add', this.onCollectionAdd);
      this.listenTo(this.collection, 'remove', this.onCollectionRemove);
      this.listenTo(this.collection, 'sync', this.onCollectionSync);
      return this.listenTo(this.collection, 'change', this.onRelatedChange);
    },

    initializeDefault: function() {
      return this.owner.set(this.name, this.getDefault(), {
        silent: true
      });
    },

    /**
    Handles the addition of instances into {@link #collection}.  Subclasses should
    implement this method if necessary.
    @method onCollectionAdd
    @param {AP.model.Model} record a model instance added to the collection
     */
    onCollectionAdd: function(record) {},

    /**
    Handles the addition of instances into {@link #collection}.  Subclasses should
    implement this method if necessary.
    @method onCollectionRemove
    @param {AP.model.Model} record a model instance added to the collection
     */
    onCollectionRemove: function(record) {},

    /**
    Called whenever {@link #collection} is synced with the server.  Subclasses
    should implement this method if necessary.
    @method onCollectionSync
     */
    onCollectionSync: function() {},

    /**
    Called whenever an instance in {@link #collection} is changed.  By default,
    this method triggers a change event on the owner's {@link #name} field, the
    field generated by the relationship.
    @method onRelatedChange
     */
    onRelatedChange: function() {
      return this.owner.trigger("change:" + this.name);
    },


    /**
    Returns a default value for the generated {@link #name} field on
    {@link #owner}.  The generated field is created using the default value as
    soon as the relationship is initialized.
    @method getDefault
    @return {Object} default value for generated field on owner
     */
    getDefault: function() {
      return null;
    },

    /**
    Returns a hash of parameters passed to the {@link #collection} `query` method.
    @method getQuery
    @return {Object} parameters passed to collection's query method
     */
    getQuery: function() {
      return {};
    },

    /**
    Query the underlaying {@link #collection} and execute `callback` upon success.
    The fetch method gets the model instance(s) for this relationship from the
    server.  Depending on the relationship type, the value of the {@link #name}
    field may be a single model instance or the {@link #collection} itself.  No
    default implementation of this method is provided.  Subclasses should provide
    an implementation.
    @method fetch
    @param {Function} callback function to execute upon fetch success.
     */
    fetch: function(callback) {
      return null;
    }
     
   });
   
   _.extend(relationship.prototype, Backbone.Events);
   
   return relationship;
   
 })(AP.utility.createClass, Backbone);

/**
A belongs-to relationship is one where the owner model instance is related to
no more than one other model instance.  In this scheme, the relationship
information is stored in a foreign key on the owner model.  The related instance
is stored in a generated field {@link #name} once fetched.

For example, if the foreign key is `user_id` and the relationship name is `user`
then the related instance may be obtained by calling:
@example
    ownerInstance.get('user')
    // set related instance
    ownerInstance.set('user', userInstance)
    // or set foreign key
    ownerInstance.set('user_id', 4)
    // setting the foreign key directly will null the related instance:
    ownerInstance.get('user') == null // evaluates to true

A has-one relationship is similar, except the relationship information is stored
in a foreign key on the target model, not the owner.  See
{@link AP.relationship.HasOne} for more information about has-one relationships.

Relationships should not be instantiated directly.  Please see
{@link AP.model.Model#relationshipDefinitions} for more information on
declaring relationships.

@module AP
@submodule relationship
@class BelongsTo
@extends AP.relationship.Relationship
 */
AP.relationship.BelongsTo = (function($class, _Relationship) {
  
  var belongsTo = $class({
    extends: _Relationship,
    
    _constructor: function BelongsTo() {
      AP.relationship.BelongsTo._super.constructor.apply(this, arguments);
    },
    
    initialize: function() {
      AP.relationship.BelongsTo._super.initialize.apply(this, arguments);
      this.listenTo(this.owner, "change:" + this.foreignKey, this.onForeignKeyChange);
      return this.listenTo(this.owner, "change:" + this.name, this.onFieldForRelatedInstanceChange);
    },

    /**
    Sets the {@link #name} generated field on the owner model to the first model
    instance in the collection after syncing.
    @method onCollectionSync
     */
    onCollectionSync: function() {
      return this.owner.set(this.name, this.collection.first());
    },

    /**
    Called whenever the owner instance's {@link #foreignKey} field is changed.
    If the foreign key is different than the related instance in the generated
    {@link #name} field, the {@link #name} field is set to null.  To obtain the
    related instance, the relationship must be fetched again.
    @method onForeignKeyChange
     */
    onForeignKeyChange: function() {
      var ref;
      if (this.owner.get(this.foreignKey) !== ((ref = this.owner.get(this.name)) != null ? ref.get(this.model.prototype.idAttribute) : void 0)) {
        return this.owner.set(this.name, null);
      }
    },

    /**
    Called whenever the owner instance's {@link #name} field is changed.  If the
    ID of the related instance is different than the value of {@link #foreignKey},
    the foreign key field is updated with the related instance's ID.
    @method onFieldForRelatedInstanceChange
     */
    onFieldForRelatedInstanceChange: function() {
      var ref, relatedId;
      relatedId = (ref = this.owner.get(this.name)) != null ? ref.get(this.model.prototype.idAttribute) : void 0;
      if (relatedId && (this.owner.get(this.foreignKey) !== relatedId)) {
        return this.owner.set(this.foreignKey, relatedId);
      }
    },

    /**
    Returns a query used to obtain the related instance from the server.
    @method getQuery
    @return {Object} parameters used to query server for the related instance
     */
    getQuery: function() {
      var query;
      query = AP.relationship.BelongsTo._super.getQuery.apply(this, arguments);
      query[this.model.prototype.idAttribute] = this.owner.get(this.foreignKey);
      return query;
    },

    /**
    Querys the server for related instances.
    @method fetch
    @param {Function} callback function executed upon query success; called with
    one argument:  the related instance (if any)
     */
    fetch: function(callback) {
      return this.collection.query(this.getQuery(), {
        reset: true,
        success: (function(_this) {
          return function() {
            if (_.isFunction(callback)) {
              return callback(_this.owner, _this.collection.first());
            }
          };
        })(this)
      });
    },
    
  });
  
  return belongsTo;
  
})(AP.utility.createClass, AP.relationship.Relationship);

/**
A has-many relationship is one where the owner model instance is related to
any number of related instances.  In this scheme, the relationship
information is stored in a foreign key on the related instance(s).  The related
instances are stored in the {@link #collection} on a generated field
{@link #name} once fetched.

Relationships should not be instantiated directly.  Please see
{@link AP.model.Model#relationshipDefinitions} for more information on
declaring relationships.

@module AP
@submodule relationship
@class HasMany
@extends AP.relationship.Relationship
 */
AP.relationship.HasMany = (function($class, _Relationship) {
  
  var hasMany = $class({
    extends: _Relationship,
    
    _constructor: function HasMany() {
      AP.relationship.HasMany._super.constructor.apply(this, arguments);
    },
    
    initialize: function() {
      AP.relationship.HasMany._super.initialize.apply(this, arguments);
      this.listenTo(this.collection, "reset", this.onCollectionReset);
      return this.listenTo(this.collection, "change:" + this.foreignKey, this.onRelatedInstanceForeignKeyChange);
    },

    /**
    Sets the {@link #foreignKey} of the related instance to the ID of the owner
    instance when added to the collection.  Triggers a change event on the
    generated relationship field {@link #name}.
    @method onCollectionAdd
    @param {Object} record the added model instance
     */
    onCollectionAdd: function(record) {
      record.set(this.foreignKey, this.owner.get(this.owner.idAttribute));
      return this.owner.trigger("change:" + this.name);
    },

    /**
    Unset the {@link #foreignKey} of the related instance when removed from
    the collection.  Triggers a change event on the generated relationship
    field {@link #name}.
    @method onCollectionRemove
    @param {Object} record the removed model instance
     */
    onCollectionRemove: function(record) {
      if (record.get(this.foreignKey) === this.owner.get(this.owner.idAttribute)) {
        record.set(this.foreignKey, null);
      }
      return this.owner.trigger("change:" + this.name);
    },

    /**
    Triggers a change event on the generated relationship field {@link #name} when
    the collection is reset.  See {@link #filterCollection}.
    @method onCollectionReset
     */
    onCollectionReset: function() {
      return this.owner.trigger("change:" + this.name);
    },

    /**
    Calls {@link #filterCollection} whenever the foreign key field of a related
    instance is changed.
    @method onRelatedInstanceForeignKeyChange
     */
    onRelatedInstanceForeignKeyChange: function() {
      return this.filterCollection();
    },

    /**
    Removes any stale related instances from the collection.  Stale instances are
    instances with foreign keys that no longer refer to the owner instance.
    See {@link #onCollectionReset}.
    @method filterCollection
     */
    filterCollection: function() {
      var filtered, whereClause;
      whereClause = {};
      whereClause[this.foreignKey] = this.owner.get(this.owner.idAttribute);
      filtered = this.collection.where(whereClause);
      return this.collection.reset(filtered, {
        reset: true
      });
    },

    /**
    Returns the default value of the generated field {@link #name}.  For many-to-
    many relationships, the value is always the {@link #collection} instance.
    @method getDefault
    @return {AP.collection.Collection} the collection instance declared
    by {@link #collection}.
     */
    getDefault: function() {
      return this.collection;
    },

    /**
    Returns a query used to obtain the related instances from the server.
    @method getQuery
    @return {Object} parameters used to query server for the related instances
     */
    getQuery: function() {
      var query;
      query = AP.relationship.HasMany._super.getQuery.apply(this, arguments);
      query[this.foreignKey] = this.owner.get(this.owner.idAttribute);
      return query;
    },

    /**
    Querys the server for related instances.
    @method fetch
    @param {Function} callback function executed upon query success; called with
    one argument:  the collection of related instances
     */
    fetch: function(callback) {
      return this.collection.query(this.getQuery(), {
        reset: true,
        success: (function(_this) {
          return function() {
            if (_.isFunction(callback)) {
              return callback(_this.owner, _this.collection);
            }
          };
        })(this)
      });
    },
    
  });
  
  return hasMany;
  
})(AP.utility.createClass, AP.relationship.Relationship);

/**
A has-one relationship is simlar to a {@link AP.relationship.BelongsTo}
relationship except that the relationship information is stored in foreign key
fields on the related instances instead of on owner instances.

In implementation, a has-one relationship functions like has-many, except that
the value of the generated {@link #name} field is a related
{@link #model model instance} instead of a collection.

Relationships should not be instantiated directly.  Please see
{@link AP.model.Model#relationshipDefinitions} for more information on
declaring relationships.

@module AP
@submodule relationship
@class HasOne
@extends AP.relationship.HasMany
 */
AP.relationship.HasOne = (function($class, _HasMany) {
  
  var hasOne = $class({
    extends: _HasMany,
    
    _constructor: function HasOne() {
      AP.relationship.HasOne._super.constructor.apply(this, arguments);
    },
    
    initializeEvents: function() {
      this.listenTo(this.collection, "change:" + this.foreignKey, this.onForeignKeyChange);
      this.listenTo(this.owner, "change:" + this.name, this.onFieldForRelatedInstanceChange);
      return AP.relationship.HasOne._super.initializeEvents.apply(this, arguments);
    },

    /**
    Sets the {@link #name} generated field on the owner model to the first model
    instance in the collection after syncing.
    @method onCollectionSync
     */
    onCollectionSync: function() {
      return this.owner.set(this.name, this.collection.first());
    },

    /**
    Called whenever the related instance's {@link #foreignKey} field is changed.
    If the foreign key of the related instance referes to a different owner, then
    the {@link #name} field is set to null.  To obtain the related instance after
    the field is nulled, the relationship must be fetched again.
    @method onForeignKeyChange
     */
    onForeignKeyChange: function() {
      var related;
      related = this.owner.get(this.name);
      if (related && (related.get(this.foreignKey) !== this.owner.get(this.owner.idAttribute))) {
        return this.owner.set(this.name, null);
      }
    },

    /**
    Called whenever the owner instance's {@link #name} field is changed.  If the
    foreign key of the new related instance is different than the ID of the owner,
    the foreign key field of the related instance is set to the ID of the owner.
    @method onFieldForRelatedInstanceChange
     */
    onFieldForRelatedInstanceChange: function() {
      var ownerId, related;
      related = this.owner.get(this.name);
      ownerId = this.owner.get(this.owner.idAttribute);
      if (related && (related.get(this.foreignKey) !== ownerId)) {
        return related.set(this.foreignKey, ownerId);
      }
    },

    /**
    The default value for a has-one relationship is null like belongs-to.
    @method getDefault
    @return {Object} null
     */
    getDefault: function() {
      return null;
    },

    /**
    Querys the server for related instances.
    @method fetch
    @param {Function} callback function executed upon query success; called with
    one argument:  the related instance (if any)
     */
    fetch: function(callback) {
      return this.collection.query(this.getQuery(), {
        reset: true,
        success: (function(_this) {
          return function() {
            if (_.isFunction(callback)) {
              return callback(_this.owner, _this.collection.first());
            }
          };
        })(this)
      });
    }
    
    
  });
  
  return hasOne;
  
})(AP.utility.createClass, AP.relationship.HasMany);


/**
Base collection class.  In addition to the standard methods provided by the
[Backbone JS collection class](http://backbonejs.org/#Collection), this base
collection implements paginaton and query parameter mapping.

This class should be subclassed, not used directly.  For example:
@example
    var People = AP.utility.createClass({
        extends: AP.collection.Collection,
        static: {
          collectionId: "people"
        },
        _constructor: function People() {
          People._super.constructor.apply(this, arguments);
        },
        model: Person,
        apiEndpoint: "/person/",
        extraParams: {
          format: "json"
        }
    });

For full collection usage documentation,
refer to [Backbone JS](http://backbonejs.org/#Collection).

@module AP
@submodule collection
@class Collection
@extends Backbone.Collection
 */
AP.collection.Collection = (function($class, Backbone) {
  
  var collection = $class({
    
    extends: Backbone.Collection,
    
    _constructor: function Collection() {
      AP.collection.Collection._super.constructor.apply(this, arguments);
    },
    
    initialize: function() {
      this.extraParams = _.clone(this.extraParams || {});
    },
    
    /**
    Name/value pairs appended to URL of requests to server.  For example, extra
    parameters `{format: 'json'}` is passed to server as:  `/url/?format=json`.
    @property extraParams
    @type Object
     */
    extraParams: {},
    
    /**
    Returns the URL for this collection.  By default this is the value of the
    `apiEndpoint` member of the collection.
    @method url
    @return {String} URL of this collection
     */
    url: function() {
      return this.apiEndpoint;
    },
    
    /**
    Copies keys in object to keys of the format `query[key_name]`  in a new
    object, where `key_name` is the original key.  Returns a new object leaving
    the original intact.  For example, an input object `{foo: 'bar'}` would
    result in an output object `{query[foo]: 'bar'}`.
    @method mapQueryParams
    @param {Object} data name/value pairs to map to query-format
    @return {Object} a new object with mapped keys
     */
    mapQueryParams: function(data) {
      var key, query, value;
      query = {};
      for (key in data) {
        value = data[key];
        if (value) {
          query["query[" + key + "]"] = value;
        }
      }
      return query;
    },
    
    /**
    Fetches objects from the collection instance's URL.  Calls the underlaying
    [Backbone Collection.fetch method](http://backbonejs.org/#Collection-fetch).
    Note:  data from the collection's optional {@link #extraParams} is passed
    through the URL of every request.
    @method fetch
    @param {Object} options optional request data
    @param {Object} options.data optional request parameters are passed through
    request URL as-is
    @param {Object} options.query optional query parameters are passed through
    request URL after being transformed by {@link #mapQuerParams}.
    @param args... optional additional arguments passed-through to underlaying
    [Backbone Collection.fetch method](http://backbonejs.org/#Collection-fetch).
     */
    fetch: function() {
      var args, options, query;
      options = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      if (options == null) {
        options = {};
      }
      if (options != null ? options.query : void 0) {
        query = this.mapQueryParams(options.query);
      }
      options.data = _.extend({}, this.extraParams, options.data, query);
      return AP.collection.Collection._super.fetch.apply(this, [options].concat(args));
    },
    
    /**
    Convenience method calls {@link #fetch} passing `query` as query parameters.
    @method query
    @param {Object} query name/value pairs passed to {@link #fetch} as query data
     */
    query: function(query, options) {
      return this.fetch(_.extend({
        query: query
      }, options));
    }
    
    
  });
  
  return collection;
  
})(AP.utility.createClass, Backbone);

/**
Similar to `AP.collection.Collection` except that query data are
optionally mapped to alternative parameter names.  Specify query fields when
request parameters have different names than model fields.

For example:
@example
    var PeopleScope = AP.utility.createClass({
        extends: AP.collection.ScopeCollection,
        static: {
          collectionId: "people_scope"
        },
        _constructor: function PeopleScope() {
          PeopleScope._super.constructor.apply(this, arguments);
        },
        model: Person,
        apiEndpoint: "/person/",
        extraParams: {
          scope: "scoped"
        },
        queryFields: [
          {fieldName: "name", paramName: "person_name"}
        ]
    });

@module AP
@submodule collection
@class ScopeCollection
@extends AP.collection.Collection
 */
AP.collection.ScopeCollection = (function($class, _Collection) {
  
  var scopeCollection = $class({
    extends: _Collection,
    
    _constructor: function ScopeCollection() {
        AP.collection.ScopeCollection._super.constructor.apply(this, arguments);
    },
    
    /**
    Copies `data` to new object and replaces keys which match any `queryFields`
    mapping configurations with the alternative parameter name.  For example,
    with `queryFields` `[{fieldName: 'name', paramName: 'person_name'}] and
    input object `{name: 'John', age: 35}`, output object
    is `{person_name: 'John', age: 35}`.
    @method mapQueryFieldKeys
    @param {Object} data name/value pairs to map
    @return {Object} a new object with mapped keys
     */
    mapQueryFieldKeys: function(data) {
      'Maps key names in data to equivalent param names in @queryFields if\nany match.  On match, original key names are not retained.  Returns a new\nobject leaving original intact.';
      var key, mapped, mappedKey, paramName, value;
      mapped = {};
      for (key in data) {
        value = data[key];
        paramName = (_.find(this.queryFields, function(field) {
          return field.fieldName === key;
        }) || {}).paramName;
        mappedKey = paramName || key;
        if (value) {
          mapped[mappedKey] = value;
        }
      }
      return mapped;
    },
    
    /**
    Fetches objects from the collection instance's URL.  All arguments are passed-
    through to {@link AP.collection.Collection#fetch}, except for `options.query`
    which is transformed first by {@link #mapQueryFieldKeys}.
    @method fetch
    @param {Object} options optional request data
    @param {Object} options.query optional query parameters are passed through
    request URL after being transformed by {@link #mapQuerParams}
    @param args... optional additional arguments passed-through
    to {@link AP.collection.Collection#fetch}
     */
    fetch: function() {
      var args, options, query;
      options = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      if (options == null) {
        options = {};
      }
      if (options != null ? options.query : void 0) {
        query = this.mapQueryFieldKeys(options.query);
      }
      if (query) {
        options.query = query;
      }
      return AP.collection.Collection.prototype.fetch.apply(this, [options].concat(args));
    }
    
  });
  
  return scopeCollection;
  
})(AP.utility.createClass, AP.collection.Collection);

/**
Unlike a normal `AP.collection.Collection`, aggregate collections expect a
simple integer-only response from the server.  Aggregate collections are always
zero-length (they have no members).  They have an extra member `value`.
@module AP
@submodule collection
@class AggregateCollection
@extends AP.collection.ScopeCollection
 */
 AP.collection.AggregateCollection = (function($class, _ScopeCollection) {
   
   var aggregateCollection = $class({
     
     extends: _ScopeCollection,
     
     _constructor: function AggregateCollection() {
       AP.collection.AggregateCollection._super.constructor.apply(this, arguments);
     },
     
     /**
    The value last returned by this collection's URL.
    @property value
    @type Number
     */
    value: null,

    /**
    @method valueOf
    @return {Number} the value of {@link #value}
     */
    valueOf: function() {
      return this.value;
    },

    /**
    Called automatically whenever {@link AP.collection.Collection#fetch} returns.
    The response is parsed as an integer and stored in {@link #value}.  `parse`
    ignores any other data returned by the server.
    @method parse
    @param {String} response the value returned by the server
     */
    parse: function(response) {
      this.value = parseInt(response, 10);
      return [];
    }
     
   });
   
   return aggregateCollection;
   
 })(AP.utility.createClass, AP.collection.ScopeCollection);

/**
* Data adapter for objects whose datasource is a standard AP API
*
* @module AP
* @submodule adapter
* @class DefaultAdapter
*/
AP.adapter.DefaultAdapter = (function($class) {

    var _DefaultAdapter = $class({
        _constructor: function DefaultAdapter() {},

        /**
        * Sends data to the server using the standard Backbone.sync implementation. Method signature must correspond to Backbone.sync signature.
        * @method send
        * @param {String} action being performed on the model (i.e. "create", "update", "delete", etc.)
        * @param {AP.model.Model}/{AP.collection.Collection} model to send to the server, can be a Model or a Collection
        * @param {Object} additional options
        */
        send: function(actionName, model, options) {
          return Backbone._sync_original.call(model, actionName, model, options);
        }
    });

    return _DefaultAdapter;

})(AP.utility.createClass);

/**
* Dispatches requests for synchronization with the server to the appropiate Adapter. There should be only one dispatcher per Application.
* It contains a singleton instance of every http adapter as well as one default adapter to connect to the default AP backend.
* @module AP
* @submodule adapter
* @class Dispatcher
*/
AP.adapter.Dispatcher = (function($class) {

    var _Dispatcher = $class({

        static: {
          /**
          * Static identifiers of storage interface types
          * @property STORAGE
          * @type Object
          * @static
          */
          STORAGE: {
              HTTP: "StorageInterface::Http"
          }
        },

        _constructor: function Dispatcher(adapters) {
          var adapterClass, adapter, name, i;

          this.http = {};
          if(adapters) {
            for(name in adapters) {
              if(adapters.hasOwnProperty(name)) {
                adapterClass = adapters[name];
                adapter = new adapterClass();
                name = adapter.name;
                if(adapter.type === AP.adapter.Dispatcher.STORAGE.HTTP) {
                  this.http[name] = adapter;
                }
              }
            }
          }

          this.default = new AP.adapter.DefaultAdapter();
        },

        /**
        * The send method of the Dispatcher serves as a bottleneck for all Model and Collection sync calls.
        * From here it will channel the sync to the appropiate adapter based on the model's storage_interface attribute
        * @method send
        * @param {String} the action being performed (i.e. "create", "read", etc.)
        * @param {AP.model.Model}/{AP.collection.Collection} model or collection being sync'd with the server
        * @param {Object} additional options object, not required
        */
        send: function(actionName, model, options) {
          var storageInterface = undefined;
          if(model.storage_interface) {
            storageInterface = this.http[model.storage_interface];
            if(storageInterface === undefined) {
              return this.default.send(actionName, model, options);
            }
            return storageInterface.send(actionName, model, options);
          }
          return this.default.send(actionName, model, options);
        }
    });

    return _Dispatcher;

})(AP.utility.createClass);

/**
* Datasource adapter to connect over HTTP to a non-anypresence API
*
* @module AP
* @submodule adapter
* @class HttpAdapter
*/
AP.adapter.HttpAdapter = (function($class, _JSON, _XML) {

    var _HttpAdapter = $class({
        _constructor: function HttpAdapter() {},

        /**
        * Regular expression to find "{{}}" expressions within templates during interpolation operations.
        * @property interpolationRegexp
        * @type RegExp
        */
        interpolationRegexp: /{{([^{}]*)}}/g,

        /**
        * Context from where to obtain data during an interpolation operation.
        * If an empty context array is provided then the default context will always be the window plus the model attributes.
        * @property interpolationContext
        * @type Array
        */
        interpolationContext: [],

        /**
        * Parse a javascript object from a string
        * @method parseObject
        * @param {String} string to parse into an object
        * @returns {Object}
        */
        parseObject: function(str) {
          result = null, parser = null, xmlDoc = null;
          if(str && typeof str === "string") {
            result = eval('('+str+')');
          }
          return result;
        },

        /**
        * Interpolate values from a context into a string using {{ }} as a placeholder
        * Example: {{myValue}} with context = { myValue: "foo" }
        * @method interpolate
        * @param {String} string to interpolate values into
        * @param {Object} context from where values are taken
        * @returns {String} string with all values interpolated in
        */
        interpolate: function interpolate(str, context) {
            /**
             * Interpolate strings using {{}} notation
             */
            var resultStr = str.replace(this.interpolationRegexp, function(match, capture) {
                var trimmedCapture = capture.trim();
                var fields = trimmedCapture.split(".");
                var replacementValue = context;
                var field = undefined;
                if(fields && fields.length) {
                    for(var i= 0; i<fields.length; i++) {
                        if(replacementValue === undefined) {
                            break;
                        }
                        field = fields[i];
                        replacementValue = replacementValue[field];
                    }
                    return (replacementValue !== undefined) ? replacementValue : "";
                } else {
                    return "";
                }
            });

            return resultStr;
        },

        /**
        * Get the appropiate interpolation context for a specific model.
        * The interpolation context hierarchy goes like this, first the model-defined context if present,
        * if not then the adapter-defined context, finally if no higher context is provided then the default context
        * which is [window, model.attributes] or [window, collection.model, collection.models] if dealing with a collection
        * @method getInterpolationContext
        * @param {AP.model.Model}/{AP.collection.Collection}
        * @returns {Object} interpolation context object
        */
        getInterpolationContext: function(model) {
            var context = {};
            var contextArray = this.interpolationContext;

            if(contextArray.length === 0) {
              contextArray.push(window);
            }

            _.each(contextArray, function(obj) {
                _.extend(context, obj);
            });


            if(model) {
                if(model instanceof AP.model.Model) {
                    _.extend(context, model.attributes);
                }
                if(model instanceof AP.collection.Collection) {
                    _.extend(context, {
                       model: model.model,
                       models: model.models
                    });
                }
            }
            return context;
        },

        /**
        * Get the appropiate adapter_configuration object based on a Model and the action being performed
        * @method getTargetConfiguration
        * @param {AP.model.Model}/{AP.collection.Collection}
        * @param {String} name of the action being performed (i.e. "create", "update", "read", etc.)
        * @returns {Object}
        */
        getTargetConfiguration: function(model, actionName) {
          if(model && actionName && actionName !== "") {
              var targetConfiguration = null;
              if(model instanceof AP.model.Model) {
                  switch(actionName) {
                      case "create":
                          targetConfiguration = model.adapter_configuration.create;
                          break;
                      case "read":
                          targetConfiguration = model.adapter_configuration.read;
                          break;
                      case "update":
                          targetConfiguration = model.adapter_configuration.update;
                          break;
                      case "delete":
                          targetConfiguration = model.adapter_configuration.delete;
                          break;
                  }
              } else if(model instanceof AP.collection.Collection) {
                  if(actionName === "read") {
                      targetConfiguration = model.adapter_configuration;
                  }
              }

              return targetConfiguration;
          }
          return null;
        },

        /**
        * Get the final headers object to add into the $.ajax call.
        * This operation entails getting the headers from the adapter,
        * adding the headers from the model if any (overriding the adapter headers if necessary)
        * and interpolating values into the headers if any of them has an interpolation expression as a value
        * @method buildIncrementalHeaders
        * @param {AP.model.Model}/{AP.collection.Collection}
        * @param {Object} the appropiate adapter_configuration for that model and action
        * @param {Object} context to use when interpolating
        * @returns {Object} headers
        */
        buildIncrementalHeaders: function(model, targetConfiguration, context) {
            var headers = {}, name = "", value = "";
            _.each(this.headers, function(header) {
              name = this.interpolate(header.name, context);
              value = this.interpolate(header.value, context);
              headers[name] = value;
            }, this);

            if(targetConfiguration) {
                _.each(targetConfiguration.incremental_headers, function(header) {
                  name = this.interpolate(header.name, context);
                  value = this.interpolate(header.value, context);
                  headers[name] = value;
                }, this);
            }

            return headers;
        },

        /**
        * Get the url to hit. Use the adapters url as base then append the url from
        * the target configuration and finally interpolate values into the hole url if necessary.
        * @method buildIncrementalPath
        * @param {AP.model.Model}/{AP.collection.Collection}
        * @param {Object} appropiate adapter_configuration for that model and action
        * @param {Object} context to use during interpolation
        * @returns {String} url
        */
        buildIncrementalPath: function(model, targetConfiguration, context) {
            if(targetConfiguration) {
                var url = this.base_uri.substr(0);
                var path = targetConfiguration.incremental_path;
                if(path) {
                  path = this.interpolate(path, context);
                  url += "/"+path;
                }

                return url;
            }

            return this.base_uri;
        },

        /**
        * Get a query string to send, built from the url parameters using the same incremental logic as with headers.
        * @method buildIncrementalUrlParams
        * @param {AP.model.Model}/{AP.collection.Collection}
        * @param {Object} appropiate adapter_configuration for that model and action
        * @param {Object} context to use during interpolation
        * @returns {String} query string to append to a url
        */
        buildIncrementalUrlParams: function(model, targetConfiguration, context) {
            var urlParams = {}, paramArray = [], queryString = "";
            _.each(this.url_parameters, function(param) {
               urlParams[param.name] = param.value;
            });
            if(targetConfiguration) {
                _.each(targetConfiguration.incremental_url_parameters, function(param) {
                  urlParams[param.name] = param.value;
                });
            }
            for(var name in urlParams) {
              if(urlParams.hasOwnProperty(name)) {
                paramArray.push({
                  name: name,
                  value: urlParams[name]
                });
              }
            }
            _.map(paramArray, function(param) {
              param.name = this.interpolate(param.name, context);
              param.value = this.interpolate(param.value, context);
              return param;
            }, this);

            queryString = $.param(paramArray);
            return queryString;
        },

        /**
        * Build a body payload string out of a body payload template by concatenating values into it.
        * @method buildBodyPayload
        * @param {AP.model.Model}/{AP.collection.Collection}
        * @param {Object}
        * @param {Object}
        * @returns {String}
        */
        buildBodyPayload: function(model, targetConfiguration, context) {
            var bodyPayload = null;
            if(targetConfiguration && targetConfiguration.body_payload_template !== "") {
              bodyPayload = this.parseObject(this.interpolate(targetConfiguration.body_payload_template, context));
            }
            return bodyPayload;
        },

        /**
        * Build a request field mappings object, following the hierarchical structure of headers and interpolating values into them.
        * @method buildRequestFieldMappings
        * @param {AP.model.Model}/{AP.collection.Collection}
        * @param {Object}
        * @param {Object}
        * @returns {Object} key/value request fields
        */
        buildRequestFieldMappings: function(model, targetConfiguration, context) {
            var requestFields = {};
            var requestFieldMappings = [];
            var fieldName = undefined;
            var fieldRemoteName = undefined;

            if(model) {
                if(targetConfiguration) {
                    requestFieldMappings = targetConfiguration.request_field_level_mappings;
                    _.each(requestFieldMappings, function(mapping) {
                        fieldRemoteName = mapping.remote_field_name;
                        fieldName = mapping.field_definition.name;
                        requestFields[fieldRemoteName] = model.get(fieldName);
                    }, this);
                } else {
                    _.extend(requestFields, model.attributes);
                }
            }

            return requestFields;
        },

        /**
        * Build response field mappings object for a single object.
        * @method buildModelResponseFieldMappings
        * @param {Object} data of a model as returned by the server
        * @param {Object}
        */
        buildModelResponseFieldMappings: function(data, targetConfiguration) {
          var responseFields = {};
          var responseFieldMappings = [];

          if(data && targetConfiguration) {
            responseFieldMappings = targetConfiguration.response_field_level_mappings;
            _.each(responseFieldMappings, function(mapping) {
              var dataTarget = undefined;
              var fieldRemoteName = mapping.remote_field_name;
              var fieldName = mapping.field_definition.name;
              var path = this.getPath(fieldRemoteName, data);
              if(path && path.length > 0) {
                  dataTarget = path[0];
              }
              if(dataTarget instanceof XMLDocument || dataTarget instanceof Element || dataTarget instanceof Node) {
                  dataTarget = _XML.xmlToString(dataTarget);
              }
              responseFields[fieldName] = dataTarget;
            }, this);
          }

          return responseFields;
        },

        /**
        * Build response field mappings from data returned from the server mapped to either a model or a collection.
        * If 'model' is a collection then it iterates over the given data and maps fields from each iteration to a single model which gets
        * added to an array. Returns an Object if model is {AP.model.Model} or an Array if model is {AP.collection.Collection}
        * @method buildResponseFieldMappings
        * @param {AP.model.Model}/{AP.collection.Collection}
        * @param {Object} data returned from the server
        * @param {Object}
        * @returns {Object}/{Array}
        */
        buildResponseFieldMappings: function(model, data, targetConfiguration) {
          var responseMappings = undefined, nodeData = undefined;
          if(model && data && targetConfiguration) {
            if(model instanceof AP.model.Model) {
              if(data instanceof Array) {
                data = data[0];
              }
              responseMappings = this.buildModelResponseFieldMappings(data, targetConfiguration);
            } else if(model instanceof AP.collection.Collection) {
              responseMappings = [];
              if(data instanceof Array) {
                _.each(data, function(node) {
                  nodeData = this.buildModelResponseFieldMappings(node, targetConfiguration);
                  if(nodeData) {
                    responseMappings.push(nodeData);
                  }
                }, this);
              }
            }
          }
          return responseMappings;
        },

        /**
        * Return the result of evaluating a selector expression over a data object. The expression selector may be either a JSONPath expression or
        * an XPath expression. The method will attempt to evaluate the expression as XPath first and upon failure will treat it as JSONPath. It
        * is meant to provide a homogeneous way of selecting data from responses, regardless of the response format.
        * @method getPath
        * @param {String} selector XPath/JSONPath expression
        * @param {Object} data returned from the server
        * @returns {Object} result of the selector evaluation, if the expression wasn't found then it returns undefined.
        */
        getPath: function(expression, data) {
          /**
            Requires JQuery.xpath plugin for XPath expressions
          */
          var result = undefined;
          if(expression && expression !== "" && data) {

            try {
              if($.xpath === undefined) {
                console.log("JQuery.xpath plugin is not defined. You must add it to your application in order to use XPath expressions. Find it at https://github.com/ilinsky/jquery-xpath.");
                throw new Error("JQuery.xpath is not defined.");
              }
              result = $(data).xpath(expression).toArray();
            } catch(error) {
              var _result = _JSON.jsonPath(data, expression);
              if(_result !== false) {
                result = _result;
              }
            }
          }
          return result;
        },

        /**
        * Create the full request to send to the server in a 'send' call, including success and error callbacks
        * @method buildRequest
        * @param {String}
        * @param {AP.model.Model}/{AP.collection.Collection}
        * @param {Object}
        * @returns {Object} object representing the options to pass to JQuery.ajax function
        */
        buildRequest: function(actionName, model, options) {
          var targetConfiguration = null,
              context = {},
              _options = options || {},
              verb = "GET",
              urlParamString = undefined,
              ajaxConfiguration = {
                  async: true,
                  crossDomain: true
              };

          targetConfiguration = this.getTargetConfiguration(model, actionName, _options);
          if(actionName && model && targetConfiguration) {
              verb = (targetConfiguration.http_verb === "null") ? "GET" : targetConfiguration.http_verb;

              _.extend(ajaxConfiguration, _options);
              if(!ajaxConfiguration.data) {
                  ajaxConfiguration.data = {};
              }

              context = ajaxConfiguration.interpolationContext;
              if(!context || !(context instanceof Array)) {
                context = this.getInterpolationContext(model);
              }

              ajaxConfiguration.url = this.buildIncrementalPath(model, targetConfiguration, context);
              ajaxConfiguration.headers = this.buildIncrementalHeaders(model, targetConfiguration, context);
              ajaxConfiguration.method = verb;

              urlParamString = this.buildIncrementalUrlParams(model, targetConfiguration, context);
              //  Append query string to url
              if(urlParamString && urlParamString !== "") {
                ajaxConfiguration.url += "?"+urlParamString;
              }

              if(verb === "GET") {
                //  If "GET" only send data from request field mapppings
                _.extend(ajaxConfiguration.data, this.buildRequestFieldMappings(model, targetConfiguration, context));
              } else {
                //  Else send body payload template if present or request field mappings if no body template is provided
                if(targetConfiguration.body_payload_template && targetConfiguration.body_payload_template !== "") {
                  var bodyPayload = this.buildBodyPayload(model, targetConfiguration, context);
                  if(targetConfiguration.body_format === "json" || targetConfiguration.body_format === "form-encoded") {
                    _.extend(ajaxConfiguration.data, bodyPayload);
                  } else if(targetConfiguration.body_format === "xml") {
                    ajaxConfiguration.data = bodyPayload;
                  }
                } else {
                  var requestFields = this.buildRequestFieldMappings(model, targetConfiguration, context);
                  if(targetConfiguration.body_format === "json" || targetConfiguration.body_format === "form-encoded") {
                    _.extend(ajaxConfiguration.data, requestFields);
                  } else if(targetConfiguration.body_format === "xml") {
                    requestFields = _XML.objectToXmlString(model.name, requestFields);
                    ajaxConfiguration.data = requestFields;
                  }
                }

                //  If sending data as body payload then add appropiate format
                if(targetConfiguration.body_format === "form-encoded") {
                  ajaxConfiguration.contentType = "application/x-www-form-urlencoded; charset=UTF-8";
                } else if(targetConfiguration.body_format === "xml") {
                  ajaxConfiguration.contentType = "text/xml";
                } else {
                  ajaxConfiguration.contentType = "application/json";
                }
              }

              ajaxConfiguration.success = (function(_this) {
                return function(data, textStatus, jqXHR) {
                  var responseData = _this.mapResponse(model, data, targetConfiguration);
                  if(_options.success && _options.success instanceof Function) {
                    _options.success.call(this, responseData);
                  }
                };
              })(this);

              ajaxConfiguration.error = function(resp) {
                var error = _options.error;
                if (error) error.call(_options.context, model, resp, _options);
                model.trigger('error', model, resp, _options);
              }

              return ajaxConfiguration;
          }

          return null;
        },

        /**
        * Map the data returned from the server to a {AP.model.Model} or {AP.collection.Collection}
        * @method mapResponse
        * @param {AP.model.Model}/{AP.collection.Collection}
        * @param {Object} server data
        * @param {Object}
        * @returns {Object}/{Array} data to add to the model or collection (setting the data is left to Backbone)
        */
        mapResponse: function(model, data, targetConfiguration) {
          var selectedData = data;
          if(targetConfiguration.path_selector && targetConfiguration.path_selector !== "") {
            selectedData = this.getPath(targetConfiguration.path_selector, data);
            if(selectedData === false || selectedData === undefined) {
              selectedData = data;
            }
          }
          var responseData = this.buildResponseFieldMappings(model, selectedData, targetConfiguration);
          return responseData;
        },

        /**
        * Send model data to the server
        * @method send
        * @param {String} action being performed
        * @param {AP.model.Model}/{AP.collection.Collection} model/collection to sync with the server
        * @param {Object} options
        */
        send: function(actionName, model, options) {

          var request = this.buildRequest(actionName, model, options);
          if(request) {
            return $.ajax(request);
          }
          return null;
        }
    });

    return _HttpAdapter;

})(AP.utility.createClass, AP.utility.JSON, AP.utility.XML);

/**
 * Provides convenience methods common to apps.  Generally, apps are
 * namespaces not intended for instantiation.
 *
 * All apps should inherit from this class and execute setup.  It is important to
 * execute setup before adding members.
 *
 * For example (Coffeescript):
 * @example
 *  var AppClass = AP.utility.createClass({
 *    extends: AP.Application,
 *    _constructor: function AppClass() {
  *     AppClass._super.constructor.apply(this, arguments);
  *   }
 *  });
 *  AppClass.setup();
 *
 * @module AP
 * @class Application
 * @static
 */
 AP.Application = (function($class) {

   /**
    * Helper function to bind functions in case browser does not support it
    */
   function bindTo(context, fn) {
     if(context && fn && typeof fn === "function") {
       return function() {
         return fn.apply(context, arguments);
       }
     }
     return null;
   }

   var application = $class({

     _constructor: function Application() {},

     /**
     * class @static methods and properties
     */
     static: {

       /**
        * Adds static members to the class:
        *
        * - `name`
        * - `description`
        * - `models`
        * - `collections`
        *
        * It is important to execute setup before adding members.
        * @method setup
        * @static
        */
       setup: function() {
         this.name = this.name || "";
         this.description = this.description || "";
         this.models = {};
         this.collections = {};
         this.adapters = {};
         this.mockServer = null;
       },

       /**
        * @method init
        * @static
        */
       init: function(adapters) {
         AP = window.AP;
         // Initialize the adapter dispatcher into the current Application.
         AP.Application.initDispatcher.apply(this, arguments);
         if(AP.useMockServer) {
           this.mockServer = new AP.utility.MockServer(this);
         }
         if(AP.useOfflineCache) {
           AP.Application.initOfflineCache();
         }
         return AP.Application.initAjaxSetup();
       },

       /**
       * @method initDispatcher
       * @static
       */
       initDispatcher: function(adapters) {
         var _this = this;
         this.dispatcher = new AP.adapter.Dispatcher(adapters);
         Backbone._sync_original = Backbone.sync;
         Backbone.sync = function(method, obj, options) {
           return _this.dispatcher.send(method, obj, options);
         };
       },

       /**
        * @method initOfflineCache
        * @static
        */
       initOfflineCache: function() {
         AP = window.AP;
         AP.offlineDataStore = new AP.utility.TransientLargeLocalStore({
           storageName: "ap-offline-data-store",
           storageCapacity: AP.offlineStorageCapacity
         });
         Backbone._sync = Backbone.sync;
         Backbone.sync = function(method, obj, options) {
           var url = options.url || _.result(obj, "url");
           // cache only on GET
           if(url && method === "read") {
             var data = options.data || JSON.stringify(options.attrs || (obj !== null ? obj.toJSON(options) : void 0) );
             var oldSuccess = options.success;
             var oldError = options.error;
             // build cache key
             var user = null;
             if(AP.auth.Authentication.isAuthenticated()) {
               user = {
                 username: AP.auth.Authentication.getUsername(),
                 role: AP.auth.Authentication.getUserRole()
               };
             }
             var cacheKey = [AP.baseUrl, url, data, user];
             // override success and error callbacks to handle caching
             options.success = bindTo(this, function(response) {
               AP.offlineDataStore.set(cacheKey, response);
               oldSuccess.apply(this, arguments);
             });

             options.error = bindTo(this, function(xhr) {
               var status = xhr.status;
               if(status < 400 || status >=500) {
                 AP.offlineDataStore.get(cacheKey, {
                  success: bindTo(this, function(cached) {
                    oldSuccess.apply(this, [cached]);
                  }),
                  error: function() {
                    oldError.apply(this, arguments);
                  }
                 });
               } else {
                 oldError.apply(this, arguments);
               }
             });
           }
           return Backbone._sync.apply(this, arguments);
         };
       },


       /**
        * @method proxy
        * @static
        */
        proxy: function(fn) {
          return function() {
            fn.apply(this, arguments);
          }.bind(this);
        },

        /**
         * Returns a model class for this application by name or model ID.
         * @method getModel
         * @static
         * @param {String} str the name or ID of a model
         * @return {AP.model.Model} a model class
         */
        getModel: function(str) {
          return _.find(this.models, function(val, key) {
            return key === str || val.modelId === str || val.name === str;
          });
        },

        /**
         * Returns a collection class for this application by name or collection ID.
         * @param {String} str the name or ID of a collection
         * @return {AP.collection.Collection} a collection class
         * @method getCollection
         * @static
         */
        getCollection: function(str) {
          return _.find(this.collections, function(val, key) {
            return key === str || val.collectionId === str || val.name === str;
          });
        },

        /**
         * @method initAjaxSetup
         * @static
         */
        initAjaxSetup: function() {
          AP = window.AP;
          $.ajaxSetup({
            beforeSend: function(request, settings) {
              var baseUrl = AP.utility.Url.parseUrl(AP.baseUrl);
              var requestUrl = AP.utility.Url.parseUrl(settings.url);
              var hasNoRequestServer = !(requestUrl.host && requestUrl.protocol);
              var isRequestUrlSameAsBaseUrlServer =
                (
                  (baseUrl.protocol === requestUrl.protocol) &&
                  (baseUrl.host === requestUrl.host) &&
                  (baseUrl.port === requestUrl.port)
                ) || hasNoRequestServer;
              if(isRequestUrlSameAsBaseUrlServer) {
                // send the session ID with the deauthentication request
                var authSessionIdHeader = AP.auth.Authentication.getAuthSessionIdHeaderName();
                var authSessionId = AP.auth.Authentication.getAuthSessionId();
                if(authSessionId) {
                  request.setRequestHeader(authSessionIdHeader, authSessionId)
                }
              }
              // point the request to the proper server
              if(!AP.useMockServer && AP.baseUrl && hasNoRequestServer) {
                // if no host or protocol, add the base URL
                _.extend(settings, {
                  crossDomain: true,
                  url: AP.baseUrl + settings.url,
                  xhrFields: _.extend({}, settings.xhrFields, {withCredentials: true})
                });
              }
            }
          });
        }

     }

   });

   return application;

 }(AP.utility.createClass));


/*
Simple namespace class for this application.

Example application look-up:
@example
    var app = AP.getApp('CitiMobileChallengeSdk');

Example model and collection look-ups:
@example
    var modelClass = app.getModel('modelName');
    var collectionClass = app.getCollection('collectionName');

@class CitiMobileChallengeSdk
@extends AP.Application
@static
*/
window.CitiMobileChallengeSdk = (function($class, _Application) {

  var sdk = function CitiMobileChallengeSdk() {};
  _Application.setup.call(sdk);

  sdk = $class({
    _constructor: sdk,

    extends: _Application,

    static: {
      /**
      Application name.
      @static
      @property name
      @type String
       */
      name: "CitiMobileChallengeSdk",

      /**
      Application description.
      @static
      @property description
      @type String
       */
      description: "",

      init: function() {
        window.AP.activeAppName = "CitiMobileChallenge";
        _Application.init.call(this, window.CitiMobileChallengeSdk.adapters);
      }
    }
  });

  return sdk;

})(AP.utility.createClass, AP.Application);

/**
Registers the app with the global {@link AP AP namespace}.
 */
AP.registerApp(CitiMobileChallengeSdk, 'CitiMobileChallenge');

/**
CapitalMarketsTrading adapter for application `CitiMobileChallengeSdk`.

@module CitiMobileChallengeSdk
@submodule adapters
@class CapitalMarketsTrading
@extends AP.adapter.HttpAdapter
 */
CitiMobileChallengeSdk.adapters.CapitalMarketsTrading = (function($class, _HttpAdapter) {

  var CapitalMarketsTrading = $class({
    extends: _HttpAdapter,

    _constructor: function CapitalMarketsTrading() {
      CitiMobileChallengeSdk.adapters.CapitalMarketsTrading._super.constructor.apply(this, arguments);
    },

    /**
    * Id of the storage_interface
    * @property id
    * @type String
    */
    id: "16971",

    /**
    * Type of interface, for example HttpAdapter or Anypresence Local Storage.
    * @property type
    * @type String
    */
    type: "StorageInterface::Http",

    /**
    * Storage interface name. Used by AP.adapter.Dispatcher to find the appropiate adapter for a model during a sync.
    * @property name
    * @type String
    */
    name: "CapitalMarketsTrading",

    /**
    * URL of the external API.
    * @property base_uri
    * @type String
    */
    base_uri: "https://citimobilechallenge.anypresenceapp.com/capitalmarkets/v1",

    /**
    * Format for Payloads, can be "json", "xml" or "form-encoded"
    * @property format
    * @type String
    */
    format: "json",

    /**
    * Logging level for the adapter's operations (i.e. "error", "debug", etc.)
    * @property logging_level
    * @type String
    */
    logging_level: "error",

    /**
    * Headers to be added with every request made to the API server.
    * Can be overrided by action or scope level headers.
    * @property headers
    * @type Array
    */
    headers: [
      
        {
          name: "Authorization",
          value: "Bearer {{session.capital_markets_trading_token}}"
        },
      
    ],

    /**
    * Url parameters to send with every request made to the API server.
    * Can be overrided by action or scope level url parameters.
    * @property url_parameters
    * @type Array
    */
    url_parameters: [
      
        {
          name: "client_id",
          value: "{{session.client_id}}"
        },
      
    ]
  });

  return CapitalMarketsTrading;

})(AP.utility.createClass, AP.adapter.HttpAdapter);

/**
CorporatePayments adapter for application `CitiMobileChallengeSdk`.

@module CitiMobileChallengeSdk
@submodule adapters
@class CorporatePayments
@extends AP.adapter.HttpAdapter
 */
CitiMobileChallengeSdk.adapters.CorporatePayments = (function($class, _HttpAdapter) {

  var CorporatePayments = $class({
    extends: _HttpAdapter,

    _constructor: function CorporatePayments() {
      CitiMobileChallengeSdk.adapters.CorporatePayments._super.constructor.apply(this, arguments);
    },

    /**
    * Id of the storage_interface
    * @property id
    * @type String
    */
    id: "16969",

    /**
    * Type of interface, for example HttpAdapter or Anypresence Local Storage.
    * @property type
    * @type String
    */
    type: "StorageInterface::Http",

    /**
    * Storage interface name. Used by AP.adapter.Dispatcher to find the appropiate adapter for a model during a sync.
    * @property name
    * @type String
    */
    name: "CorporatePayments",

    /**
    * URL of the external API.
    * @property base_uri
    * @type String
    */
    base_uri: "https://citimobilechallenge.anypresenceapp.com/corporatepayments/v1",

    /**
    * Format for Payloads, can be "json", "xml" or "form-encoded"
    * @property format
    * @type String
    */
    format: "json",

    /**
    * Logging level for the adapter's operations (i.e. "error", "debug", etc.)
    * @property logging_level
    * @type String
    */
    logging_level: "error",

    /**
    * Headers to be added with every request made to the API server.
    * Can be overrided by action or scope level headers.
    * @property headers
    * @type Array
    */
    headers: [
      
        {
          name: "Authorization",
          value: "Bearer {{session.corporate_payments_token}}"
        },
      
    ],

    /**
    * Url parameters to send with every request made to the API server.
    * Can be overrided by action or scope level url parameters.
    * @property url_parameters
    * @type Array
    */
    url_parameters: [
      
        {
          name: "client_id",
          value: "{{session.client_id}}"
        },
      
    ]
  });

  return CorporatePayments;

})(AP.utility.createClass, AP.adapter.HttpAdapter);

/**
RetailBanking adapter for application `CitiMobileChallengeSdk`.

@module CitiMobileChallengeSdk
@submodule adapters
@class RetailBanking
@extends AP.adapter.HttpAdapter
 */
CitiMobileChallengeSdk.adapters.RetailBanking = (function($class, _HttpAdapter) {

  var RetailBanking = $class({
    extends: _HttpAdapter,

    _constructor: function RetailBanking() {
      CitiMobileChallengeSdk.adapters.RetailBanking._super.constructor.apply(this, arguments);
    },

    /**
    * Id of the storage_interface
    * @property id
    * @type String
    */
    id: "16968",

    /**
    * Type of interface, for example HttpAdapter or Anypresence Local Storage.
    * @property type
    * @type String
    */
    type: "StorageInterface::Http",

    /**
    * Storage interface name. Used by AP.adapter.Dispatcher to find the appropiate adapter for a model during a sync.
    * @property name
    * @type String
    */
    name: "RetailBanking",

    /**
    * URL of the external API.
    * @property base_uri
    * @type String
    */
    base_uri: "https://citimobilechallenge.anypresenceapp.com/retailbanking/v1",

    /**
    * Format for Payloads, can be "json", "xml" or "form-encoded"
    * @property format
    * @type String
    */
    format: "json",

    /**
    * Logging level for the adapter's operations (i.e. "error", "debug", etc.)
    * @property logging_level
    * @type String
    */
    logging_level: "error",

    /**
    * Headers to be added with every request made to the API server.
    * Can be overrided by action or scope level headers.
    * @property headers
    * @type Array
    */
    headers: [
      
        {
          name: "Authorization",
          value: "Bearer {{session.retail_banking_token}}"
        },
      
    ],

    /**
    * Url parameters to send with every request made to the API server.
    * Can be overrided by action or scope level url parameters.
    * @property url_parameters
    * @type Array
    */
    url_parameters: [
      
        {
          name: "client_id",
          value: "{{session.client_id}}"
        },
      
    ]
  });

  return RetailBanking;

})(AP.utility.createClass, AP.adapter.HttpAdapter);

/**
CapitalMarketsActivity model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class CapitalMarketsActivity
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.CapitalMarketsActivity = (function($class, _Model, Backbone) {

  var CapitalMarketsActivity = $class({

    extends: _Model,

    _constructor: function CapitalMarketsActivity() {
      CitiMobileChallengeSdk.models.CapitalMarketsActivity._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "CapitalMarketsActivity"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "CapitalMarketsActivity",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/capital_markets_activities",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "activity_type": null,
      
      "citi_attendees": null,
      
      "client_contacts": null,
      
      "client_id": null,
      
      "client_name": null,
      
      "date": null,
      
      "region": null,
      
      "year": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "activity_type",
      label: "activity_type",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "citi_attendees",
      label: "citi_attendees",
      
      
      type: "array",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "client_contacts",
      label: "client_contacts",
      
      
      type: "array",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "client_id",
      label: "client_id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "client_name",
      label: "client_name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "date",
      label: "date",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "region",
      label: "region",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "year",
      label: "year",
      
      
      type: "integer",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "CapitalMarketsTrading",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "date",
              field_definition: {
                name: "date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_id",
              field_definition: {
                name: "client_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_contacts",
              field_definition: {
                name: "client_contacts"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "citi_attendees",
              field_definition: {
                name: "citi_attendees"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "activity_type",
              field_definition: {
                name: "activity_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "date",
              field_definition: {
                name: "date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_id",
              field_definition: {
                name: "client_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_contacts",
              field_definition: {
                name: "client_contacts"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "citi_attendees",
              field_definition: {
                name: "citi_attendees"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "activity_type",
              field_definition: {
                name: "activity_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "date",
              field_definition: {
                name: "date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_id",
              field_definition: {
                name: "client_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_contacts",
              field_definition: {
                name: "client_contacts"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "citi_attendees",
              field_definition: {
                name: "citi_attendees"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "activity_type",
              field_definition: {
                name: "activity_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "date",
              field_definition: {
                name: "date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_id",
              field_definition: {
                name: "client_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_contacts",
              field_definition: {
                name: "client_contacts"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "citi_attendees",
              field_definition: {
                name: "citi_attendees"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "activity_type",
              field_definition: {
                name: "activity_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "date",
              field_definition: {
                name: "date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_id",
              field_definition: {
                name: "client_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_contacts",
              field_definition: {
                name: "client_contacts"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "citi_attendees",
              field_definition: {
                name: "citi_attendees"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "activity_type",
              field_definition: {
                name: "activity_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "date",
              field_definition: {
                name: "date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_id",
              field_definition: {
                name: "client_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_contacts",
              field_definition: {
                name: "client_contacts"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "citi_attendees",
              field_definition: {
                name: "citi_attendees"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "activity_type",
              field_definition: {
                name: "activity_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "date",
              field_definition: {
                name: "date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_id",
              field_definition: {
                name: "client_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_contacts",
              field_definition: {
                name: "client_contacts"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "citi_attendees",
              field_definition: {
                name: "citi_attendees"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "activity_type",
              field_definition: {
                name: "activity_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "date",
              field_definition: {
                name: "date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_id",
              field_definition: {
                name: "client_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_contacts",
              field_definition: {
                name: "client_contacts"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "citi_attendees",
              field_definition: {
                name: "citi_attendees"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "activity_type",
              field_definition: {
                name: "activity_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(CapitalMarketsActivity, Backbone.Events);

  return CapitalMarketsActivity;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
CapitalMarketsContact model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class CapitalMarketsContact
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.CapitalMarketsContact = (function($class, _Model, Backbone) {

  var CapitalMarketsContact = $class({

    extends: _Model,

    _constructor: function CapitalMarketsContact() {
      CitiMobileChallengeSdk.models.CapitalMarketsContact._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "CapitalMarketsContact"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "CapitalMarketsContact",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/capital_markets_contacts",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "address": null,
      
      "city": null,
      
      "client_name": null,
      
      "country": null,
      
      "email": null,
      
      "job_role": null,
      
      "job_title": null,
      
      "name": null,
      
      "phone": null,
      
      "state": null,
      
      "year": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "address",
      label: "address",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "city",
      label: "city",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "client_name",
      label: "client_name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "country",
      label: "country",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "email",
      label: "email",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "job_role",
      label: "job_role",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "job_title",
      label: "job_title",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "name",
      label: "name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "phone",
      label: "phone",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "state",
      label: "state",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "year",
      label: "year",
      
      
      type: "integer",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "CapitalMarketsTrading",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "state",
              field_definition: {
                name: "state"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "phone",
              field_definition: {
                name: "phone"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "job_title",
              field_definition: {
                name: "job_title"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "job_role",
              field_definition: {
                name: "job_role"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "email",
              field_definition: {
                name: "email"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "city",
              field_definition: {
                name: "city"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "address",
              field_definition: {
                name: "address"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "state",
              field_definition: {
                name: "state"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "phone",
              field_definition: {
                name: "phone"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "job_title",
              field_definition: {
                name: "job_title"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "job_role",
              field_definition: {
                name: "job_role"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "email",
              field_definition: {
                name: "email"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "city",
              field_definition: {
                name: "city"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "address",
              field_definition: {
                name: "address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "state",
              field_definition: {
                name: "state"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "phone",
              field_definition: {
                name: "phone"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "job_title",
              field_definition: {
                name: "job_title"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "job_role",
              field_definition: {
                name: "job_role"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "email",
              field_definition: {
                name: "email"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "city",
              field_definition: {
                name: "city"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "address",
              field_definition: {
                name: "address"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "state",
              field_definition: {
                name: "state"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "phone",
              field_definition: {
                name: "phone"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "job_title",
              field_definition: {
                name: "job_title"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "job_role",
              field_definition: {
                name: "job_role"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "email",
              field_definition: {
                name: "email"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "city",
              field_definition: {
                name: "city"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "address",
              field_definition: {
                name: "address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "state",
              field_definition: {
                name: "state"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "phone",
              field_definition: {
                name: "phone"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "job_title",
              field_definition: {
                name: "job_title"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "job_role",
              field_definition: {
                name: "job_role"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "email",
              field_definition: {
                name: "email"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "city",
              field_definition: {
                name: "city"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "address",
              field_definition: {
                name: "address"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "state",
              field_definition: {
                name: "state"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "phone",
              field_definition: {
                name: "phone"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "job_title",
              field_definition: {
                name: "job_title"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "job_role",
              field_definition: {
                name: "job_role"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "email",
              field_definition: {
                name: "email"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "city",
              field_definition: {
                name: "city"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "address",
              field_definition: {
                name: "address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "state",
              field_definition: {
                name: "state"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "phone",
              field_definition: {
                name: "phone"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "job_title",
              field_definition: {
                name: "job_title"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "job_role",
              field_definition: {
                name: "job_role"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "email",
              field_definition: {
                name: "email"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "city",
              field_definition: {
                name: "city"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "address",
              field_definition: {
                name: "address"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "state",
              field_definition: {
                name: "state"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "phone",
              field_definition: {
                name: "phone"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "job_title",
              field_definition: {
                name: "job_title"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "job_role",
              field_definition: {
                name: "job_role"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "email",
              field_definition: {
                name: "email"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "city",
              field_definition: {
                name: "city"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "address",
              field_definition: {
                name: "address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(CapitalMarketsContact, Backbone.Events);

  return CapitalMarketsContact;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
CapitalMarketsContentService model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class CapitalMarketsContentService
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.CapitalMarketsContentService = (function($class, _Model, Backbone) {

  var CapitalMarketsContentService = $class({

    extends: _Model,

    _constructor: function CapitalMarketsContentService() {
      CitiMobileChallengeSdk.models.CapitalMarketsContentService._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "CapitalMarketsContentService"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "CapitalMarketsContentService",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/capital_markets_content_services",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "alert_date": null,
      
      "all_attachments": null,
      
      "analyst_id": null,
      
      "analyst_type": null,
      
      "asset_class": null,
      
      "attachment_id": null,
      
      "author_details": null,
      
      "author_id": null,
      
      "author_name": null,
      
      "authors": null,
      
      "company": null,
      
      "content_services_type": null,
      
      "content_type": null,
      
      "content_url": null,
      
      "date_string": null,
      
      "document_url": null,
      
      "encrypted_id": null,
      
      "file_link": null,
      
      "file_name": null,
      
      "file_type": null,
      
      "formated_pub_date": null,
      
      "formatted_date_str": null,
      
      "headline": null,
      
      "hit_count": null,
      
      "html_escaped_title": null,
      
      "image": null,
      
      "image_group": null,
      
      "kv": null,
      
      "medial_url_ios": null,
      
      "media_url_android": null,
      
      "menu_code": null,
      
      "miliseconds": null,
      
      "obo_first_name": null,
      
      "obo_last_name": null,
      
      "obo_preferred_name": null,
      
      "page_count": null,
      
      "product_list": null,
      
      "product_type": null,
      
      "pub_date": null,
      
      "pub_id": null,
      
      "pub_key": null,
      
      "ref_article_title": null,
      
      "ref_article_url": null,
      
      "region": null,
      
      "resdata_url": null,
      
      "rnum": null,
      
      "scale": null,
      
      "sectors": null,
      
      "source": null,
      
      "summary": null,
      
      "synopsis": null,
      
      "template": null,
      
      "theme_id": null,
      
      "tickers": null,
      
      "title": null,
      
      "total_count": null,
      
      "video_type": null,
      
      "video_url": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "alert_date",
      label: "alert_date",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "all_attachments",
      label: "all_attachments",
      
      
      type: "array",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "analyst_id",
      label: "analyst_id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "analyst_type",
      label: "analyst_type",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "asset_class",
      label: "asset_class",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "attachment_id",
      label: "attachment_id",
      
      
      type: "integer",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "author_details",
      label: "author_details",
      
      
      type: "array",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "author_id",
      label: "author_id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "author_name",
      label: "author_name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "authors",
      label: "authors",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "company",
      label: "company",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "content_services_type",
      label: "content_services_type",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "content_type",
      label: "content_type",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "content_url",
      label: "content_url",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "date_string",
      label: "date_string",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "document_url",
      label: "document_url",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "encrypted_id",
      label: "encrypted_id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "file_link",
      label: "file_link",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "file_name",
      label: "file_name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "file_type",
      label: "file_type",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "formated_pub_date",
      label: "formated_pub_date",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "formatted_date_str",
      label: "formatted_date_str",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "headline",
      label: "headline",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "hit_count",
      label: "hit_count",
      
      
      type: "integer",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "html_escaped_title",
      label: "html_escaped_title",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "image",
      label: "image",
      
      
      type: "string",
      required: false,
      file_url: true,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "image_group",
      label: "image_group",
      
      
      type: "array",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "kv",
      label: "kv",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "medial_url_ios",
      label: "medial_url_ios",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "media_url_android",
      label: "media_url_android",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "menu_code",
      label: "menu_code",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "miliseconds",
      label: "miliseconds",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "obo_first_name",
      label: "obo_first_name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "obo_last_name",
      label: "obo_last_name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "obo_preferred_name",
      label: "obo_preferred_name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "page_count",
      label: "page_count",
      
      
      type: "integer",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "product_list",
      label: "product_list",
      
      
      type: "array",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "product_type",
      label: "product_type",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "pub_date",
      label: "pub_date",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "pub_id",
      label: "pub_id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "pub_key",
      label: "pub_key",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "ref_article_title",
      label: "ref_article_title",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "ref_article_url",
      label: "ref_article_url",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "region",
      label: "region",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "resdata_url",
      label: "resdata_url",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "rnum",
      label: "rnum",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "scale",
      label: "scale",
      
      
      type: "array",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "sectors",
      label: "sectors",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "source",
      label: "source",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "summary",
      label: "summary",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "synopsis",
      label: "synopsis",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "template",
      label: "template",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "theme_id",
      label: "theme_id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "tickers",
      label: "tickers",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "title",
      label: "title",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "total_count",
      label: "total_count",
      
      
      type: "integer",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "video_type",
      label: "video_type",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "video_url",
      label: "video_url",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "CapitalMarketsTrading",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "video_url",
              field_definition: {
                name: "video_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "video_type",
              field_definition: {
                name: "video_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "type",
              field_definition: {
                name: "content_services_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "total_count",
              field_definition: {
                name: "total_count"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "title",
              field_definition: {
                name: "title"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "tickers",
              field_definition: {
                name: "tickers"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "theme_id",
              field_definition: {
                name: "theme_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "template",
              field_definition: {
                name: "template"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "synopsis",
              field_definition: {
                name: "synopsis"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "summary",
              field_definition: {
                name: "summary"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "source",
              field_definition: {
                name: "source"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "sectors",
              field_definition: {
                name: "sectors"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "scale",
              field_definition: {
                name: "scale"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rnum",
              field_definition: {
                name: "rnum"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "resdata_url",
              field_definition: {
                name: "resdata_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "ref_article_url",
              field_definition: {
                name: "ref_article_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "ref_article_title",
              field_definition: {
                name: "ref_article_title"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "pub_key",
              field_definition: {
                name: "pub_key"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "pub_id",
              field_definition: {
                name: "pub_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "pub_date",
              field_definition: {
                name: "pub_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_type",
              field_definition: {
                name: "product_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_list",
              field_definition: {
                name: "product_list"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "page_count",
              field_definition: {
                name: "page_count"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "obo_preferred_name",
              field_definition: {
                name: "obo_preferred_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "obo_last_name",
              field_definition: {
                name: "obo_last_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "obo_first_name",
              field_definition: {
                name: "obo_first_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "miliseconds",
              field_definition: {
                name: "miliseconds"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "menu_code",
              field_definition: {
                name: "menu_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "medial_url_ios",
              field_definition: {
                name: "medial_url_ios"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "media_url_android",
              field_definition: {
                name: "media_url_android"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "kv",
              field_definition: {
                name: "kv"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "image",
              field_definition: {
                name: "image"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "image_group",
              field_definition: {
                name: "image_group"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "html_escaped_title",
              field_definition: {
                name: "html_escaped_title"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "hit_count",
              field_definition: {
                name: "hit_count"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "headline",
              field_definition: {
                name: "headline"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "formatted_date_str",
              field_definition: {
                name: "formatted_date_str"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "formated_pub_date",
              field_definition: {
                name: "formated_pub_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "file_type",
              field_definition: {
                name: "file_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "file_name",
              field_definition: {
                name: "file_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "file_link",
              field_definition: {
                name: "file_link"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "encrypted_id",
              field_definition: {
                name: "encrypted_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "document_url",
              field_definition: {
                name: "document_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "date_string",
              field_definition: {
                name: "date_string"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "content_url",
              field_definition: {
                name: "content_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "content_type",
              field_definition: {
                name: "content_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "company",
              field_definition: {
                name: "company"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "authors",
              field_definition: {
                name: "authors"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "author_name",
              field_definition: {
                name: "author_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "author_id",
              field_definition: {
                name: "author_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "author_details",
              field_definition: {
                name: "author_details"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "attachment_id",
              field_definition: {
                name: "attachment_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "asset_class",
              field_definition: {
                name: "asset_class"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "analyst_type",
              field_definition: {
                name: "analyst_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "analyst_id",
              field_definition: {
                name: "analyst_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "all_attachments",
              field_definition: {
                name: "all_attachments"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "alert_date",
              field_definition: {
                name: "alert_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "video_url",
              field_definition: {
                name: "video_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "video_type",
              field_definition: {
                name: "video_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "type",
              field_definition: {
                name: "content_services_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "total_count",
              field_definition: {
                name: "total_count"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "title",
              field_definition: {
                name: "title"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "tickers",
              field_definition: {
                name: "tickers"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "theme_id",
              field_definition: {
                name: "theme_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "template",
              field_definition: {
                name: "template"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "synopsis",
              field_definition: {
                name: "synopsis"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "summary",
              field_definition: {
                name: "summary"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "source",
              field_definition: {
                name: "source"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "sectors",
              field_definition: {
                name: "sectors"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "scale",
              field_definition: {
                name: "scale"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rnum",
              field_definition: {
                name: "rnum"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "resdata_url",
              field_definition: {
                name: "resdata_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "ref_article_url",
              field_definition: {
                name: "ref_article_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "ref_article_title",
              field_definition: {
                name: "ref_article_title"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "pub_key",
              field_definition: {
                name: "pub_key"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "pub_id",
              field_definition: {
                name: "pub_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "pub_date",
              field_definition: {
                name: "pub_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_type",
              field_definition: {
                name: "product_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_list",
              field_definition: {
                name: "product_list"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "page_count",
              field_definition: {
                name: "page_count"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "obo_preferred_name",
              field_definition: {
                name: "obo_preferred_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "obo_last_name",
              field_definition: {
                name: "obo_last_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "obo_first_name",
              field_definition: {
                name: "obo_first_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "miliseconds",
              field_definition: {
                name: "miliseconds"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "menu_code",
              field_definition: {
                name: "menu_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "medial_url_ios",
              field_definition: {
                name: "medial_url_ios"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "media_url_android",
              field_definition: {
                name: "media_url_android"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "kv",
              field_definition: {
                name: "kv"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "image",
              field_definition: {
                name: "image"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "image_group",
              field_definition: {
                name: "image_group"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "html_escaped_title",
              field_definition: {
                name: "html_escaped_title"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "hit_count",
              field_definition: {
                name: "hit_count"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "headline",
              field_definition: {
                name: "headline"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "formatted_date_str",
              field_definition: {
                name: "formatted_date_str"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "formated_pub_date",
              field_definition: {
                name: "formated_pub_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "file_type",
              field_definition: {
                name: "file_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "file_name",
              field_definition: {
                name: "file_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "file_link",
              field_definition: {
                name: "file_link"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "encrypted_id",
              field_definition: {
                name: "encrypted_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "document_url",
              field_definition: {
                name: "document_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "date_string",
              field_definition: {
                name: "date_string"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "content_url",
              field_definition: {
                name: "content_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "content_type",
              field_definition: {
                name: "content_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "company",
              field_definition: {
                name: "company"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "authors",
              field_definition: {
                name: "authors"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "author_name",
              field_definition: {
                name: "author_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "author_id",
              field_definition: {
                name: "author_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "author_details",
              field_definition: {
                name: "author_details"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "attachment_id",
              field_definition: {
                name: "attachment_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "asset_class",
              field_definition: {
                name: "asset_class"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "analyst_type",
              field_definition: {
                name: "analyst_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "analyst_id",
              field_definition: {
                name: "analyst_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "all_attachments",
              field_definition: {
                name: "all_attachments"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "alert_date",
              field_definition: {
                name: "alert_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "video_url",
              field_definition: {
                name: "video_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "video_type",
              field_definition: {
                name: "video_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "type",
              field_definition: {
                name: "content_services_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "total_count",
              field_definition: {
                name: "total_count"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "title",
              field_definition: {
                name: "title"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "tickers",
              field_definition: {
                name: "tickers"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "theme_id",
              field_definition: {
                name: "theme_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "template",
              field_definition: {
                name: "template"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "synopsis",
              field_definition: {
                name: "synopsis"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "summary",
              field_definition: {
                name: "summary"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "source",
              field_definition: {
                name: "source"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "sectors",
              field_definition: {
                name: "sectors"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "scale",
              field_definition: {
                name: "scale"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rnum",
              field_definition: {
                name: "rnum"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "resdata_url",
              field_definition: {
                name: "resdata_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "ref_article_url",
              field_definition: {
                name: "ref_article_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "ref_article_title",
              field_definition: {
                name: "ref_article_title"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "pub_key",
              field_definition: {
                name: "pub_key"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "pub_id",
              field_definition: {
                name: "pub_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "pub_date",
              field_definition: {
                name: "pub_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_type",
              field_definition: {
                name: "product_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_list",
              field_definition: {
                name: "product_list"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "page_count",
              field_definition: {
                name: "page_count"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "obo_preferred_name",
              field_definition: {
                name: "obo_preferred_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "obo_last_name",
              field_definition: {
                name: "obo_last_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "obo_first_name",
              field_definition: {
                name: "obo_first_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "miliseconds",
              field_definition: {
                name: "miliseconds"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "menu_code",
              field_definition: {
                name: "menu_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "medial_url_ios",
              field_definition: {
                name: "medial_url_ios"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "media_url_android",
              field_definition: {
                name: "media_url_android"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "kv",
              field_definition: {
                name: "kv"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "image",
              field_definition: {
                name: "image"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "image_group",
              field_definition: {
                name: "image_group"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "html_escaped_title",
              field_definition: {
                name: "html_escaped_title"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "hit_count",
              field_definition: {
                name: "hit_count"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "headline",
              field_definition: {
                name: "headline"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "formatted_date_str",
              field_definition: {
                name: "formatted_date_str"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "formated_pub_date",
              field_definition: {
                name: "formated_pub_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "file_type",
              field_definition: {
                name: "file_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "file_name",
              field_definition: {
                name: "file_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "file_link",
              field_definition: {
                name: "file_link"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "encrypted_id",
              field_definition: {
                name: "encrypted_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "document_url",
              field_definition: {
                name: "document_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "date_string",
              field_definition: {
                name: "date_string"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "content_url",
              field_definition: {
                name: "content_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "content_type",
              field_definition: {
                name: "content_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "company",
              field_definition: {
                name: "company"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "authors",
              field_definition: {
                name: "authors"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "author_name",
              field_definition: {
                name: "author_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "author_id",
              field_definition: {
                name: "author_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "author_details",
              field_definition: {
                name: "author_details"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "attachment_id",
              field_definition: {
                name: "attachment_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "asset_class",
              field_definition: {
                name: "asset_class"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "analyst_type",
              field_definition: {
                name: "analyst_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "analyst_id",
              field_definition: {
                name: "analyst_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "all_attachments",
              field_definition: {
                name: "all_attachments"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "alert_date",
              field_definition: {
                name: "alert_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "video_url",
              field_definition: {
                name: "video_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "video_type",
              field_definition: {
                name: "video_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "type",
              field_definition: {
                name: "content_services_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "total_count",
              field_definition: {
                name: "total_count"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "title",
              field_definition: {
                name: "title"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "tickers",
              field_definition: {
                name: "tickers"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "theme_id",
              field_definition: {
                name: "theme_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "template",
              field_definition: {
                name: "template"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "synopsis",
              field_definition: {
                name: "synopsis"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "summary",
              field_definition: {
                name: "summary"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "source",
              field_definition: {
                name: "source"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "sectors",
              field_definition: {
                name: "sectors"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "scale",
              field_definition: {
                name: "scale"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rnum",
              field_definition: {
                name: "rnum"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "resdata_url",
              field_definition: {
                name: "resdata_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "ref_article_url",
              field_definition: {
                name: "ref_article_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "ref_article_title",
              field_definition: {
                name: "ref_article_title"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "pub_key",
              field_definition: {
                name: "pub_key"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "pub_id",
              field_definition: {
                name: "pub_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "pub_date",
              field_definition: {
                name: "pub_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_type",
              field_definition: {
                name: "product_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_list",
              field_definition: {
                name: "product_list"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "page_count",
              field_definition: {
                name: "page_count"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "obo_preferred_name",
              field_definition: {
                name: "obo_preferred_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "obo_last_name",
              field_definition: {
                name: "obo_last_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "obo_first_name",
              field_definition: {
                name: "obo_first_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "miliseconds",
              field_definition: {
                name: "miliseconds"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "menu_code",
              field_definition: {
                name: "menu_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "medial_url_ios",
              field_definition: {
                name: "medial_url_ios"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "media_url_android",
              field_definition: {
                name: "media_url_android"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "kv",
              field_definition: {
                name: "kv"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "image",
              field_definition: {
                name: "image"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "image_group",
              field_definition: {
                name: "image_group"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "html_escaped_title",
              field_definition: {
                name: "html_escaped_title"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "hit_count",
              field_definition: {
                name: "hit_count"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "headline",
              field_definition: {
                name: "headline"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "formatted_date_str",
              field_definition: {
                name: "formatted_date_str"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "formated_pub_date",
              field_definition: {
                name: "formated_pub_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "file_type",
              field_definition: {
                name: "file_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "file_name",
              field_definition: {
                name: "file_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "file_link",
              field_definition: {
                name: "file_link"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "encrypted_id",
              field_definition: {
                name: "encrypted_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "document_url",
              field_definition: {
                name: "document_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "date_string",
              field_definition: {
                name: "date_string"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "content_url",
              field_definition: {
                name: "content_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "content_type",
              field_definition: {
                name: "content_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "company",
              field_definition: {
                name: "company"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "authors",
              field_definition: {
                name: "authors"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "author_name",
              field_definition: {
                name: "author_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "author_id",
              field_definition: {
                name: "author_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "author_details",
              field_definition: {
                name: "author_details"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "attachment_id",
              field_definition: {
                name: "attachment_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "asset_class",
              field_definition: {
                name: "asset_class"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "analyst_type",
              field_definition: {
                name: "analyst_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "analyst_id",
              field_definition: {
                name: "analyst_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "all_attachments",
              field_definition: {
                name: "all_attachments"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "alert_date",
              field_definition: {
                name: "alert_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "video_url",
              field_definition: {
                name: "video_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "video_type",
              field_definition: {
                name: "video_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "type",
              field_definition: {
                name: "content_services_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "total_count",
              field_definition: {
                name: "total_count"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "title",
              field_definition: {
                name: "title"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "tickers",
              field_definition: {
                name: "tickers"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "theme_id",
              field_definition: {
                name: "theme_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "template",
              field_definition: {
                name: "template"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "synopsis",
              field_definition: {
                name: "synopsis"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "summary",
              field_definition: {
                name: "summary"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "source",
              field_definition: {
                name: "source"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "sectors",
              field_definition: {
                name: "sectors"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "scale",
              field_definition: {
                name: "scale"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rnum",
              field_definition: {
                name: "rnum"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "resdata_url",
              field_definition: {
                name: "resdata_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "ref_article_url",
              field_definition: {
                name: "ref_article_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "ref_article_title",
              field_definition: {
                name: "ref_article_title"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "pub_key",
              field_definition: {
                name: "pub_key"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "pub_id",
              field_definition: {
                name: "pub_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "pub_date",
              field_definition: {
                name: "pub_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_type",
              field_definition: {
                name: "product_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_list",
              field_definition: {
                name: "product_list"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "page_count",
              field_definition: {
                name: "page_count"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "obo_preferred_name",
              field_definition: {
                name: "obo_preferred_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "obo_last_name",
              field_definition: {
                name: "obo_last_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "obo_first_name",
              field_definition: {
                name: "obo_first_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "miliseconds",
              field_definition: {
                name: "miliseconds"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "menu_code",
              field_definition: {
                name: "menu_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "medial_url_ios",
              field_definition: {
                name: "medial_url_ios"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "media_url_android",
              field_definition: {
                name: "media_url_android"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "kv",
              field_definition: {
                name: "kv"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "image",
              field_definition: {
                name: "image"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "image_group",
              field_definition: {
                name: "image_group"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "html_escaped_title",
              field_definition: {
                name: "html_escaped_title"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "hit_count",
              field_definition: {
                name: "hit_count"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "headline",
              field_definition: {
                name: "headline"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "formatted_date_str",
              field_definition: {
                name: "formatted_date_str"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "formated_pub_date",
              field_definition: {
                name: "formated_pub_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "file_type",
              field_definition: {
                name: "file_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "file_name",
              field_definition: {
                name: "file_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "file_link",
              field_definition: {
                name: "file_link"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "encrypted_id",
              field_definition: {
                name: "encrypted_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "document_url",
              field_definition: {
                name: "document_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "date_string",
              field_definition: {
                name: "date_string"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "content_url",
              field_definition: {
                name: "content_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "content_type",
              field_definition: {
                name: "content_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "company",
              field_definition: {
                name: "company"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "authors",
              field_definition: {
                name: "authors"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "author_name",
              field_definition: {
                name: "author_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "author_id",
              field_definition: {
                name: "author_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "author_details",
              field_definition: {
                name: "author_details"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "attachment_id",
              field_definition: {
                name: "attachment_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "asset_class",
              field_definition: {
                name: "asset_class"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "analyst_type",
              field_definition: {
                name: "analyst_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "analyst_id",
              field_definition: {
                name: "analyst_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "all_attachments",
              field_definition: {
                name: "all_attachments"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "alert_date",
              field_definition: {
                name: "alert_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "video_url",
              field_definition: {
                name: "video_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "video_type",
              field_definition: {
                name: "video_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "type",
              field_definition: {
                name: "content_services_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "total_count",
              field_definition: {
                name: "total_count"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "title",
              field_definition: {
                name: "title"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "tickers",
              field_definition: {
                name: "tickers"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "theme_id",
              field_definition: {
                name: "theme_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "template",
              field_definition: {
                name: "template"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "synopsis",
              field_definition: {
                name: "synopsis"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "summary",
              field_definition: {
                name: "summary"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "source",
              field_definition: {
                name: "source"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "sectors",
              field_definition: {
                name: "sectors"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "scale",
              field_definition: {
                name: "scale"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rnum",
              field_definition: {
                name: "rnum"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "resdata_url",
              field_definition: {
                name: "resdata_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "ref_article_url",
              field_definition: {
                name: "ref_article_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "ref_article_title",
              field_definition: {
                name: "ref_article_title"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "pub_key",
              field_definition: {
                name: "pub_key"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "pub_id",
              field_definition: {
                name: "pub_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "pub_date",
              field_definition: {
                name: "pub_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_type",
              field_definition: {
                name: "product_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_list",
              field_definition: {
                name: "product_list"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "page_count",
              field_definition: {
                name: "page_count"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "obo_preferred_name",
              field_definition: {
                name: "obo_preferred_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "obo_last_name",
              field_definition: {
                name: "obo_last_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "obo_first_name",
              field_definition: {
                name: "obo_first_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "miliseconds",
              field_definition: {
                name: "miliseconds"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "menu_code",
              field_definition: {
                name: "menu_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "medial_url_ios",
              field_definition: {
                name: "medial_url_ios"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "media_url_android",
              field_definition: {
                name: "media_url_android"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "kv",
              field_definition: {
                name: "kv"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "image",
              field_definition: {
                name: "image"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "image_group",
              field_definition: {
                name: "image_group"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "html_escaped_title",
              field_definition: {
                name: "html_escaped_title"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "hit_count",
              field_definition: {
                name: "hit_count"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "headline",
              field_definition: {
                name: "headline"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "formatted_date_str",
              field_definition: {
                name: "formatted_date_str"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "formated_pub_date",
              field_definition: {
                name: "formated_pub_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "file_type",
              field_definition: {
                name: "file_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "file_name",
              field_definition: {
                name: "file_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "file_link",
              field_definition: {
                name: "file_link"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "encrypted_id",
              field_definition: {
                name: "encrypted_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "document_url",
              field_definition: {
                name: "document_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "date_string",
              field_definition: {
                name: "date_string"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "content_url",
              field_definition: {
                name: "content_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "content_type",
              field_definition: {
                name: "content_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "company",
              field_definition: {
                name: "company"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "authors",
              field_definition: {
                name: "authors"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "author_name",
              field_definition: {
                name: "author_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "author_id",
              field_definition: {
                name: "author_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "author_details",
              field_definition: {
                name: "author_details"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "attachment_id",
              field_definition: {
                name: "attachment_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "asset_class",
              field_definition: {
                name: "asset_class"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "analyst_type",
              field_definition: {
                name: "analyst_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "analyst_id",
              field_definition: {
                name: "analyst_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "all_attachments",
              field_definition: {
                name: "all_attachments"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "alert_date",
              field_definition: {
                name: "alert_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "video_url",
              field_definition: {
                name: "video_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "video_type",
              field_definition: {
                name: "video_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "type",
              field_definition: {
                name: "content_services_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "total_count",
              field_definition: {
                name: "total_count"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "title",
              field_definition: {
                name: "title"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "tickers",
              field_definition: {
                name: "tickers"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "theme_id",
              field_definition: {
                name: "theme_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "template",
              field_definition: {
                name: "template"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "synopsis",
              field_definition: {
                name: "synopsis"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "summary",
              field_definition: {
                name: "summary"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "source",
              field_definition: {
                name: "source"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "sectors",
              field_definition: {
                name: "sectors"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "scale",
              field_definition: {
                name: "scale"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rnum",
              field_definition: {
                name: "rnum"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "resdata_url",
              field_definition: {
                name: "resdata_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "ref_article_url",
              field_definition: {
                name: "ref_article_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "ref_article_title",
              field_definition: {
                name: "ref_article_title"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "pub_key",
              field_definition: {
                name: "pub_key"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "pub_id",
              field_definition: {
                name: "pub_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "pub_date",
              field_definition: {
                name: "pub_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_type",
              field_definition: {
                name: "product_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_list",
              field_definition: {
                name: "product_list"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "page_count",
              field_definition: {
                name: "page_count"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "obo_preferred_name",
              field_definition: {
                name: "obo_preferred_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "obo_last_name",
              field_definition: {
                name: "obo_last_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "obo_first_name",
              field_definition: {
                name: "obo_first_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "miliseconds",
              field_definition: {
                name: "miliseconds"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "menu_code",
              field_definition: {
                name: "menu_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "medial_url_ios",
              field_definition: {
                name: "medial_url_ios"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "media_url_android",
              field_definition: {
                name: "media_url_android"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "kv",
              field_definition: {
                name: "kv"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "image",
              field_definition: {
                name: "image"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "image_group",
              field_definition: {
                name: "image_group"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "html_escaped_title",
              field_definition: {
                name: "html_escaped_title"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "hit_count",
              field_definition: {
                name: "hit_count"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "headline",
              field_definition: {
                name: "headline"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "formatted_date_str",
              field_definition: {
                name: "formatted_date_str"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "formated_pub_date",
              field_definition: {
                name: "formated_pub_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "file_type",
              field_definition: {
                name: "file_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "file_name",
              field_definition: {
                name: "file_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "file_link",
              field_definition: {
                name: "file_link"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "encrypted_id",
              field_definition: {
                name: "encrypted_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "document_url",
              field_definition: {
                name: "document_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "date_string",
              field_definition: {
                name: "date_string"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "content_url",
              field_definition: {
                name: "content_url"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "content_type",
              field_definition: {
                name: "content_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "company",
              field_definition: {
                name: "company"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "authors",
              field_definition: {
                name: "authors"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "author_name",
              field_definition: {
                name: "author_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "author_id",
              field_definition: {
                name: "author_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "author_details",
              field_definition: {
                name: "author_details"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "attachment_id",
              field_definition: {
                name: "attachment_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "asset_class",
              field_definition: {
                name: "asset_class"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "analyst_type",
              field_definition: {
                name: "analyst_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "analyst_id",
              field_definition: {
                name: "analyst_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "all_attachments",
              field_definition: {
                name: "all_attachments"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "alert_date",
              field_definition: {
                name: "alert_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "video_url",
              field_definition: {
                name: "video_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "video_type",
              field_definition: {
                name: "video_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "type",
              field_definition: {
                name: "content_services_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "total_count",
              field_definition: {
                name: "total_count"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "title",
              field_definition: {
                name: "title"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "tickers",
              field_definition: {
                name: "tickers"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "theme_id",
              field_definition: {
                name: "theme_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "template",
              field_definition: {
                name: "template"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "synopsis",
              field_definition: {
                name: "synopsis"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "summary",
              field_definition: {
                name: "summary"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "source",
              field_definition: {
                name: "source"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "sectors",
              field_definition: {
                name: "sectors"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "scale",
              field_definition: {
                name: "scale"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rnum",
              field_definition: {
                name: "rnum"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "resdata_url",
              field_definition: {
                name: "resdata_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "ref_article_url",
              field_definition: {
                name: "ref_article_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "ref_article_title",
              field_definition: {
                name: "ref_article_title"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "pub_key",
              field_definition: {
                name: "pub_key"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "pub_id",
              field_definition: {
                name: "pub_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "pub_date",
              field_definition: {
                name: "pub_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_type",
              field_definition: {
                name: "product_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_list",
              field_definition: {
                name: "product_list"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "page_count",
              field_definition: {
                name: "page_count"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "obo_preferred_name",
              field_definition: {
                name: "obo_preferred_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "obo_last_name",
              field_definition: {
                name: "obo_last_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "obo_first_name",
              field_definition: {
                name: "obo_first_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "miliseconds",
              field_definition: {
                name: "miliseconds"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "menu_code",
              field_definition: {
                name: "menu_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "medial_url_ios",
              field_definition: {
                name: "medial_url_ios"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "media_url_android",
              field_definition: {
                name: "media_url_android"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "kv",
              field_definition: {
                name: "kv"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "image",
              field_definition: {
                name: "image"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "image_group",
              field_definition: {
                name: "image_group"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "html_escaped_title",
              field_definition: {
                name: "html_escaped_title"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "hit_count",
              field_definition: {
                name: "hit_count"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "headline",
              field_definition: {
                name: "headline"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "formatted_date_str",
              field_definition: {
                name: "formatted_date_str"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "formated_pub_date",
              field_definition: {
                name: "formated_pub_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "file_type",
              field_definition: {
                name: "file_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "file_name",
              field_definition: {
                name: "file_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "file_link",
              field_definition: {
                name: "file_link"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "encrypted_id",
              field_definition: {
                name: "encrypted_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "document_url",
              field_definition: {
                name: "document_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "date_string",
              field_definition: {
                name: "date_string"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "content_url",
              field_definition: {
                name: "content_url"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "content_type",
              field_definition: {
                name: "content_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "company",
              field_definition: {
                name: "company"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "authors",
              field_definition: {
                name: "authors"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "author_name",
              field_definition: {
                name: "author_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "author_id",
              field_definition: {
                name: "author_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "author_details",
              field_definition: {
                name: "author_details"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "attachment_id",
              field_definition: {
                name: "attachment_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "asset_class",
              field_definition: {
                name: "asset_class"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "analyst_type",
              field_definition: {
                name: "analyst_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "analyst_id",
              field_definition: {
                name: "analyst_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "all_attachments",
              field_definition: {
                name: "all_attachments"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "alert_date",
              field_definition: {
                name: "alert_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(CapitalMarketsContentService, Backbone.Events);

  return CapitalMarketsContentService;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
CapitalMarketsLogin model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class CapitalMarketsLogin
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.CapitalMarketsLogin = (function($class, _Model, Backbone) {

  var CapitalMarketsLogin = $class({

    extends: _Model,

    _constructor: function CapitalMarketsLogin() {
      CitiMobileChallengeSdk.models.CapitalMarketsLogin._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "CapitalMarketsLogin"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "CapitalMarketsLogin",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/capital_markets_logins",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "token": null,
      
      "password": null,
      
      "username": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "token",
      label: "token",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "password",
      label: "password",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "username",
      label: "username",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "CapitalMarketsTrading",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "/login",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(CapitalMarketsLogin, Backbone.Events);

  return CapitalMarketsLogin;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
CapitalMarketsOrder model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class CapitalMarketsOrder
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.CapitalMarketsOrder = (function($class, _Model, Backbone) {

  var CapitalMarketsOrder = $class({

    extends: _Model,

    _constructor: function CapitalMarketsOrder() {
      CitiMobileChallengeSdk.models.CapitalMarketsOrder._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "CapitalMarketsOrder"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "CapitalMarketsOrder",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/capital_markets_orders",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "comments": null,
      
      "currency": null,
      
      "last_price": null,
      
      "last_qty": null,
      
      "price": null,
      
      "quantity": null,
      
      "side": null,
      
      "status": null,
      
      "symbol": null,
      
      "transact_time": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "comments",
      label: "comments",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "currency",
      label: "currency",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "last_price",
      label: "last_price",
      
      
      type: "float",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "last_qty",
      label: "last_qty",
      
      
      type: "integer",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "price",
      label: "price",
      
      
      type: "float",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "quantity",
      label: "quantity",
      
      
      type: "integer",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "side",
      label: "side",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "status",
      label: "status",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "symbol",
      label: "symbol",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "transact_time",
      label: "transact_time",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "CapitalMarketsTrading",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "symbol",
              field_definition: {
                name: "symbol"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "side",
              field_definition: {
                name: "side"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "quantity",
              field_definition: {
                name: "quantity"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "price",
              field_definition: {
                name: "price"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "last_qty",
              field_definition: {
                name: "last_qty"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "last_price",
              field_definition: {
                name: "last_price"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "comments",
              field_definition: {
                name: "comments"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transact_time",
              field_definition: {
                name: "transact_time"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "symbol",
              field_definition: {
                name: "symbol"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "side",
              field_definition: {
                name: "side"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "quantity",
              field_definition: {
                name: "quantity"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "price",
              field_definition: {
                name: "price"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "last_qty",
              field_definition: {
                name: "last_qty"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "last_price",
              field_definition: {
                name: "last_price"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "comments",
              field_definition: {
                name: "comments"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "/orders",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transact_time",
              field_definition: {
                name: "transact_time"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "symbol",
              field_definition: {
                name: "symbol"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "side",
              field_definition: {
                name: "side"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "quantity",
              field_definition: {
                name: "quantity"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "price",
              field_definition: {
                name: "price"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "last_qty",
              field_definition: {
                name: "last_qty"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "last_price",
              field_definition: {
                name: "last_price"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "comments",
              field_definition: {
                name: "comments"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transact_time",
              field_definition: {
                name: "transact_time"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "symbol",
              field_definition: {
                name: "symbol"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "side",
              field_definition: {
                name: "side"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "quantity",
              field_definition: {
                name: "quantity"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "price",
              field_definition: {
                name: "price"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "last_qty",
              field_definition: {
                name: "last_qty"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "last_price",
              field_definition: {
                name: "last_price"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "comments",
              field_definition: {
                name: "comments"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transact_time",
              field_definition: {
                name: "transact_time"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "symbol",
              field_definition: {
                name: "symbol"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "side",
              field_definition: {
                name: "side"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "quantity",
              field_definition: {
                name: "quantity"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "price",
              field_definition: {
                name: "price"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "last_qty",
              field_definition: {
                name: "last_qty"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "last_price",
              field_definition: {
                name: "last_price"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "comments",
              field_definition: {
                name: "comments"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "/orders/{{params.id}}",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
        ],
        response_field_level_mappings: [
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "/orders/{{params.id}}",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(CapitalMarketsOrder, Backbone.Events);

  return CapitalMarketsOrder;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
CapitalMarketsRevenue model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class CapitalMarketsRevenue
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.CapitalMarketsRevenue = (function($class, _Model, Backbone) {

  var CapitalMarketsRevenue = $class({

    extends: _Model,

    _constructor: function CapitalMarketsRevenue() {
      CitiMobileChallengeSdk.models.CapitalMarketsRevenue._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "CapitalMarketsRevenue"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "CapitalMarketsRevenue",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/capital_markets_revenues",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "client_id": null,
      
      "client_name": null,
      
      "client_tier": null,
      
      "gross_comm": null,
      
      "month": null,
      
      "product_id": null,
      
      "product_name": null,
      
      "profit_loss": null,
      
      "region": null,
      
      "year": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "client_id",
      label: "client_id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "client_name",
      label: "client_name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "client_tier",
      label: "client_tier",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "gross_comm",
      label: "gross_comm",
      
      
      type: "float",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "month",
      label: "month",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "product_id",
      label: "product_id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "product_name",
      label: "product_name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "profit_loss",
      label: "profit_loss",
      
      
      type: "float",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "region",
      label: "region",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "year",
      label: "year",
      
      
      type: "integer",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "CapitalMarketsTrading",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "profit_loss",
              field_definition: {
                name: "profit_loss"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_name",
              field_definition: {
                name: "product_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_id",
              field_definition: {
                name: "product_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "month",
              field_definition: {
                name: "month"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "gross_comm",
              field_definition: {
                name: "gross_comm"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_tier",
              field_definition: {
                name: "client_tier"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_id",
              field_definition: {
                name: "client_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "profit_loss",
              field_definition: {
                name: "profit_loss"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_name",
              field_definition: {
                name: "product_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_id",
              field_definition: {
                name: "product_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "month",
              field_definition: {
                name: "month"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "gross_comm",
              field_definition: {
                name: "gross_comm"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_tier",
              field_definition: {
                name: "client_tier"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_id",
              field_definition: {
                name: "client_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "profit_loss",
              field_definition: {
                name: "profit_loss"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_name",
              field_definition: {
                name: "product_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_id",
              field_definition: {
                name: "product_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "month",
              field_definition: {
                name: "month"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "gross_comm",
              field_definition: {
                name: "gross_comm"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_tier",
              field_definition: {
                name: "client_tier"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_id",
              field_definition: {
                name: "client_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "profit_loss",
              field_definition: {
                name: "profit_loss"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_name",
              field_definition: {
                name: "product_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_id",
              field_definition: {
                name: "product_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "month",
              field_definition: {
                name: "month"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "gross_comm",
              field_definition: {
                name: "gross_comm"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_tier",
              field_definition: {
                name: "client_tier"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_id",
              field_definition: {
                name: "client_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "profit_loss",
              field_definition: {
                name: "profit_loss"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_name",
              field_definition: {
                name: "product_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_id",
              field_definition: {
                name: "product_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "month",
              field_definition: {
                name: "month"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "gross_comm",
              field_definition: {
                name: "gross_comm"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_tier",
              field_definition: {
                name: "client_tier"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_id",
              field_definition: {
                name: "client_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "profit_loss",
              field_definition: {
                name: "profit_loss"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_name",
              field_definition: {
                name: "product_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_id",
              field_definition: {
                name: "product_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "month",
              field_definition: {
                name: "month"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "gross_comm",
              field_definition: {
                name: "gross_comm"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_tier",
              field_definition: {
                name: "client_tier"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_id",
              field_definition: {
                name: "client_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "profit_loss",
              field_definition: {
                name: "profit_loss"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_name",
              field_definition: {
                name: "product_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_id",
              field_definition: {
                name: "product_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "month",
              field_definition: {
                name: "month"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "gross_comm",
              field_definition: {
                name: "gross_comm"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_tier",
              field_definition: {
                name: "client_tier"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "client_id",
              field_definition: {
                name: "client_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "year",
              field_definition: {
                name: "year"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "region",
              field_definition: {
                name: "region"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "profit_loss",
              field_definition: {
                name: "profit_loss"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_name",
              field_definition: {
                name: "product_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_id",
              field_definition: {
                name: "product_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "month",
              field_definition: {
                name: "month"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "gross_comm",
              field_definition: {
                name: "gross_comm"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_tier",
              field_definition: {
                name: "client_tier"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_name",
              field_definition: {
                name: "client_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "client_id",
              field_definition: {
                name: "client_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(CapitalMarketsRevenue, Backbone.Events);

  return CapitalMarketsRevenue;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
CorporatePaymentsAccount model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class CorporatePaymentsAccount
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.CorporatePaymentsAccount = (function($class, _Model, Backbone) {

  var CorporatePaymentsAccount = $class({

    extends: _Model,

    _constructor: function CorporatePaymentsAccount() {
      CitiMobileChallengeSdk.models.CorporatePaymentsAccount._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "CorporatePaymentsAccount"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "CorporatePaymentsAccount",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/corporate_payments_accounts",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "account_name": null,
      
      "base_currency_balances": null,
      
      "branch_name": null,
      
      "country_iso_code": null,
      
      "local_currency_iso_code": null,
      
      "name": null,
      
      "status": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "account_name",
      label: "account_name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "base_currency_balances",
      label: "base_currency_balances",
      
      
      type: "hash",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "branch_name",
      label: "branch_name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "country_iso_code",
      label: "country_iso_code",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "local_currency_iso_code",
      label: "local_currency_iso_code",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "name",
      label: "name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "status",
      label: "status",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "CorporatePayments",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "base_currency_balances",
              field_definition: {
                name: "base_currency_balances"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "local_currency_iso_code",
              field_definition: {
                name: "local_currency_iso_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "country_iso_code",
              field_definition: {
                name: "country_iso_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "account_name",
              field_definition: {
                name: "account_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "branch_name",
              field_definition: {
                name: "branch_name"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_name",
              field_definition: {
                name: "account_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "base_currency_balances",
              field_definition: {
                name: "base_currency_balances"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "local_currency_iso_code",
              field_definition: {
                name: "local_currency_iso_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "country_iso_code",
              field_definition: {
                name: "country_iso_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "branch_name",
              field_definition: {
                name: "branch_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$.*",
        incremental_path : "/accounts",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "base_currency_balances",
              field_definition: {
                name: "base_currency_balances"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "local_currency_iso_code",
              field_definition: {
                name: "local_currency_iso_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "country_iso_code",
              field_definition: {
                name: "country_iso_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "account_name",
              field_definition: {
                name: "account_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "branch_name",
              field_definition: {
                name: "branch_name"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_name",
              field_definition: {
                name: "account_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "base_currency_balances",
              field_definition: {
                name: "base_currency_balances"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "local_currency_iso_code",
              field_definition: {
                name: "local_currency_iso_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "country_iso_code",
              field_definition: {
                name: "country_iso_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "branch_name",
              field_definition: {
                name: "branch_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$.*",
        incremental_path : "/accounts/{{params.id}}",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_name",
              field_definition: {
                name: "account_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "base_currency_balances",
              field_definition: {
                name: "base_currency_balances"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "local_currency_iso_code",
              field_definition: {
                name: "local_currency_iso_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "country_iso_code",
              field_definition: {
                name: "country_iso_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "branch_name",
              field_definition: {
                name: "branch_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$.*",
        incremental_path : "/accounts/{{params.id}}",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "base_currency_balances",
              field_definition: {
                name: "base_currency_balances"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "local_currency_iso_code",
              field_definition: {
                name: "local_currency_iso_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "country_iso_code",
              field_definition: {
                name: "country_iso_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "account_name",
              field_definition: {
                name: "account_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "branch_name",
              field_definition: {
                name: "branch_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_name",
              field_definition: {
                name: "account_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "base_currency_balances",
              field_definition: {
                name: "base_currency_balances"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "local_currency_iso_code",
              field_definition: {
                name: "local_currency_iso_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "country_iso_code",
              field_definition: {
                name: "country_iso_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "branch_name",
              field_definition: {
                name: "branch_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(CorporatePaymentsAccount, Backbone.Events);

  return CorporatePaymentsAccount;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
CorporatePaymentsBeneficiary model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class CorporatePaymentsBeneficiary
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.CorporatePaymentsBeneficiary = (function($class, _Model, Backbone) {

  var CorporatePaymentsBeneficiary = $class({

    extends: _Model,

    _constructor: function CorporatePaymentsBeneficiary() {
      CitiMobileChallengeSdk.models.CorporatePaymentsBeneficiary._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "CorporatePaymentsBeneficiary"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "CorporatePaymentsBeneficiary",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/corporate_payments_beneficiaries",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "account_status": null,
      
      "address": null,
      
      "bank_account_type": null,
      
      "bank_address": null,
      
      "bank_country": null,
      
      "bic": null,
      
      "company_name": null,
      
      "country": null,
      
      "currency": null,
      
      "entity_type": null,
      
      "iban": null,
      
      "routing_code": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "account_status",
      label: "account_status",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "address",
      label: "address",
      
      
      type: "hash",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "bank_account_type",
      label: "bank_account_type",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "bank_address",
      label: "bank_address",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "bank_country",
      label: "bank_country",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "bic",
      label: "bic",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "company_name",
      label: "company_name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "country",
      label: "country",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "currency",
      label: "currency",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "entity_type",
      label: "entity_type",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "iban",
      label: "iban",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "routing_code",
      label: "routing_code",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "CorporatePayments",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "bank_address",
              field_definition: {
                name: "bank_address"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "iban",
              field_definition: {
                name: "iban"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "bic",
              field_definition: {
                name: "bic"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "routing_code",
              field_definition: {
                name: "routing_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "bank_account_type",
              field_definition: {
                name: "bank_account_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "bank_country",
              field_definition: {
                name: "bank_country"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "company_name",
              field_definition: {
                name: "company_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "entity_type",
              field_definition: {
                name: "entity_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "address",
              field_definition: {
                name: "address"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_status",
              field_definition: {
                name: "account_status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bank_address",
              field_definition: {
                name: "bank_address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "iban",
              field_definition: {
                name: "iban"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bic",
              field_definition: {
                name: "bic"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "routing_code",
              field_definition: {
                name: "routing_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bank_account_type",
              field_definition: {
                name: "bank_account_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bank_country",
              field_definition: {
                name: "bank_country"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "company_name",
              field_definition: {
                name: "company_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "entity_type",
              field_definition: {
                name: "entity_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "address",
              field_definition: {
                name: "address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "/beneficiaries",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "bank_address",
              field_definition: {
                name: "bank_address"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "iban",
              field_definition: {
                name: "iban"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "bic",
              field_definition: {
                name: "bic"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "routing_code",
              field_definition: {
                name: "routing_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "bank_account_type",
              field_definition: {
                name: "bank_account_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "bank_country",
              field_definition: {
                name: "bank_country"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "company_name",
              field_definition: {
                name: "company_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "entity_type",
              field_definition: {
                name: "entity_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "address",
              field_definition: {
                name: "address"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_status",
              field_definition: {
                name: "account_status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bank_address",
              field_definition: {
                name: "bank_address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "iban",
              field_definition: {
                name: "iban"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bic",
              field_definition: {
                name: "bic"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "routing_code",
              field_definition: {
                name: "routing_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bank_account_type",
              field_definition: {
                name: "bank_account_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bank_country",
              field_definition: {
                name: "bank_country"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "company_name",
              field_definition: {
                name: "company_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "entity_type",
              field_definition: {
                name: "entity_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "address",
              field_definition: {
                name: "address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "/beneficiaries/{{params.id}}",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_status",
              field_definition: {
                name: "account_status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bank_address",
              field_definition: {
                name: "bank_address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "iban",
              field_definition: {
                name: "iban"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bic",
              field_definition: {
                name: "bic"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "routing_code",
              field_definition: {
                name: "routing_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bank_account_type",
              field_definition: {
                name: "bank_account_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bank_country",
              field_definition: {
                name: "bank_country"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "company_name",
              field_definition: {
                name: "company_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "entity_type",
              field_definition: {
                name: "entity_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "address",
              field_definition: {
                name: "address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "/beneficiaries/{{params.id}}",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "account_status",
              field_definition: {
                name: "account_status"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "bank_address",
              field_definition: {
                name: "bank_address"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "iban",
              field_definition: {
                name: "iban"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "bic",
              field_definition: {
                name: "bic"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "routing_code",
              field_definition: {
                name: "routing_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "bank_account_type",
              field_definition: {
                name: "bank_account_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "bank_country",
              field_definition: {
                name: "bank_country"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "company_name",
              field_definition: {
                name: "company_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "entity_type",
              field_definition: {
                name: "entity_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "address",
              field_definition: {
                name: "address"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_status",
              field_definition: {
                name: "account_status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bank_address",
              field_definition: {
                name: "bank_address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "iban",
              field_definition: {
                name: "iban"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bic",
              field_definition: {
                name: "bic"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "routing_code",
              field_definition: {
                name: "routing_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bank_account_type",
              field_definition: {
                name: "bank_account_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bank_country",
              field_definition: {
                name: "bank_country"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "company_name",
              field_definition: {
                name: "company_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "entity_type",
              field_definition: {
                name: "entity_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "address",
              field_definition: {
                name: "address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(CorporatePaymentsBeneficiary, Backbone.Events);

  return CorporatePaymentsBeneficiary;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
CorporatePaymentsCrossBorderFxBooking model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class CorporatePaymentsCrossBorderFxBooking
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxBooking = (function($class, _Model, Backbone) {

  var CorporatePaymentsCrossBorderFxBooking = $class({

    extends: _Model,

    _constructor: function CorporatePaymentsCrossBorderFxBooking() {
      CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxBooking._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "CorporatePaymentsCrossBorderFxBooking"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "CorporatePaymentsCrossBorderFxBooking",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/corporate_payments_cross_border_fx_bookings",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "accepted_on": null,
      
      "accepted_by": null,
      
      "rate_reference": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "accepted_on",
      label: "accepted_on",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "accepted_by",
      label: "accepted_by",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "rate_reference",
      label: "rate_reference",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "CorporatePayments",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "accepted_by",
              field_definition: {
                name: "accepted_by"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "accepted_on",
              field_definition: {
                name: "accepted_on"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "/crossborder/fx_bookings",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "accepted_by",
              field_definition: {
                name: "accepted_by"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "accepted_on",
              field_definition: {
                name: "accepted_on"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "accepted_by",
              field_definition: {
                name: "accepted_by"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "accepted_on",
              field_definition: {
                name: "accepted_on"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "accepted_by",
              field_definition: {
                name: "accepted_by"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "accepted_on",
              field_definition: {
                name: "accepted_on"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "accepted_by",
              field_definition: {
                name: "accepted_by"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "accepted_on",
              field_definition: {
                name: "accepted_on"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "accepted_by",
              field_definition: {
                name: "accepted_by"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "accepted_on",
              field_definition: {
                name: "accepted_on"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "accepted_by",
              field_definition: {
                name: "accepted_by"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "accepted_on",
              field_definition: {
                name: "accepted_on"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(CorporatePaymentsCrossBorderFxBooking, Backbone.Events);

  return CorporatePaymentsCrossBorderFxBooking;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
CorporatePaymentsCrossBorderFxPayment model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class CorporatePaymentsCrossBorderFxPayment
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxPayment = (function($class, _Model, Backbone) {

  var CorporatePaymentsCrossBorderFxPayment = $class({

    extends: _Model,

    _constructor: function CorporatePaymentsCrossBorderFxPayment() {
      CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxPayment._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "CorporatePaymentsCrossBorderFxPayment"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "CorporatePaymentsCrossBorderFxPayment",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/corporate_payments_cross_border_fx_payments",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "beneficiary_account": null,
      
      "beneficiary_address": null,
      
      "beneficiary_bank": null,
      
      "beneficiary_name": null,
      
      "citi_ref": null,
      
      "created_by": null,
      
      "created_on": null,
      
      "customer_txn_ref": null,
      
      "debtor_account": null,
      
      "debtor_address": null,
      
      "debtor_name": null,
      
      "from_amount": null,
      
      "from_currency": null,
      
      "payment_details": null,
      
      "rate_reference": null,
      
      "status": null,
      
      "to_amount": null,
      
      "to_currency": null,
      
      "value_date": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "beneficiary_account",
      label: "beneficiary_account",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "beneficiary_address",
      label: "beneficiary_address",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "beneficiary_bank",
      label: "beneficiary_bank",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "beneficiary_name",
      label: "beneficiary_name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "citi_ref",
      label: "citi_ref",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "created_by",
      label: "created_by",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "created_on",
      label: "created_on",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "customer_txn_ref",
      label: "customer_txn_ref",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "debtor_account",
      label: "debtor_account",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "debtor_address",
      label: "debtor_address",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "debtor_name",
      label: "debtor_name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "from_amount",
      label: "from_amount",
      
      
      type: "float",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "from_currency",
      label: "from_currency",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "payment_details",
      label: "payment_details",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "rate_reference",
      label: "rate_reference",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "status",
      label: "status",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "to_amount",
      label: "to_amount",
      
      
      type: "float",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "to_currency",
      label: "to_currency",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "value_date",
      label: "value_date",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "CorporatePayments",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "created_on",
              field_definition: {
                name: "created_on"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_details",
              field_definition: {
                name: "payment_details"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "beneficiary_address",
              field_definition: {
                name: "beneficiary_address"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "beneficiary_name",
              field_definition: {
                name: "beneficiary_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "beneficiary_account",
              field_definition: {
                name: "beneficiary_account"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "beneficiary_bank",
              field_definition: {
                name: "beneficiary_bank"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "debtor_address",
              field_definition: {
                name: "debtor_address"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "debtor_account",
              field_definition: {
                name: "debtor_account"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "debtor_name",
              field_definition: {
                name: "debtor_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "customer_txn_ref",
              field_definition: {
                name: "customer_txn_ref"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "created_on",
              field_definition: {
                name: "created_on"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "created_by",
              field_definition: {
                name: "created_by"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_details",
              field_definition: {
                name: "payment_details"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_address",
              field_definition: {
                name: "beneficiary_address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_name",
              field_definition: {
                name: "beneficiary_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_account",
              field_definition: {
                name: "beneficiary_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_bank",
              field_definition: {
                name: "beneficiary_bank"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debtor_address",
              field_definition: {
                name: "debtor_address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debtor_account",
              field_definition: {
                name: "debtor_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debtor_name",
              field_definition: {
                name: "debtor_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_amount",
              field_definition: {
                name: "to_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_amount",
              field_definition: {
                name: "from_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "citi_ref",
              field_definition: {
                name: "citi_ref"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "customer_txn_ref",
              field_definition: {
                name: "customer_txn_ref"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "/crossborder/fx_payments",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "created_on",
              field_definition: {
                name: "created_on"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "created_by",
              field_definition: {
                name: "created_by"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_details",
              field_definition: {
                name: "payment_details"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "beneficiary_address",
              field_definition: {
                name: "beneficiary_address"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "beneficiary_name",
              field_definition: {
                name: "beneficiary_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "beneficiary_account",
              field_definition: {
                name: "beneficiary_account"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "beneficiary_bank",
              field_definition: {
                name: "beneficiary_bank"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "debtor_address",
              field_definition: {
                name: "debtor_address"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "debtor_account",
              field_definition: {
                name: "debtor_account"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "debtor_name",
              field_definition: {
                name: "debtor_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "to_amount",
              field_definition: {
                name: "to_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "from_amount",
              field_definition: {
                name: "from_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "citi_ref",
              field_definition: {
                name: "citi_ref"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "customer_txn_ref",
              field_definition: {
                name: "customer_txn_ref"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "created_on",
              field_definition: {
                name: "created_on"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "created_by",
              field_definition: {
                name: "created_by"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_details",
              field_definition: {
                name: "payment_details"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_address",
              field_definition: {
                name: "beneficiary_address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_name",
              field_definition: {
                name: "beneficiary_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_account",
              field_definition: {
                name: "beneficiary_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_bank",
              field_definition: {
                name: "beneficiary_bank"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debtor_address",
              field_definition: {
                name: "debtor_address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debtor_account",
              field_definition: {
                name: "debtor_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debtor_name",
              field_definition: {
                name: "debtor_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_amount",
              field_definition: {
                name: "to_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_amount",
              field_definition: {
                name: "from_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "citi_ref",
              field_definition: {
                name: "citi_ref"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "customer_txn_ref",
              field_definition: {
                name: "customer_txn_ref"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "created_on",
              field_definition: {
                name: "created_on"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "created_on",
              field_definition: {
                name: "created_on"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "created_by",
              field_definition: {
                name: "created_by"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_details",
              field_definition: {
                name: "payment_details"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_address",
              field_definition: {
                name: "beneficiary_address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_name",
              field_definition: {
                name: "beneficiary_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_account",
              field_definition: {
                name: "beneficiary_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_bank",
              field_definition: {
                name: "beneficiary_bank"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debtor_address",
              field_definition: {
                name: "debtor_address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debtor_account",
              field_definition: {
                name: "debtor_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debtor_name",
              field_definition: {
                name: "debtor_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_amount",
              field_definition: {
                name: "to_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_amount",
              field_definition: {
                name: "from_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "citi_ref",
              field_definition: {
                name: "citi_ref"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "customer_txn_ref",
              field_definition: {
                name: "customer_txn_ref"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "/crossborder/fx_payments/{{params.id}}",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "created_on",
              field_definition: {
                name: "created_on"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "created_by",
              field_definition: {
                name: "created_by"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_details",
              field_definition: {
                name: "payment_details"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "beneficiary_address",
              field_definition: {
                name: "beneficiary_address"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "beneficiary_name",
              field_definition: {
                name: "beneficiary_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "beneficiary_account",
              field_definition: {
                name: "beneficiary_account"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "beneficiary_bank",
              field_definition: {
                name: "beneficiary_bank"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "debtor_address",
              field_definition: {
                name: "debtor_address"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "debtor_account",
              field_definition: {
                name: "debtor_account"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "debtor_name",
              field_definition: {
                name: "debtor_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "to_amount",
              field_definition: {
                name: "to_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "from_amount",
              field_definition: {
                name: "from_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "citi_ref",
              field_definition: {
                name: "citi_ref"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "customer_txn_ref",
              field_definition: {
                name: "customer_txn_ref"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "created_on",
              field_definition: {
                name: "created_on"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "created_by",
              field_definition: {
                name: "created_by"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_details",
              field_definition: {
                name: "payment_details"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_address",
              field_definition: {
                name: "beneficiary_address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_name",
              field_definition: {
                name: "beneficiary_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_account",
              field_definition: {
                name: "beneficiary_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_bank",
              field_definition: {
                name: "beneficiary_bank"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debtor_address",
              field_definition: {
                name: "debtor_address"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debtor_account",
              field_definition: {
                name: "debtor_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debtor_name",
              field_definition: {
                name: "debtor_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_amount",
              field_definition: {
                name: "to_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_amount",
              field_definition: {
                name: "from_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "citi_ref",
              field_definition: {
                name: "citi_ref"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "customer_txn_ref",
              field_definition: {
                name: "customer_txn_ref"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(CorporatePaymentsCrossBorderFxPayment, Backbone.Events);

  return CorporatePaymentsCrossBorderFxPayment;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
CorporatePaymentsCrossBorderFxQuote model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class CorporatePaymentsCrossBorderFxQuote
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxQuote = (function($class, _Model, Backbone) {

  var CorporatePaymentsCrossBorderFxQuote = $class({

    extends: _Model,

    _constructor: function CorporatePaymentsCrossBorderFxQuote() {
      CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxQuote._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "CorporatePaymentsCrossBorderFxQuote"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "CorporatePaymentsCrossBorderFxQuote",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/corporate_payments_cross_border_fx_quotes",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "requested_on": null,
      
      "from_amount": null,
      
      "from_currency": null,
      
      "rate_expiry": null,
      
      "rate_reference": null,
      
      "requested_by": null,
      
      "to_amount": null,
      
      "to_currency": null,
      
      "value_date": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "requested_on",
      label: "requested_on",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "from_amount",
      label: "from_amount",
      
      
      type: "float",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "from_currency",
      label: "from_currency",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "rate_expiry",
      label: "rate_expiry",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "rate_reference",
      label: "rate_reference",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "requested_by",
      label: "requested_by",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "to_amount",
      label: "to_amount",
      
      
      type: "float",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "to_currency",
      label: "to_currency",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "value_date",
      label: "value_date",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "CorporatePayments",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "from_amount",
              field_definition: {
                name: "from_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "requested_by",
              field_definition: {
                name: "requested_by"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate_expiry",
              field_definition: {
                name: "rate_expiry"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_amount",
              field_definition: {
                name: "to_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "requested_on",
              field_definition: {
                name: "requested_on"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "/crossborder/fx_quotes",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "from_amount",
              field_definition: {
                name: "from_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "requested_by",
              field_definition: {
                name: "requested_by"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rate_expiry",
              field_definition: {
                name: "rate_expiry"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "to_amount",
              field_definition: {
                name: "to_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "requested_on",
              field_definition: {
                name: "requested_on"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_amount",
              field_definition: {
                name: "from_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "requested_by",
              field_definition: {
                name: "requested_by"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate_expiry",
              field_definition: {
                name: "rate_expiry"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_amount",
              field_definition: {
                name: "to_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "requested_on",
              field_definition: {
                name: "requested_on"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "from_amount",
              field_definition: {
                name: "from_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "requested_by",
              field_definition: {
                name: "requested_by"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rate_expiry",
              field_definition: {
                name: "rate_expiry"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "to_amount",
              field_definition: {
                name: "to_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "requested_on",
              field_definition: {
                name: "requested_on"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_amount",
              field_definition: {
                name: "from_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "requested_by",
              field_definition: {
                name: "requested_by"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate_expiry",
              field_definition: {
                name: "rate_expiry"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_amount",
              field_definition: {
                name: "to_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "requested_on",
              field_definition: {
                name: "requested_on"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "from_amount",
              field_definition: {
                name: "from_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "requested_by",
              field_definition: {
                name: "requested_by"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rate_expiry",
              field_definition: {
                name: "rate_expiry"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "to_amount",
              field_definition: {
                name: "to_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "requested_on",
              field_definition: {
                name: "requested_on"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_amount",
              field_definition: {
                name: "from_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "requested_by",
              field_definition: {
                name: "requested_by"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate_expiry",
              field_definition: {
                name: "rate_expiry"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_amount",
              field_definition: {
                name: "to_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "requested_on",
              field_definition: {
                name: "requested_on"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate_reference",
              field_definition: {
                name: "rate_reference"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(CorporatePaymentsCrossBorderFxQuote, Backbone.Events);

  return CorporatePaymentsCrossBorderFxQuote;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
CorporatePaymentsLogin model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class CorporatePaymentsLogin
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.CorporatePaymentsLogin = (function($class, _Model, Backbone) {

  var CorporatePaymentsLogin = $class({

    extends: _Model,

    _constructor: function CorporatePaymentsLogin() {
      CitiMobileChallengeSdk.models.CorporatePaymentsLogin._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "CorporatePaymentsLogin"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "CorporatePaymentsLogin",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/corporate_payments_logins",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "token": null,
      
      "password": null,
      
      "username": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "token",
      label: "token",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "password",
      label: "password",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "username",
      label: "username",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
        "token",
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "CorporatePayments",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$.*",
        incremental_path : "/login",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(CorporatePaymentsLogin, Backbone.Events);

  return CorporatePaymentsLogin;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
CorporatePaymentsPayment model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class CorporatePaymentsPayment
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.CorporatePaymentsPayment = (function($class, _Model, Backbone) {

  var CorporatePaymentsPayment = $class({

    extends: _Model,

    _constructor: function CorporatePaymentsPayment() {
      CitiMobileChallengeSdk.models.CorporatePaymentsPayment._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "CorporatePaymentsPayment"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "CorporatePaymentsPayment",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/corporate_payments_payments",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "beneficiary_id": null,
      
      "branch_name": null,
      
      "created_by": null,
      
      "created_on": null,
      
      "customer_reference_number": null,
      
      "debit_account_name": null,
      
      "debit_account_number": null,
      
      "email": null,
      
      "payment_amount": null,
      
      "payment_currency": null,
      
      "payment_details": null,
      
      "payment_method": null,
      
      "payment_type": null,
      
      "status": null,
      
      "transaction_reference_number": null,
      
      "value_date": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "beneficiary_id",
      label: "beneficiary_id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "branch_name",
      label: "branch_name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "created_by",
      label: "created_by",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "created_on",
      label: "created_on",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "customer_reference_number",
      label: "customer_reference_number",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "debit_account_name",
      label: "debit_account_name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "debit_account_number",
      label: "debit_account_number",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "email",
      label: "email",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "payment_amount",
      label: "payment_amount",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "payment_currency",
      label: "payment_currency",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "payment_details",
      label: "payment_details",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "payment_method",
      label: "payment_method",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "payment_type",
      label: "payment_type",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "status",
      label: "status",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "transaction_reference_number",
      label: "transaction_reference_number",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "value_date",
      label: "value_date",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "CorporatePayments",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_details",
              field_definition: {
                name: "payment_details"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "customer_reference_number",
              field_definition: {
                name: "customer_reference_number"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "created_on",
              field_definition: {
                name: "created_on"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "created_by",
              field_definition: {
                name: "created_by"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "debit_account_number",
              field_definition: {
                name: "debit_account_number"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "debit_account_name",
              field_definition: {
                name: "debit_account_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "beneficiary_id",
              field_definition: {
                name: "beneficiary_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_type",
              field_definition: {
                name: "payment_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_amount",
              field_definition: {
                name: "payment_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_currency",
              field_definition: {
                name: "payment_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_method",
              field_definition: {
                name: "payment_method"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "email",
              field_definition: {
                name: "email"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_reference_number",
              field_definition: {
                name: "transaction_reference_number"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "branch_name",
              field_definition: {
                name: "branch_name"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_details",
              field_definition: {
                name: "payment_details"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "customer_reference_number",
              field_definition: {
                name: "customer_reference_number"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "created_on",
              field_definition: {
                name: "created_on"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "created_by",
              field_definition: {
                name: "created_by"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debit_account_number",
              field_definition: {
                name: "debit_account_number"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debit_account_name",
              field_definition: {
                name: "debit_account_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_id",
              field_definition: {
                name: "beneficiary_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_type",
              field_definition: {
                name: "payment_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_amount",
              field_definition: {
                name: "payment_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_currency",
              field_definition: {
                name: "payment_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_method",
              field_definition: {
                name: "payment_method"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "email",
              field_definition: {
                name: "email"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_reference_number",
              field_definition: {
                name: "transaction_reference_number"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "branch_name",
              field_definition: {
                name: "branch_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "/payments",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_details",
              field_definition: {
                name: "payment_details"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "customer_reference_number",
              field_definition: {
                name: "customer_reference_number"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "created_on",
              field_definition: {
                name: "created_on"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "created_by",
              field_definition: {
                name: "created_by"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "debit_account_number",
              field_definition: {
                name: "debit_account_number"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "debit_account_name",
              field_definition: {
                name: "debit_account_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "beneficiary_id",
              field_definition: {
                name: "beneficiary_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_type",
              field_definition: {
                name: "payment_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_amount",
              field_definition: {
                name: "payment_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_currency",
              field_definition: {
                name: "payment_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_method",
              field_definition: {
                name: "payment_method"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "email",
              field_definition: {
                name: "email"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_reference_number",
              field_definition: {
                name: "transaction_reference_number"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "branch_name",
              field_definition: {
                name: "branch_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_details",
              field_definition: {
                name: "payment_details"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "customer_reference_number",
              field_definition: {
                name: "customer_reference_number"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "created_on",
              field_definition: {
                name: "created_on"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "created_by",
              field_definition: {
                name: "created_by"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debit_account_number",
              field_definition: {
                name: "debit_account_number"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debit_account_name",
              field_definition: {
                name: "debit_account_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_id",
              field_definition: {
                name: "beneficiary_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_type",
              field_definition: {
                name: "payment_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_amount",
              field_definition: {
                name: "payment_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_currency",
              field_definition: {
                name: "payment_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_method",
              field_definition: {
                name: "payment_method"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "email",
              field_definition: {
                name: "email"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_reference_number",
              field_definition: {
                name: "transaction_reference_number"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "branch_name",
              field_definition: {
                name: "branch_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_details",
              field_definition: {
                name: "payment_details"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "customer_reference_number",
              field_definition: {
                name: "customer_reference_number"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "created_on",
              field_definition: {
                name: "created_on"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "created_by",
              field_definition: {
                name: "created_by"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debit_account_number",
              field_definition: {
                name: "debit_account_number"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debit_account_name",
              field_definition: {
                name: "debit_account_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_id",
              field_definition: {
                name: "beneficiary_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_type",
              field_definition: {
                name: "payment_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_amount",
              field_definition: {
                name: "payment_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_currency",
              field_definition: {
                name: "payment_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_method",
              field_definition: {
                name: "payment_method"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "email",
              field_definition: {
                name: "email"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_reference_number",
              field_definition: {
                name: "transaction_reference_number"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "branch_name",
              field_definition: {
                name: "branch_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "/payments/{{params.id}}",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_details",
              field_definition: {
                name: "payment_details"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "customer_reference_number",
              field_definition: {
                name: "customer_reference_number"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "created_on",
              field_definition: {
                name: "created_on"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "created_by",
              field_definition: {
                name: "created_by"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "debit_account_number",
              field_definition: {
                name: "debit_account_number"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "debit_account_name",
              field_definition: {
                name: "debit_account_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "beneficiary_id",
              field_definition: {
                name: "beneficiary_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_type",
              field_definition: {
                name: "payment_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_amount",
              field_definition: {
                name: "payment_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_currency",
              field_definition: {
                name: "payment_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_method",
              field_definition: {
                name: "payment_method"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "email",
              field_definition: {
                name: "email"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_reference_number",
              field_definition: {
                name: "transaction_reference_number"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "branch_name",
              field_definition: {
                name: "branch_name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "status",
              field_definition: {
                name: "status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_details",
              field_definition: {
                name: "payment_details"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "customer_reference_number",
              field_definition: {
                name: "customer_reference_number"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "created_on",
              field_definition: {
                name: "created_on"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "created_by",
              field_definition: {
                name: "created_by"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debit_account_number",
              field_definition: {
                name: "debit_account_number"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "debit_account_name",
              field_definition: {
                name: "debit_account_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "beneficiary_id",
              field_definition: {
                name: "beneficiary_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_type",
              field_definition: {
                name: "payment_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_amount",
              field_definition: {
                name: "payment_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_currency",
              field_definition: {
                name: "payment_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_method",
              field_definition: {
                name: "payment_method"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "email",
              field_definition: {
                name: "email"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value_date",
              field_definition: {
                name: "value_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_reference_number",
              field_definition: {
                name: "transaction_reference_number"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "branch_name",
              field_definition: {
                name: "branch_name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(CorporatePaymentsPayment, Backbone.Events);

  return CorporatePaymentsPayment;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
RetailBankingAccount model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class RetailBankingAccount
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.RetailBankingAccount = (function($class, _Model, Backbone) {

  var RetailBankingAccount = $class({

    extends: _Model,

    _constructor: function RetailBankingAccount() {
      CitiMobileChallengeSdk.models.RetailBankingAccount._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "RetailBankingAccount"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "RetailBankingAccount",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/retail_banking_accounts",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "account_status": null,
      
      "balances": null,
      
      "category_code": null,
      
      "cops_indicator": null,
      
      "details_exist": null,
      
      "display_acct_no": null,
      
      "is_destination_account": null,
      
      "is_source_account": null,
      
      "msgs": null,
      
      "offers_indicator": null,
      
      "product_currency": null,
      
      "product_description": null,
      
      "product_type": null,
      
      "txn_exist": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "account_status",
      label: "account_status",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "balances",
      label: "balances",
      
      
      type: "hash",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "category_code",
      label: "category_code",
      
      
      type: "integer",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "cops_indicator",
      label: "cops_indicator",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "details_exist",
      label: "details_exist",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "display_acct_no",
      label: "display_acct_no",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "is_destination_account",
      label: "is_destination_account",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "is_source_account",
      label: "is_source_account",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "msgs",
      label: "msgs",
      
      
      type: "hash",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "offers_indicator",
      label: "offers_indicator",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "product_currency",
      label: "product_currency",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "product_description",
      label: "product_description",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "product_type",
      label: "product_type",
      
      
      type: "integer",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "txn_exist",
      label: "txn_exist",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "RetailBanking",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "txn_exist",
              field_definition: {
                name: "txn_exist"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "msgs",
              field_definition: {
                name: "msgs"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "account_status",
              field_definition: {
                name: "account_status"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "balances",
              field_definition: {
                name: "balances"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "offers_indicator",
              field_definition: {
                name: "offers_indicator"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "display_acct_no",
              field_definition: {
                name: "display_acct_no"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "details_exist",
              field_definition: {
                name: "details_exist"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "category_code",
              field_definition: {
                name: "category_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "is_destination_account",
              field_definition: {
                name: "is_destination_account"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "is_source_account",
              field_definition: {
                name: "is_source_account"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_type",
              field_definition: {
                name: "product_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_currency",
              field_definition: {
                name: "product_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "cops_indicator",
              field_definition: {
                name: "cops_indicator"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_description",
              field_definition: {
                name: "product_description"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "txn_exist",
              field_definition: {
                name: "txn_exist"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "msgs",
              field_definition: {
                name: "msgs"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_status",
              field_definition: {
                name: "account_status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "balances",
              field_definition: {
                name: "balances"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "offers_indicator",
              field_definition: {
                name: "offers_indicator"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "display_acct_no",
              field_definition: {
                name: "display_acct_no"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "details_exist",
              field_definition: {
                name: "details_exist"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "category_code",
              field_definition: {
                name: "category_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "is_destination_account",
              field_definition: {
                name: "is_destination_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "is_source_account",
              field_definition: {
                name: "is_source_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_type",
              field_definition: {
                name: "product_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_currency",
              field_definition: {
                name: "product_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "cops_indicator",
              field_definition: {
                name: "cops_indicator"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_description",
              field_definition: {
                name: "product_description"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "txn_exist",
              field_definition: {
                name: "txn_exist"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "msgs",
              field_definition: {
                name: "msgs"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "account_status",
              field_definition: {
                name: "account_status"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "balances",
              field_definition: {
                name: "balances"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "offers_indicator",
              field_definition: {
                name: "offers_indicator"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "display_acct_no",
              field_definition: {
                name: "display_acct_no"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "details_exist",
              field_definition: {
                name: "details_exist"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "category_code",
              field_definition: {
                name: "category_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "is_destination_account",
              field_definition: {
                name: "is_destination_account"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "is_source_account",
              field_definition: {
                name: "is_source_account"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_type",
              field_definition: {
                name: "product_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_currency",
              field_definition: {
                name: "product_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "cops_indicator",
              field_definition: {
                name: "cops_indicator"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_description",
              field_definition: {
                name: "product_description"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "txn_exist",
              field_definition: {
                name: "txn_exist"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "msgs",
              field_definition: {
                name: "msgs"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_status",
              field_definition: {
                name: "account_status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "balances",
              field_definition: {
                name: "balances"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "offers_indicator",
              field_definition: {
                name: "offers_indicator"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "display_acct_no",
              field_definition: {
                name: "display_acct_no"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "details_exist",
              field_definition: {
                name: "details_exist"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "category_code",
              field_definition: {
                name: "category_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "is_destination_account",
              field_definition: {
                name: "is_destination_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "is_source_account",
              field_definition: {
                name: "is_source_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_type",
              field_definition: {
                name: "product_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_currency",
              field_definition: {
                name: "product_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "cops_indicator",
              field_definition: {
                name: "cops_indicator"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_description",
              field_definition: {
                name: "product_description"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "txn_exist",
              field_definition: {
                name: "txn_exist"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "msgs",
              field_definition: {
                name: "msgs"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_status",
              field_definition: {
                name: "account_status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "balances",
              field_definition: {
                name: "balances"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "offers_indicator",
              field_definition: {
                name: "offers_indicator"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "display_acct_no",
              field_definition: {
                name: "display_acct_no"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "details_exist",
              field_definition: {
                name: "details_exist"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "category_code",
              field_definition: {
                name: "category_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "is_destination_account",
              field_definition: {
                name: "is_destination_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "is_source_account",
              field_definition: {
                name: "is_source_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_type",
              field_definition: {
                name: "product_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_currency",
              field_definition: {
                name: "product_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "cops_indicator",
              field_definition: {
                name: "cops_indicator"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_description",
              field_definition: {
                name: "product_description"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "/accounts/{{params.id}}",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "txn_exist",
              field_definition: {
                name: "txn_exist"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "msgs",
              field_definition: {
                name: "msgs"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "account_status",
              field_definition: {
                name: "account_status"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "balances",
              field_definition: {
                name: "balances"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "offers_indicator",
              field_definition: {
                name: "offers_indicator"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "display_acct_no",
              field_definition: {
                name: "display_acct_no"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "details_exist",
              field_definition: {
                name: "details_exist"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "category_code",
              field_definition: {
                name: "category_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "is_destination_account",
              field_definition: {
                name: "is_destination_account"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "is_source_account",
              field_definition: {
                name: "is_source_account"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_type",
              field_definition: {
                name: "product_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_currency",
              field_definition: {
                name: "product_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "cops_indicator",
              field_definition: {
                name: "cops_indicator"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "product_description",
              field_definition: {
                name: "product_description"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "txn_exist",
              field_definition: {
                name: "txn_exist"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "msgs",
              field_definition: {
                name: "msgs"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_status",
              field_definition: {
                name: "account_status"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "balances",
              field_definition: {
                name: "balances"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "offers_indicator",
              field_definition: {
                name: "offers_indicator"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "display_acct_no",
              field_definition: {
                name: "display_acct_no"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "details_exist",
              field_definition: {
                name: "details_exist"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "category_code",
              field_definition: {
                name: "category_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "is_destination_account",
              field_definition: {
                name: "is_destination_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "is_source_account",
              field_definition: {
                name: "is_source_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_type",
              field_definition: {
                name: "product_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_currency",
              field_definition: {
                name: "product_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "cops_indicator",
              field_definition: {
                name: "cops_indicator"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "product_description",
              field_definition: {
                name: "product_description"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(RetailBankingAccount, Backbone.Events);

  return RetailBankingAccount;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
RetailBankingAccountBalance model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class RetailBankingAccountBalance
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.RetailBankingAccountBalance = (function($class, _Model, Backbone) {

  var RetailBankingAccountBalance = $class({

    extends: _Model,

    _constructor: function RetailBankingAccountBalance() {
      CitiMobileChallengeSdk.models.RetailBankingAccountBalance._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "RetailBankingAccountBalance"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "RetailBankingAccountBalance",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/retail_banking_account_balances",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "account_id": null,
      
      "balance_type": null,
      
      "value": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "account_id",
      label: "account_id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "balance_type",
      label: "balance_type",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "value",
      label: "value",
      
      
      type: "integer",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "RetailBanking",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "value",
              field_definition: {
                name: "value"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "type",
              field_definition: {
                name: "balance_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "account_id",
              field_definition: {
                name: "account_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value",
              field_definition: {
                name: "value"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "type",
              field_definition: {
                name: "balance_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_id",
              field_definition: {
                name: "account_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "value",
              field_definition: {
                name: "value"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "type",
              field_definition: {
                name: "balance_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "account_id",
              field_definition: {
                name: "account_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value",
              field_definition: {
                name: "value"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "type",
              field_definition: {
                name: "balance_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_id",
              field_definition: {
                name: "account_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "value",
              field_definition: {
                name: "value"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "type",
              field_definition: {
                name: "balance_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "account_id",
              field_definition: {
                name: "account_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value",
              field_definition: {
                name: "value"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "type",
              field_definition: {
                name: "balance_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_id",
              field_definition: {
                name: "account_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "value",
              field_definition: {
                name: "value"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "type",
              field_definition: {
                name: "balance_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "account_id",
              field_definition: {
                name: "account_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value",
              field_definition: {
                name: "value"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "type",
              field_definition: {
                name: "balance_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_id",
              field_definition: {
                name: "account_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(RetailBankingAccountBalance, Backbone.Events);

  return RetailBankingAccountBalance;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
RetailBankingAccountFundTransfer model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class RetailBankingAccountFundTransfer
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.RetailBankingAccountFundTransfer = (function($class, _Model, Backbone) {

  var RetailBankingAccountFundTransfer = $class({

    extends: _Model,

    _constructor: function RetailBankingAccountFundTransfer() {
      CitiMobileChallengeSdk.models.RetailBankingAccountFundTransfer._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "RetailBankingAccountFundTransfer"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "RetailBankingAccountFundTransfer",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/retail_banking_account_fund_transfers",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "amount": null,
      
      "currency": null,
      
      "destination_account_id": null,
      
      "destination_id": null,
      
      "memo": null,
      
      "payee_desc": null,
      
      "payee_id": null,
      
      "payee_type": null,
      
      "payment_type": null,
      
      "reference_number": null,
      
      "transaction_date": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "amount",
      label: "amount",
      
      
      type: "float",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "currency",
      label: "currency",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "destination_account_id",
      label: "destination_account_id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "destination_id",
      label: "destination_id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "memo",
      label: "memo",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "payee_desc",
      label: "payee_desc",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "payee_id",
      label: "payee_id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "payee_type",
      label: "payee_type",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "payment_type",
      label: "payment_type",
      
      
      type: "integer",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "reference_number",
      label: "reference_number",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "transaction_date",
      label: "transaction_date",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "RetailBanking",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_date",
              field_definition: {
                name: "transaction_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_type",
              field_definition: {
                name: "payment_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_type",
              field_definition: {
                name: "payee_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_id",
              field_definition: {
                name: "payee_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_desc",
              field_definition: {
                name: "payee_desc"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "memo",
              field_definition: {
                name: "memo"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "destination_id",
              field_definition: {
                name: "destination_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "destination_account_id",
              field_definition: {
                name: "destination_account_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "amount",
              field_definition: {
                name: "amount"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "reference_number",
              field_definition: {
                name: "reference_number"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_date",
              field_definition: {
                name: "transaction_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_type",
              field_definition: {
                name: "payment_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_type",
              field_definition: {
                name: "payee_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_id",
              field_definition: {
                name: "payee_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_desc",
              field_definition: {
                name: "payee_desc"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "memo",
              field_definition: {
                name: "memo"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "destination_id",
              field_definition: {
                name: "destination_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "destination_account_id",
              field_definition: {
                name: "destination_account_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "amount",
              field_definition: {
                name: "amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "/accounts/{{params.id}}/fund_transfers",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "reference_number",
              field_definition: {
                name: "reference_number"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_date",
              field_definition: {
                name: "transaction_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_type",
              field_definition: {
                name: "payment_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_type",
              field_definition: {
                name: "payee_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_id",
              field_definition: {
                name: "payee_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_desc",
              field_definition: {
                name: "payee_desc"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "memo",
              field_definition: {
                name: "memo"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "destination_id",
              field_definition: {
                name: "destination_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "destination_account_id",
              field_definition: {
                name: "destination_account_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "amount",
              field_definition: {
                name: "amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "reference_number",
              field_definition: {
                name: "reference_number"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_date",
              field_definition: {
                name: "transaction_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_type",
              field_definition: {
                name: "payment_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_type",
              field_definition: {
                name: "payee_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_id",
              field_definition: {
                name: "payee_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_desc",
              field_definition: {
                name: "payee_desc"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "memo",
              field_definition: {
                name: "memo"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "destination_id",
              field_definition: {
                name: "destination_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "destination_account_id",
              field_definition: {
                name: "destination_account_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "amount",
              field_definition: {
                name: "amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "reference_number",
              field_definition: {
                name: "reference_number"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_date",
              field_definition: {
                name: "transaction_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_type",
              field_definition: {
                name: "payment_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_type",
              field_definition: {
                name: "payee_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_id",
              field_definition: {
                name: "payee_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_desc",
              field_definition: {
                name: "payee_desc"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "memo",
              field_definition: {
                name: "memo"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "destination_id",
              field_definition: {
                name: "destination_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "destination_account_id",
              field_definition: {
                name: "destination_account_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "amount",
              field_definition: {
                name: "amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "reference_number",
              field_definition: {
                name: "reference_number"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_date",
              field_definition: {
                name: "transaction_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_type",
              field_definition: {
                name: "payment_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_type",
              field_definition: {
                name: "payee_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_id",
              field_definition: {
                name: "payee_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_desc",
              field_definition: {
                name: "payee_desc"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "memo",
              field_definition: {
                name: "memo"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "destination_id",
              field_definition: {
                name: "destination_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "destination_account_id",
              field_definition: {
                name: "destination_account_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "amount",
              field_definition: {
                name: "amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "reference_number",
              field_definition: {
                name: "reference_number"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_date",
              field_definition: {
                name: "transaction_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_type",
              field_definition: {
                name: "payment_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_type",
              field_definition: {
                name: "payee_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_id",
              field_definition: {
                name: "payee_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_desc",
              field_definition: {
                name: "payee_desc"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "memo",
              field_definition: {
                name: "memo"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "destination_id",
              field_definition: {
                name: "destination_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "destination_account_id",
              field_definition: {
                name: "destination_account_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "amount",
              field_definition: {
                name: "amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "reference_number",
              field_definition: {
                name: "reference_number"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_date",
              field_definition: {
                name: "transaction_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_type",
              field_definition: {
                name: "payment_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_type",
              field_definition: {
                name: "payee_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_id",
              field_definition: {
                name: "payee_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_desc",
              field_definition: {
                name: "payee_desc"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "memo",
              field_definition: {
                name: "memo"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "destination_id",
              field_definition: {
                name: "destination_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "destination_account_id",
              field_definition: {
                name: "destination_account_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "currency",
              field_definition: {
                name: "currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "amount",
              field_definition: {
                name: "amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(RetailBankingAccountFundTransfer, Backbone.Events);

  return RetailBankingAccountFundTransfer;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
RetailBankingAccountTransaction model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class RetailBankingAccountTransaction
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.RetailBankingAccountTransaction = (function($class, _Model, Backbone) {

  var RetailBankingAccountTransaction = $class({

    extends: _Model,

    _constructor: function RetailBankingAccountTransaction() {
      CitiMobileChallengeSdk.models.RetailBankingAccountTransaction._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "RetailBankingAccountTransaction"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "RetailBankingAccountTransaction",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/retail_banking_account_transactions",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "account_id": null,
      
      "activity": null,
      
      "check_image_eligible": null,
      
      "date_posted": null,
      
      "formatted_amount": null,
      
      "pending_date": null,
      
      "transaction_amount": null,
      
      "transaction_description": null,
      
      "transaction_identifier": null,
      
      "transaction_index": null,
      
      "transaction_type": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "account_id",
      label: "account_id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "activity",
      label: "activity",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "check_image_eligible",
      label: "check_image_eligible",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "date_posted",
      label: "date_posted",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "formatted_amount",
      label: "formatted_amount",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "pending_date",
      label: "pending_date",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "transaction_amount",
      label: "transaction_amount",
      
      
      type: "float",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "transaction_description",
      label: "transaction_description",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "transaction_identifier",
      label: "transaction_identifier",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "transaction_index",
      label: "transaction_index",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "transaction_type",
      label: "transaction_type",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "RetailBanking",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_type",
              field_definition: {
                name: "transaction_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_index",
              field_definition: {
                name: "transaction_index"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_identifier",
              field_definition: {
                name: "transaction_identifier"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_amount",
              field_definition: {
                name: "transaction_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "pending_date",
              field_definition: {
                name: "pending_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "formatted_amount",
              field_definition: {
                name: "formatted_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "description",
              field_definition: {
                name: "transaction_description"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "date_posted",
              field_definition: {
                name: "date_posted"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "check_image_eligible",
              field_definition: {
                name: "check_image_eligible"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "activity",
              field_definition: {
                name: "activity"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "account_id",
              field_definition: {
                name: "account_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_type",
              field_definition: {
                name: "transaction_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_index",
              field_definition: {
                name: "transaction_index"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_identifier",
              field_definition: {
                name: "transaction_identifier"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_amount",
              field_definition: {
                name: "transaction_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "pending_date",
              field_definition: {
                name: "pending_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "formatted_amount",
              field_definition: {
                name: "formatted_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "description",
              field_definition: {
                name: "transaction_description"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "date_posted",
              field_definition: {
                name: "date_posted"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "check_image_eligible",
              field_definition: {
                name: "check_image_eligible"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "activity",
              field_definition: {
                name: "activity"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_id",
              field_definition: {
                name: "account_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_type",
              field_definition: {
                name: "transaction_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_index",
              field_definition: {
                name: "transaction_index"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_identifier",
              field_definition: {
                name: "transaction_identifier"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_amount",
              field_definition: {
                name: "transaction_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "pending_date",
              field_definition: {
                name: "pending_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "formatted_amount",
              field_definition: {
                name: "formatted_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "description",
              field_definition: {
                name: "transaction_description"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "date_posted",
              field_definition: {
                name: "date_posted"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "check_image_eligible",
              field_definition: {
                name: "check_image_eligible"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "activity",
              field_definition: {
                name: "activity"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "account_id",
              field_definition: {
                name: "account_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_type",
              field_definition: {
                name: "transaction_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_index",
              field_definition: {
                name: "transaction_index"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_identifier",
              field_definition: {
                name: "transaction_identifier"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_amount",
              field_definition: {
                name: "transaction_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "pending_date",
              field_definition: {
                name: "pending_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "formatted_amount",
              field_definition: {
                name: "formatted_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "description",
              field_definition: {
                name: "transaction_description"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "date_posted",
              field_definition: {
                name: "date_posted"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "check_image_eligible",
              field_definition: {
                name: "check_image_eligible"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "activity",
              field_definition: {
                name: "activity"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_id",
              field_definition: {
                name: "account_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_type",
              field_definition: {
                name: "transaction_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_index",
              field_definition: {
                name: "transaction_index"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_identifier",
              field_definition: {
                name: "transaction_identifier"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_amount",
              field_definition: {
                name: "transaction_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "pending_date",
              field_definition: {
                name: "pending_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "formatted_amount",
              field_definition: {
                name: "formatted_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "description",
              field_definition: {
                name: "transaction_description"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "date_posted",
              field_definition: {
                name: "date_posted"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "check_image_eligible",
              field_definition: {
                name: "check_image_eligible"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "activity",
              field_definition: {
                name: "activity"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "account_id",
              field_definition: {
                name: "account_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_type",
              field_definition: {
                name: "transaction_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_index",
              field_definition: {
                name: "transaction_index"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_identifier",
              field_definition: {
                name: "transaction_identifier"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_amount",
              field_definition: {
                name: "transaction_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "pending_date",
              field_definition: {
                name: "pending_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "formatted_amount",
              field_definition: {
                name: "formatted_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "description",
              field_definition: {
                name: "transaction_description"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "date_posted",
              field_definition: {
                name: "date_posted"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "check_image_eligible",
              field_definition: {
                name: "check_image_eligible"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "activity",
              field_definition: {
                name: "activity"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_id",
              field_definition: {
                name: "account_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_type",
              field_definition: {
                name: "transaction_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_index",
              field_definition: {
                name: "transaction_index"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_identifier",
              field_definition: {
                name: "transaction_identifier"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "transaction_amount",
              field_definition: {
                name: "transaction_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "pending_date",
              field_definition: {
                name: "pending_date"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "formatted_amount",
              field_definition: {
                name: "formatted_amount"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "description",
              field_definition: {
                name: "transaction_description"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "date_posted",
              field_definition: {
                name: "date_posted"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "check_image_eligible",
              field_definition: {
                name: "check_image_eligible"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "activity",
              field_definition: {
                name: "activity"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "account_id",
              field_definition: {
                name: "account_id"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_type",
              field_definition: {
                name: "transaction_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_index",
              field_definition: {
                name: "transaction_index"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_identifier",
              field_definition: {
                name: "transaction_identifier"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "transaction_amount",
              field_definition: {
                name: "transaction_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "pending_date",
              field_definition: {
                name: "pending_date"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "formatted_amount",
              field_definition: {
                name: "formatted_amount"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "description",
              field_definition: {
                name: "transaction_description"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "date_posted",
              field_definition: {
                name: "date_posted"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "check_image_eligible",
              field_definition: {
                name: "check_image_eligible"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "activity",
              field_definition: {
                name: "activity"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "account_id",
              field_definition: {
                name: "account_id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(RetailBankingAccountTransaction, Backbone.Events);

  return RetailBankingAccountTransaction;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
RetailBankingForeignCurrency model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class RetailBankingForeignCurrency
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.RetailBankingForeignCurrency = (function($class, _Model, Backbone) {

  var RetailBankingForeignCurrency = $class({

    extends: _Model,

    _constructor: function RetailBankingForeignCurrency() {
      CitiMobileChallengeSdk.models.RetailBankingForeignCurrency._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "RetailBankingForeignCurrency"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "RetailBankingForeignCurrency",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/retail_banking_foreign_currencies",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "from_currency": null,
      
      "rate": null,
      
      "to_currency": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "from_currency",
      label: "from_currency",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "rate",
      label: "rate",
      
      
      type: "float",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "to_currency",
      label: "to_currency",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "RetailBanking",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rate",
              field_definition: {
                name: "rate"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate",
              field_definition: {
                name: "rate"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rate",
              field_definition: {
                name: "rate"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate",
              field_definition: {
                name: "rate"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rate",
              field_definition: {
                name: "rate"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate",
              field_definition: {
                name: "rate"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "rate",
              field_definition: {
                name: "rate"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "rate",
              field_definition: {
                name: "rate"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "to_currency",
              field_definition: {
                name: "to_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "from_currency",
              field_definition: {
                name: "from_currency"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(RetailBankingForeignCurrency, Backbone.Events);

  return RetailBankingForeignCurrency;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
RetailBankingLocation model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class RetailBankingLocation
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.RetailBankingLocation = (function($class, _Model, Backbone) {

  var RetailBankingLocation = $class({

    extends: _Model,

    _constructor: function RetailBankingLocation() {
      CitiMobileChallengeSdk.models.RetailBankingLocation._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "RetailBankingLocation"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "RetailBankingLocation",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/retail_banking_locations",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "address_line_one": null,
      
      "address_line_two": null,
      
      "city": null,
      
      "comments": null,
      
      "country": null,
      
      "external_link": null,
      
      "latitude": null,
      
      "location_type": null,
      
      "longitude": null,
      
      "name": null,
      
      "phone": null,
      
      "postal_code": null,
      
      "state": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "address_line_one",
      label: "address_line_one",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "address_line_two",
      label: "address_line_two",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "city",
      label: "city",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "comments",
      label: "comments",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "country",
      label: "country",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "external_link",
      label: "external_link",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "latitude",
      label: "latitude",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "location_type",
      label: "location_type",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "longitude",
      label: "longitude",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "name",
      label: "name",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "phone",
      label: "phone",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "postal_code",
      label: "postal_code",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "state",
      label: "state",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "RetailBanking",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "state",
              field_definition: {
                name: "state"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "postal_code",
              field_definition: {
                name: "postal_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "phone",
              field_definition: {
                name: "phone"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "longitude",
              field_definition: {
                name: "longitude"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "location_type",
              field_definition: {
                name: "location_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "latitude",
              field_definition: {
                name: "latitude"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "external_link",
              field_definition: {
                name: "external_link"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "comments",
              field_definition: {
                name: "comments"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "city",
              field_definition: {
                name: "city"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "address_2",
              field_definition: {
                name: "address_line_two"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "address_1",
              field_definition: {
                name: "address_line_one"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "state",
              field_definition: {
                name: "state"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "postal_code",
              field_definition: {
                name: "postal_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "phone",
              field_definition: {
                name: "phone"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "longitude",
              field_definition: {
                name: "longitude"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "location_type",
              field_definition: {
                name: "location_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "latitude",
              field_definition: {
                name: "latitude"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "external_link",
              field_definition: {
                name: "external_link"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "comments",
              field_definition: {
                name: "comments"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "city",
              field_definition: {
                name: "city"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "address_2",
              field_definition: {
                name: "address_line_two"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "address_1",
              field_definition: {
                name: "address_line_one"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "state",
              field_definition: {
                name: "state"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "postal_code",
              field_definition: {
                name: "postal_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "longitude",
              field_definition: {
                name: "longitude"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "location_type",
              field_definition: {
                name: "location_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "latitude",
              field_definition: {
                name: "latitude"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "external_link",
              field_definition: {
                name: "external_link"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "comments",
              field_definition: {
                name: "comments"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "city",
              field_definition: {
                name: "city"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "address_2",
              field_definition: {
                name: "address_line_two"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "address_1",
              field_definition: {
                name: "address_line_one"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "phone",
              field_definition: {
                name: "phone"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "state",
              field_definition: {
                name: "state"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "postal_code",
              field_definition: {
                name: "postal_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "longitude",
              field_definition: {
                name: "longitude"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "location_type",
              field_definition: {
                name: "location_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "latitude",
              field_definition: {
                name: "latitude"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "external_link",
              field_definition: {
                name: "external_link"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "comments",
              field_definition: {
                name: "comments"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "city",
              field_definition: {
                name: "city"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "address_2",
              field_definition: {
                name: "address_line_two"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "address_1",
              field_definition: {
                name: "address_line_one"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "phone",
              field_definition: {
                name: "phone"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "state",
              field_definition: {
                name: "state"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "postal_code",
              field_definition: {
                name: "postal_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "phone",
              field_definition: {
                name: "phone"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "longitude",
              field_definition: {
                name: "longitude"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "location_type",
              field_definition: {
                name: "location_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "latitude",
              field_definition: {
                name: "latitude"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "external_link",
              field_definition: {
                name: "external_link"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "comments",
              field_definition: {
                name: "comments"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "city",
              field_definition: {
                name: "city"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "address_2",
              field_definition: {
                name: "address_line_two"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "address_1",
              field_definition: {
                name: "address_line_one"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "state",
              field_definition: {
                name: "state"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "postal_code",
              field_definition: {
                name: "postal_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "phone",
              field_definition: {
                name: "phone"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "longitude",
              field_definition: {
                name: "longitude"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "location_type",
              field_definition: {
                name: "location_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "latitude",
              field_definition: {
                name: "latitude"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "external_link",
              field_definition: {
                name: "external_link"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "comments",
              field_definition: {
                name: "comments"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "city",
              field_definition: {
                name: "city"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "address_2",
              field_definition: {
                name: "address_line_two"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "address_1",
              field_definition: {
                name: "address_line_one"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "state",
              field_definition: {
                name: "state"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "postal_code",
              field_definition: {
                name: "postal_code"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "phone",
              field_definition: {
                name: "phone"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "longitude",
              field_definition: {
                name: "longitude"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "location_type",
              field_definition: {
                name: "location_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "latitude",
              field_definition: {
                name: "latitude"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "external_link",
              field_definition: {
                name: "external_link"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "comments",
              field_definition: {
                name: "comments"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "city",
              field_definition: {
                name: "city"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "address_2",
              field_definition: {
                name: "address_line_two"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "address_1",
              field_definition: {
                name: "address_line_one"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "state",
              field_definition: {
                name: "state"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "postal_code",
              field_definition: {
                name: "postal_code"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "phone",
              field_definition: {
                name: "phone"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "name",
              field_definition: {
                name: "name"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "longitude",
              field_definition: {
                name: "longitude"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "location_type",
              field_definition: {
                name: "location_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "latitude",
              field_definition: {
                name: "latitude"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "external_link",
              field_definition: {
                name: "external_link"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "country",
              field_definition: {
                name: "country"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "comments",
              field_definition: {
                name: "comments"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "city",
              field_definition: {
                name: "city"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "address_2",
              field_definition: {
                name: "address_line_two"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "address_1",
              field_definition: {
                name: "address_line_one"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(RetailBankingLocation, Backbone.Events);

  return RetailBankingLocation;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
RetailBankingLogin model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class RetailBankingLogin
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.RetailBankingLogin = (function($class, _Model, Backbone) {

  var RetailBankingLogin = $class({

    extends: _Model,

    _constructor: function RetailBankingLogin() {
      CitiMobileChallengeSdk.models.RetailBankingLogin._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "RetailBankingLogin"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "RetailBankingLogin",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/retail_banking_logins",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "token": null,
      
      "is_eligible_for_offers": null,
      
      "is_person_to_person_required": null,
      
      "password": null,
      
      "username": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "token",
      label: "token",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "is_eligible_for_offers",
      label: "is_eligible_for_offers",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "is_person_to_person_required",
      label: "is_person_to_person_required",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "password",
      label: "password",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "username",
      label: "username",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
        "token",
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "RetailBanking",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "is_eligible_for_offers",
              field_definition: {
                name: "is_eligible_for_offers"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "is_person_to_person_required",
              field_definition: {
                name: "is_person_to_person_required"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$.*",
        incremental_path : "/login",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "is_eligible_for_offers",
              field_definition: {
                name: "is_eligible_for_offers"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "is_person_to_person_required",
              field_definition: {
                name: "is_person_to_person_required"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "is_eligible_for_offers",
              field_definition: {
                name: "is_eligible_for_offers"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "is_person_to_person_required",
              field_definition: {
                name: "is_person_to_person_required"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "is_eligible_for_offers",
              field_definition: {
                name: "is_eligible_for_offers"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "is_person_to_person_required",
              field_definition: {
                name: "is_person_to_person_required"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "is_eligible_for_offers",
              field_definition: {
                name: "is_eligible_for_offers"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "is_person_to_person_required",
              field_definition: {
                name: "is_person_to_person_required"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "is_eligible_for_offers",
              field_definition: {
                name: "is_eligible_for_offers"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "is_person_to_person_required",
              field_definition: {
                name: "is_person_to_person_required"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "token",
              field_definition: {
                name: "token"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "password",
              field_definition: {
                name: "password"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "is_eligible_for_offers",
              field_definition: {
                name: "is_eligible_for_offers"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "is_person_to_person_required",
              field_definition: {
                name: "is_person_to_person_required"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "username",
              field_definition: {
                name: "username"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(RetailBankingLogin, Backbone.Events);

  return RetailBankingLogin;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
RetailBankingPayee model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class RetailBankingPayee
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.RetailBankingPayee = (function($class, _Model, Backbone) {

  var RetailBankingPayee = $class({

    extends: _Model,

    _constructor: function RetailBankingPayee() {
      CitiMobileChallengeSdk.models.RetailBankingPayee._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "RetailBankingPayee"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "RetailBankingPayee",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/retail_banking_payees",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "add_payee_details": null,
      
      "bank_name_ext": null,
      
      "detail_prefix": null,
      
      "last_payment_amt": null,
      
      "payee_account": null,
      
      "payee_description": null,
      
      "payee_list_id_two": null,
      
      "payee_list_id_type": null,
      
      "payee_type": null,
      
      "payment_method": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "add_payee_details",
      label: "add_payee_details",
      
      
      type: "array",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "bank_name_ext",
      label: "bank_name_ext",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "detail_prefix",
      label: "detail_prefix",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "last_payment_amt",
      label: "last_payment_amt",
      
      
      type: "float",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "payee_account",
      label: "payee_account",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "payee_description",
      label: "payee_description",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "payee_list_id_two",
      label: "payee_list_id_two",
      
      
      type: "integer",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "payee_list_id_type",
      label: "payee_list_id_type",
      
      
      type: "integer",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "payee_type",
      label: "payee_type",
      
      
      type: "integer",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "payment_method",
      label: "payment_method",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "RetailBanking",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_method",
              field_definition: {
                name: "payment_method"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_type",
              field_definition: {
                name: "payee_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_list_id_type",
              field_definition: {
                name: "payee_list_id_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_list_id_2",
              field_definition: {
                name: "payee_list_id_two"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_description",
              field_definition: {
                name: "payee_description"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_account",
              field_definition: {
                name: "payee_account"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "last_payment_amt",
              field_definition: {
                name: "last_payment_amt"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "detail_prefix",
              field_definition: {
                name: "detail_prefix"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "bank_name_ext",
              field_definition: {
                name: "bank_name_ext"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "add_payee_details",
              field_definition: {
                name: "add_payee_details"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_method",
              field_definition: {
                name: "payment_method"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_type",
              field_definition: {
                name: "payee_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_list_id_type",
              field_definition: {
                name: "payee_list_id_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_list_id_2",
              field_definition: {
                name: "payee_list_id_two"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_description",
              field_definition: {
                name: "payee_description"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_account",
              field_definition: {
                name: "payee_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "last_payment_amt",
              field_definition: {
                name: "last_payment_amt"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "detail_prefix",
              field_definition: {
                name: "detail_prefix"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bank_name_ext",
              field_definition: {
                name: "bank_name_ext"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "add_payee_details",
              field_definition: {
                name: "add_payee_details"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_method",
              field_definition: {
                name: "payment_method"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_type",
              field_definition: {
                name: "payee_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_list_id_type",
              field_definition: {
                name: "payee_list_id_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_list_id_2",
              field_definition: {
                name: "payee_list_id_two"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_description",
              field_definition: {
                name: "payee_description"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_account",
              field_definition: {
                name: "payee_account"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "last_payment_amt",
              field_definition: {
                name: "last_payment_amt"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "detail_prefix",
              field_definition: {
                name: "detail_prefix"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "bank_name_ext",
              field_definition: {
                name: "bank_name_ext"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "add_payee_details",
              field_definition: {
                name: "add_payee_details"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_method",
              field_definition: {
                name: "payment_method"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_type",
              field_definition: {
                name: "payee_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_list_id_type",
              field_definition: {
                name: "payee_list_id_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_list_id_2",
              field_definition: {
                name: "payee_list_id_two"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_description",
              field_definition: {
                name: "payee_description"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_account",
              field_definition: {
                name: "payee_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "last_payment_amt",
              field_definition: {
                name: "last_payment_amt"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "detail_prefix",
              field_definition: {
                name: "detail_prefix"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bank_name_ext",
              field_definition: {
                name: "bank_name_ext"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "add_payee_details",
              field_definition: {
                name: "add_payee_details"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_method",
              field_definition: {
                name: "payment_method"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_type",
              field_definition: {
                name: "payee_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_list_id_type",
              field_definition: {
                name: "payee_list_id_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_list_id_2",
              field_definition: {
                name: "payee_list_id_two"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_description",
              field_definition: {
                name: "payee_description"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_account",
              field_definition: {
                name: "payee_account"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "last_payment_amt",
              field_definition: {
                name: "last_payment_amt"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "detail_prefix",
              field_definition: {
                name: "detail_prefix"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "bank_name_ext",
              field_definition: {
                name: "bank_name_ext"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "add_payee_details",
              field_definition: {
                name: "add_payee_details"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_method",
              field_definition: {
                name: "payment_method"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_type",
              field_definition: {
                name: "payee_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_list_id_type",
              field_definition: {
                name: "payee_list_id_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_list_id_2",
              field_definition: {
                name: "payee_list_id_two"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_description",
              field_definition: {
                name: "payee_description"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_account",
              field_definition: {
                name: "payee_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "last_payment_amt",
              field_definition: {
                name: "last_payment_amt"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "detail_prefix",
              field_definition: {
                name: "detail_prefix"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bank_name_ext",
              field_definition: {
                name: "bank_name_ext"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "add_payee_details",
              field_definition: {
                name: "add_payee_details"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payment_method",
              field_definition: {
                name: "payment_method"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_type",
              field_definition: {
                name: "payee_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_list_id_type",
              field_definition: {
                name: "payee_list_id_type"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_list_id_2",
              field_definition: {
                name: "payee_list_id_two"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_description",
              field_definition: {
                name: "payee_description"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "payee_account",
              field_definition: {
                name: "payee_account"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "last_payment_amt",
              field_definition: {
                name: "last_payment_amt"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "detail_prefix",
              field_definition: {
                name: "detail_prefix"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "bank_name_ext",
              field_definition: {
                name: "bank_name_ext"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "add_payee_details",
              field_definition: {
                name: "add_payee_details"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payment_method",
              field_definition: {
                name: "payment_method"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_type",
              field_definition: {
                name: "payee_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_list_id_type",
              field_definition: {
                name: "payee_list_id_type"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_list_id_2",
              field_definition: {
                name: "payee_list_id_two"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_description",
              field_definition: {
                name: "payee_description"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "payee_account",
              field_definition: {
                name: "payee_account"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "last_payment_amt",
              field_definition: {
                name: "last_payment_amt"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "detail_prefix",
              field_definition: {
                name: "detail_prefix"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "bank_name_ext",
              field_definition: {
                name: "bank_name_ext"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "add_payee_details",
              field_definition: {
                name: "add_payee_details"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(RetailBankingPayee, Backbone.Events);

  return RetailBankingPayee;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
RetailBankingPayeeType model for application `CitiMobileChallengeSdk`.  See
`AP.model.Model` for more information about models.

@module CitiMobileChallengeSdk
@submodule models
@class RetailBankingPayeeType
@extends AP.model.Model
 */
CitiMobileChallengeSdk.models.RetailBankingPayeeType = (function($class, _Model, Backbone) {

  var RetailBankingPayeeType = $class({

    extends: _Model,

    _constructor: function RetailBankingPayeeType() {
      CitiMobileChallengeSdk.models.RetailBankingPayeeType._super.constructor.apply(this, arguments);
    },

    static: {
      /**
      The model ID may be used to look-up a model from an application class.
      @property modelId
      @type String
      @static
       */
      modelId: "",

      /**
      The model name may be used to look-up a model from an application class.
      @property name
      @type String
       */
      name: "RetailBankingPayeeType"
    },

    /**
    The model name may be used to look-up a model from an application class.
    @property name
    @type String
     */
    name: "RetailBankingPayeeType",

    /**
    Server requests for model instances use this URL.
    @property urlRoot
    @type String'
     */
    urlRoot: "/api/v2/retail_banking_payee_types",

    /**
    Default values for this model.
    @property defaults
    @type Object
    */
    defaults: {
      
      "id": null,
      
      "value": null,
      
    },

    /**
    Array of field definition configurations.  Field definitions describe fields
    available on this model.
    @property fieldDefinitions
    @type Array
     */
    fieldDefinitions: [
    
      {
      // TODO where is the field ID?
      //id: 
      name: "id",
      label: "id",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
      {
      // TODO where is the field ID?
      //id: 
      name: "value",
      label: "value",
      
      
      type: "string",
      required: false,
      file_url: false,
      file_type: "Image",
      },
    
    ],

    /**
    Array of field names.  Auto keys, generally such as `id`, have their values
    filled automatically by the server.  Non-auto keys are all other fields.
    @property nonAutoKeyFields
    @type Array
     */
    nonAutoKeyFields: [
      
    ],

    /**
    Array of relationship definitions.
    @property relationshipDefinitions
    @type Array
     */
    relationshipDefinitions: [
      
      
      
    ],

    /**
    Array of validation configurations.  See `AP.model.Model` for more information
    about validations.
    @property validations
    @type Array
     */
    validations: [
      
      
      
      
      
    ],

    /**
    Name of the interface to use. Can be an HttpAdapter or the default connection
    to an Anypresence API.
    @property storage_interface
    @type String
    */
    storage_interface: "RetailBanking",

    /**
    Adapter configurations for create, update, read and delete actions on a model.
    Only required for models whose adapter interface is an HttpAdapter.
    @property adapter_configuration
    @type Object
    */
    adapter_configuration: {

      
      create: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "value",
              field_definition: {
                name: "value"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value",
              field_definition: {
                name: "value"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "POST",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "create",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      update: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "value",
              field_definition: {
                name: "value"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value",
              field_definition: {
                name: "value"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "PUT",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "update",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      read: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "value",
              field_definition: {
                name: "value"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value",
              field_definition: {
                name: "value"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "GET",
        path_selector : "$",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "read",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      

      
      delete: {
        request_field_level_mappings: [
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "value",
              field_definition: {
                name: "value"
              }
            },
          
            {
              type: "RequestFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        response_field_level_mappings: [
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "value",
              field_definition: {
                name: "value"
              }
            },
          
            {
              type: "ResponseFieldLevelMapping",
              remote_field_name: "id",
              field_definition: {
                name: "id"
              }
            },
          
        ],
        http_verb: "DELETE",
        path_selector : "",
        incremental_path : "",
        body_format : "json",
        object_name_mapping : "",
        body_payload_template : "",
        action : "delete",
        incremental_headers: [
          
        ],
        incremental_url_parameters: [
          
        ]
      },
      
    }

  });

  // mixin Backbone events on the model class
  _.extend(RetailBankingPayeeType, Backbone.Events);

  return RetailBankingPayeeType;

})(AP.utility.createClass, AP.model.Model, Backbone);

/**
CapitalMarketsActivityActivitiesis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsActivityActivities
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsActivityActivities = (function($class, _ScopeCollection) {

	var CapitalMarketsActivityActivities = $class({

		extends: _ScopeCollection,

        _constructor: function CapitalMarketsActivityActivities() {
            CitiMobileChallengeSdk.collections.CapitalMarketsActivityActivities._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CapitalMarketsActivity,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/capital_markets_activities.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "activities"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
          {
            fieldName: "year",
            paramName: "year",
          },
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CapitalMarketsTrading",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "year",
	              field_definition: {
	                name: "year"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "region",
	              field_definition: {
	                name: "region"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "date",
	              field_definition: {
	                name: "date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_name",
	              field_definition: {
	                name: "client_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_id",
	              field_definition: {
	                name: "client_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_contacts",
	              field_definition: {
	                name: "client_contacts"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "citi_attendees",
	              field_definition: {
	                name: "citi_attendees"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "activity_type",
	              field_definition: {
	                name: "activity_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "/activities",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "activities",
					limit : "",
          offset : "",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	            {
	              name: "year",
	              value: "{{query.query.year}}"
	            },
	          
	        ]
				}
				

	});

	return CapitalMarketsActivityActivities;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CapitalMarketsActivityAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsActivityAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsActivityAll = (function($class, _ScopeCollection) {

	var CapitalMarketsActivityAll = $class({

		extends: _ScopeCollection,

        _constructor: function CapitalMarketsActivityAll() {
            CitiMobileChallengeSdk.collections.CapitalMarketsActivityAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CapitalMarketsActivity,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/capital_markets_activities.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CapitalMarketsTrading",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "year",
	              field_definition: {
	                name: "year"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "region",
	              field_definition: {
	                name: "region"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "date",
	              field_definition: {
	                name: "date"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "client_name",
	              field_definition: {
	                name: "client_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "client_id",
	              field_definition: {
	                name: "client_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "client_contacts",
	              field_definition: {
	                name: "client_contacts"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "citi_attendees",
	              field_definition: {
	                name: "citi_attendees"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "activity_type",
	              field_definition: {
	                name: "activity_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "year",
	              field_definition: {
	                name: "year"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "region",
	              field_definition: {
	                name: "region"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "date",
	              field_definition: {
	                name: "date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_name",
	              field_definition: {
	                name: "client_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_id",
	              field_definition: {
	                name: "client_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_contacts",
	              field_definition: {
	                name: "client_contacts"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "citi_attendees",
	              field_definition: {
	                name: "citi_attendees"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "activity_type",
	              field_definition: {
	                name: "activity_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CapitalMarketsActivityAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CapitalMarketsActivityCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsActivityCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsActivityCount = (function($class, _AggregateCollection) {

	var CapitalMarketsActivityCount = $class({
		extends: _AggregateCollection,

		_constructor: function CapitalMarketsActivityCount() {
			CitiMobileChallengeSdk.collections.CapitalMarketsActivityCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CapitalMarketsActivity,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/capital_markets_activities.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CapitalMarketsTrading",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "year",
						field_definition: {
							name: "year"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "region",
						field_definition: {
							name: "region"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "date",
						field_definition: {
							name: "date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "client_name",
						field_definition: {
							name: "client_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "client_id",
						field_definition: {
							name: "client_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "client_contacts",
						field_definition: {
							name: "client_contacts"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "citi_attendees",
						field_definition: {
							name: "citi_attendees"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "activity_type",
						field_definition: {
							name: "activity_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "year",
						field_definition: {
							name: "year"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "region",
						field_definition: {
							name: "region"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "date",
						field_definition: {
							name: "date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "client_name",
						field_definition: {
							name: "client_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "client_id",
						field_definition: {
							name: "client_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "client_contacts",
						field_definition: {
							name: "client_contacts"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "citi_attendees",
						field_definition: {
							name: "citi_attendees"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "activity_type",
						field_definition: {
							name: "activity_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CapitalMarketsActivityCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CapitalMarketsActivityCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsActivityCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsActivityCountExactMatch = (function($class, _AggregateCollection) {

	var CapitalMarketsActivityCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function CapitalMarketsActivityCountExactMatch() {
			CitiMobileChallengeSdk.collections.CapitalMarketsActivityCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CapitalMarketsActivity,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/capital_markets_activities.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CapitalMarketsTrading",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "year",
						field_definition: {
							name: "year"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "region",
						field_definition: {
							name: "region"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "date",
						field_definition: {
							name: "date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "client_name",
						field_definition: {
							name: "client_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "client_id",
						field_definition: {
							name: "client_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "client_contacts",
						field_definition: {
							name: "client_contacts"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "citi_attendees",
						field_definition: {
							name: "citi_attendees"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "activity_type",
						field_definition: {
							name: "activity_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "year",
						field_definition: {
							name: "year"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "region",
						field_definition: {
							name: "region"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "date",
						field_definition: {
							name: "date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "client_name",
						field_definition: {
							name: "client_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "client_id",
						field_definition: {
							name: "client_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "client_contacts",
						field_definition: {
							name: "client_contacts"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "citi_attendees",
						field_definition: {
							name: "citi_attendees"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "activity_type",
						field_definition: {
							name: "activity_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CapitalMarketsActivityCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CapitalMarketsActivityExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsActivityExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsActivityExactMatch = (function($class, _ScopeCollection) {

	var CapitalMarketsActivityExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function CapitalMarketsActivityExactMatch() {
            CitiMobileChallengeSdk.collections.CapitalMarketsActivityExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CapitalMarketsActivity,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/capital_markets_activities.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CapitalMarketsTrading",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "year",
	              field_definition: {
	                name: "year"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "region",
	              field_definition: {
	                name: "region"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "date",
	              field_definition: {
	                name: "date"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "client_name",
	              field_definition: {
	                name: "client_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "client_id",
	              field_definition: {
	                name: "client_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "client_contacts",
	              field_definition: {
	                name: "client_contacts"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "citi_attendees",
	              field_definition: {
	                name: "citi_attendees"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "activity_type",
	              field_definition: {
	                name: "activity_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "year",
	              field_definition: {
	                name: "year"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "region",
	              field_definition: {
	                name: "region"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "date",
	              field_definition: {
	                name: "date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_name",
	              field_definition: {
	                name: "client_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_id",
	              field_definition: {
	                name: "client_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_contacts",
	              field_definition: {
	                name: "client_contacts"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "citi_attendees",
	              field_definition: {
	                name: "citi_attendees"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "activity_type",
	              field_definition: {
	                name: "activity_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CapitalMarketsActivityExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CapitalMarketsContactAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsContactAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsContactAll = (function($class, _ScopeCollection) {

	var CapitalMarketsContactAll = $class({

		extends: _ScopeCollection,

        _constructor: function CapitalMarketsContactAll() {
            CitiMobileChallengeSdk.collections.CapitalMarketsContactAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CapitalMarketsContact,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/capital_markets_contacts.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CapitalMarketsTrading",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "year",
	              field_definition: {
	                name: "year"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "state",
	              field_definition: {
	                name: "state"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "phone",
	              field_definition: {
	                name: "phone"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "name",
	              field_definition: {
	                name: "name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "job_title",
	              field_definition: {
	                name: "job_title"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "job_role",
	              field_definition: {
	                name: "job_role"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "email",
	              field_definition: {
	                name: "email"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "country",
	              field_definition: {
	                name: "country"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "client_name",
	              field_definition: {
	                name: "client_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "city",
	              field_definition: {
	                name: "city"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "address",
	              field_definition: {
	                name: "address"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "year",
	              field_definition: {
	                name: "year"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "state",
	              field_definition: {
	                name: "state"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "phone",
	              field_definition: {
	                name: "phone"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "name",
	              field_definition: {
	                name: "name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "job_title",
	              field_definition: {
	                name: "job_title"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "job_role",
	              field_definition: {
	                name: "job_role"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "email",
	              field_definition: {
	                name: "email"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "country",
	              field_definition: {
	                name: "country"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_name",
	              field_definition: {
	                name: "client_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "city",
	              field_definition: {
	                name: "city"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "address",
	              field_definition: {
	                name: "address"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CapitalMarketsContactAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CapitalMarketsContactContactsis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsContactContacts
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsContactContacts = (function($class, _ScopeCollection) {

	var CapitalMarketsContactContacts = $class({

		extends: _ScopeCollection,

        _constructor: function CapitalMarketsContactContacts() {
            CitiMobileChallengeSdk.collections.CapitalMarketsContactContacts._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CapitalMarketsContact,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/capital_markets_contacts.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "contacts"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
          {
            fieldName: "client_name",
            paramName: "client_name",
          },
          
          {
            fieldName: "year",
            paramName: "year",
          },
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CapitalMarketsTrading",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "year",
	              field_definition: {
	                name: "year"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "state",
	              field_definition: {
	                name: "state"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "phone",
	              field_definition: {
	                name: "phone"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "name",
	              field_definition: {
	                name: "name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "job_title",
	              field_definition: {
	                name: "job_title"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "job_role",
	              field_definition: {
	                name: "job_role"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "email",
	              field_definition: {
	                name: "email"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "country",
	              field_definition: {
	                name: "country"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_name",
	              field_definition: {
	                name: "client_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "city",
	              field_definition: {
	                name: "city"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "address",
	              field_definition: {
	                name: "address"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "/contacts",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "contacts",
					limit : "",
          offset : "",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	            {
	              name: "client_name",
	              value: "{{query.query.client_name}}"
	            },
	          
	            {
	              name: "year",
	              value: "{{query.query.year}}"
	            },
	          
	        ]
				}
				

	});

	return CapitalMarketsContactContacts;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CapitalMarketsContactCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsContactCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsContactCount = (function($class, _AggregateCollection) {

	var CapitalMarketsContactCount = $class({
		extends: _AggregateCollection,

		_constructor: function CapitalMarketsContactCount() {
			CitiMobileChallengeSdk.collections.CapitalMarketsContactCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CapitalMarketsContact,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/capital_markets_contacts.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CapitalMarketsTrading",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "year",
						field_definition: {
							name: "year"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "state",
						field_definition: {
							name: "state"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "phone",
						field_definition: {
							name: "phone"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "name",
						field_definition: {
							name: "name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "job_title",
						field_definition: {
							name: "job_title"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "job_role",
						field_definition: {
							name: "job_role"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "email",
						field_definition: {
							name: "email"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "country",
						field_definition: {
							name: "country"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "client_name",
						field_definition: {
							name: "client_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "city",
						field_definition: {
							name: "city"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "address",
						field_definition: {
							name: "address"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "year",
						field_definition: {
							name: "year"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "state",
						field_definition: {
							name: "state"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "phone",
						field_definition: {
							name: "phone"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "name",
						field_definition: {
							name: "name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "job_title",
						field_definition: {
							name: "job_title"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "job_role",
						field_definition: {
							name: "job_role"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "email",
						field_definition: {
							name: "email"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "country",
						field_definition: {
							name: "country"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "client_name",
						field_definition: {
							name: "client_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "city",
						field_definition: {
							name: "city"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "address",
						field_definition: {
							name: "address"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CapitalMarketsContactCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CapitalMarketsContactCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsContactCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsContactCountExactMatch = (function($class, _AggregateCollection) {

	var CapitalMarketsContactCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function CapitalMarketsContactCountExactMatch() {
			CitiMobileChallengeSdk.collections.CapitalMarketsContactCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CapitalMarketsContact,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/capital_markets_contacts.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CapitalMarketsTrading",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "year",
						field_definition: {
							name: "year"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "state",
						field_definition: {
							name: "state"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "phone",
						field_definition: {
							name: "phone"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "name",
						field_definition: {
							name: "name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "job_title",
						field_definition: {
							name: "job_title"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "job_role",
						field_definition: {
							name: "job_role"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "email",
						field_definition: {
							name: "email"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "country",
						field_definition: {
							name: "country"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "client_name",
						field_definition: {
							name: "client_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "city",
						field_definition: {
							name: "city"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "address",
						field_definition: {
							name: "address"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "year",
						field_definition: {
							name: "year"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "state",
						field_definition: {
							name: "state"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "phone",
						field_definition: {
							name: "phone"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "name",
						field_definition: {
							name: "name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "job_title",
						field_definition: {
							name: "job_title"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "job_role",
						field_definition: {
							name: "job_role"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "email",
						field_definition: {
							name: "email"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "country",
						field_definition: {
							name: "country"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "client_name",
						field_definition: {
							name: "client_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "city",
						field_definition: {
							name: "city"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "address",
						field_definition: {
							name: "address"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CapitalMarketsContactCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CapitalMarketsContactExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsContactExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsContactExactMatch = (function($class, _ScopeCollection) {

	var CapitalMarketsContactExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function CapitalMarketsContactExactMatch() {
            CitiMobileChallengeSdk.collections.CapitalMarketsContactExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CapitalMarketsContact,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/capital_markets_contacts.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CapitalMarketsTrading",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "year",
	              field_definition: {
	                name: "year"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "state",
	              field_definition: {
	                name: "state"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "phone",
	              field_definition: {
	                name: "phone"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "name",
	              field_definition: {
	                name: "name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "job_title",
	              field_definition: {
	                name: "job_title"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "job_role",
	              field_definition: {
	                name: "job_role"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "email",
	              field_definition: {
	                name: "email"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "country",
	              field_definition: {
	                name: "country"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "client_name",
	              field_definition: {
	                name: "client_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "city",
	              field_definition: {
	                name: "city"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "address",
	              field_definition: {
	                name: "address"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "year",
	              field_definition: {
	                name: "year"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "state",
	              field_definition: {
	                name: "state"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "phone",
	              field_definition: {
	                name: "phone"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "name",
	              field_definition: {
	                name: "name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "job_title",
	              field_definition: {
	                name: "job_title"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "job_role",
	              field_definition: {
	                name: "job_role"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "email",
	              field_definition: {
	                name: "email"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "country",
	              field_definition: {
	                name: "country"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_name",
	              field_definition: {
	                name: "client_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "city",
	              field_definition: {
	                name: "city"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "address",
	              field_definition: {
	                name: "address"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CapitalMarketsContactExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CapitalMarketsContentServiceAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsContentServiceAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsContentServiceAll = (function($class, _ScopeCollection) {

	var CapitalMarketsContentServiceAll = $class({

		extends: _ScopeCollection,

        _constructor: function CapitalMarketsContentServiceAll() {
            CitiMobileChallengeSdk.collections.CapitalMarketsContentServiceAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CapitalMarketsContentService,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/capital_markets_content_services.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CapitalMarketsTrading",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "video_url",
	              field_definition: {
	                name: "video_url"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "video_type",
	              field_definition: {
	                name: "video_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "type",
	              field_definition: {
	                name: "content_services_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "total_count",
	              field_definition: {
	                name: "total_count"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "title",
	              field_definition: {
	                name: "title"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "tickers",
	              field_definition: {
	                name: "tickers"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "theme_id",
	              field_definition: {
	                name: "theme_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "template",
	              field_definition: {
	                name: "template"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "synopsis",
	              field_definition: {
	                name: "synopsis"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "summary",
	              field_definition: {
	                name: "summary"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "source",
	              field_definition: {
	                name: "source"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "sectors",
	              field_definition: {
	                name: "sectors"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "scale",
	              field_definition: {
	                name: "scale"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "rnum",
	              field_definition: {
	                name: "rnum"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "resdata_url",
	              field_definition: {
	                name: "resdata_url"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "region",
	              field_definition: {
	                name: "region"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "ref_article_url",
	              field_definition: {
	                name: "ref_article_url"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "ref_article_title",
	              field_definition: {
	                name: "ref_article_title"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "pub_key",
	              field_definition: {
	                name: "pub_key"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "pub_id",
	              field_definition: {
	                name: "pub_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "pub_date",
	              field_definition: {
	                name: "pub_date"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "product_type",
	              field_definition: {
	                name: "product_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "product_list",
	              field_definition: {
	                name: "product_list"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "page_count",
	              field_definition: {
	                name: "page_count"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "obo_preferred_name",
	              field_definition: {
	                name: "obo_preferred_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "obo_last_name",
	              field_definition: {
	                name: "obo_last_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "obo_first_name",
	              field_definition: {
	                name: "obo_first_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "miliseconds",
	              field_definition: {
	                name: "miliseconds"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "menu_code",
	              field_definition: {
	                name: "menu_code"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "medial_url_ios",
	              field_definition: {
	                name: "medial_url_ios"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "media_url_android",
	              field_definition: {
	                name: "media_url_android"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "kv",
	              field_definition: {
	                name: "kv"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "image",
	              field_definition: {
	                name: "image"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "image_group",
	              field_definition: {
	                name: "image_group"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "html_escaped_title",
	              field_definition: {
	                name: "html_escaped_title"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "hit_count",
	              field_definition: {
	                name: "hit_count"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "headline",
	              field_definition: {
	                name: "headline"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "formatted_date_str",
	              field_definition: {
	                name: "formatted_date_str"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "formated_pub_date",
	              field_definition: {
	                name: "formated_pub_date"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "file_type",
	              field_definition: {
	                name: "file_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "file_name",
	              field_definition: {
	                name: "file_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "file_link",
	              field_definition: {
	                name: "file_link"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "encrypted_id",
	              field_definition: {
	                name: "encrypted_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "document_url",
	              field_definition: {
	                name: "document_url"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "date_string",
	              field_definition: {
	                name: "date_string"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "content_url",
	              field_definition: {
	                name: "content_url"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "content_type",
	              field_definition: {
	                name: "content_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "company",
	              field_definition: {
	                name: "company"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "authors",
	              field_definition: {
	                name: "authors"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "author_name",
	              field_definition: {
	                name: "author_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "author_id",
	              field_definition: {
	                name: "author_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "author_details",
	              field_definition: {
	                name: "author_details"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "attachment_id",
	              field_definition: {
	                name: "attachment_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "asset_class",
	              field_definition: {
	                name: "asset_class"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "analyst_type",
	              field_definition: {
	                name: "analyst_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "analyst_id",
	              field_definition: {
	                name: "analyst_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "all_attachments",
	              field_definition: {
	                name: "all_attachments"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "alert_date",
	              field_definition: {
	                name: "alert_date"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "video_url",
	              field_definition: {
	                name: "video_url"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "video_type",
	              field_definition: {
	                name: "video_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "type",
	              field_definition: {
	                name: "content_services_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "total_count",
	              field_definition: {
	                name: "total_count"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "title",
	              field_definition: {
	                name: "title"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "tickers",
	              field_definition: {
	                name: "tickers"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "theme_id",
	              field_definition: {
	                name: "theme_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "template",
	              field_definition: {
	                name: "template"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "synopsis",
	              field_definition: {
	                name: "synopsis"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "summary",
	              field_definition: {
	                name: "summary"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "source",
	              field_definition: {
	                name: "source"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "sectors",
	              field_definition: {
	                name: "sectors"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "scale",
	              field_definition: {
	                name: "scale"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "rnum",
	              field_definition: {
	                name: "rnum"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "resdata_url",
	              field_definition: {
	                name: "resdata_url"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "region",
	              field_definition: {
	                name: "region"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "ref_article_url",
	              field_definition: {
	                name: "ref_article_url"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "ref_article_title",
	              field_definition: {
	                name: "ref_article_title"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "pub_key",
	              field_definition: {
	                name: "pub_key"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "pub_id",
	              field_definition: {
	                name: "pub_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "pub_date",
	              field_definition: {
	                name: "pub_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_type",
	              field_definition: {
	                name: "product_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_list",
	              field_definition: {
	                name: "product_list"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "page_count",
	              field_definition: {
	                name: "page_count"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "obo_preferred_name",
	              field_definition: {
	                name: "obo_preferred_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "obo_last_name",
	              field_definition: {
	                name: "obo_last_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "obo_first_name",
	              field_definition: {
	                name: "obo_first_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "miliseconds",
	              field_definition: {
	                name: "miliseconds"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "menu_code",
	              field_definition: {
	                name: "menu_code"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "medial_url_ios",
	              field_definition: {
	                name: "medial_url_ios"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "media_url_android",
	              field_definition: {
	                name: "media_url_android"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "kv",
	              field_definition: {
	                name: "kv"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "image",
	              field_definition: {
	                name: "image"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "image_group",
	              field_definition: {
	                name: "image_group"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "html_escaped_title",
	              field_definition: {
	                name: "html_escaped_title"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "hit_count",
	              field_definition: {
	                name: "hit_count"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "headline",
	              field_definition: {
	                name: "headline"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "formatted_date_str",
	              field_definition: {
	                name: "formatted_date_str"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "formated_pub_date",
	              field_definition: {
	                name: "formated_pub_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "file_type",
	              field_definition: {
	                name: "file_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "file_name",
	              field_definition: {
	                name: "file_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "file_link",
	              field_definition: {
	                name: "file_link"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "encrypted_id",
	              field_definition: {
	                name: "encrypted_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "document_url",
	              field_definition: {
	                name: "document_url"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "date_string",
	              field_definition: {
	                name: "date_string"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "content_url",
	              field_definition: {
	                name: "content_url"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "content_type",
	              field_definition: {
	                name: "content_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "company",
	              field_definition: {
	                name: "company"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "authors",
	              field_definition: {
	                name: "authors"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "author_name",
	              field_definition: {
	                name: "author_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "author_id",
	              field_definition: {
	                name: "author_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "author_details",
	              field_definition: {
	                name: "author_details"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "attachment_id",
	              field_definition: {
	                name: "attachment_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "asset_class",
	              field_definition: {
	                name: "asset_class"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "analyst_type",
	              field_definition: {
	                name: "analyst_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "analyst_id",
	              field_definition: {
	                name: "analyst_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "all_attachments",
	              field_definition: {
	                name: "all_attachments"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "alert_date",
	              field_definition: {
	                name: "alert_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CapitalMarketsContentServiceAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CapitalMarketsContentServiceContentServicesis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsContentServiceContentServices
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsContentServiceContentServices = (function($class, _ScopeCollection) {

	var CapitalMarketsContentServiceContentServices = $class({

		extends: _ScopeCollection,

        _constructor: function CapitalMarketsContentServiceContentServices() {
            CitiMobileChallengeSdk.collections.CapitalMarketsContentServiceContentServices._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CapitalMarketsContentService,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/capital_markets_content_services.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "content_services"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
          {
            fieldName: "content_services_type",
            paramName: "content_services_type",
          },
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CapitalMarketsTrading",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "video_url",
	              field_definition: {
	                name: "video_url"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "video_type",
	              field_definition: {
	                name: "video_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "total_count",
	              field_definition: {
	                name: "total_count"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "title",
	              field_definition: {
	                name: "title"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "tickers",
	              field_definition: {
	                name: "tickers"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "theme_id",
	              field_definition: {
	                name: "theme_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "template",
	              field_definition: {
	                name: "template"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "synopsis",
	              field_definition: {
	                name: "synopsis"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "summary",
	              field_definition: {
	                name: "summary"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "source",
	              field_definition: {
	                name: "source"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "sectors",
	              field_definition: {
	                name: "sectors"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "scale",
	              field_definition: {
	                name: "scale"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "rnum",
	              field_definition: {
	                name: "rnum"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "resdata_url",
	              field_definition: {
	                name: "resdata_url"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "region",
	              field_definition: {
	                name: "region"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "ref_article_url",
	              field_definition: {
	                name: "ref_article_url"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "ref_article_title",
	              field_definition: {
	                name: "ref_article_title"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "pub_key",
	              field_definition: {
	                name: "pub_key"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "pub_id",
	              field_definition: {
	                name: "pub_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "pub_date",
	              field_definition: {
	                name: "pub_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_type",
	              field_definition: {
	                name: "product_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_list",
	              field_definition: {
	                name: "product_list"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "page_count",
	              field_definition: {
	                name: "page_count"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "obo_preferred_name",
	              field_definition: {
	                name: "obo_preferred_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "obo_last_name",
	              field_definition: {
	                name: "obo_last_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "obo_first_name",
	              field_definition: {
	                name: "obo_first_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "miliseconds",
	              field_definition: {
	                name: "miliseconds"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "menu_code",
	              field_definition: {
	                name: "menu_code"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "media_url_android",
	              field_definition: {
	                name: "media_url_android"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "medial_url_ios",
	              field_definition: {
	                name: "medial_url_ios"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "kv",
	              field_definition: {
	                name: "kv"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "image_group",
	              field_definition: {
	                name: "image_group"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "image",
	              field_definition: {
	                name: "image"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "html_escaped_title",
	              field_definition: {
	                name: "html_escaped_title"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "hit_count",
	              field_definition: {
	                name: "hit_count"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "headline",
	              field_definition: {
	                name: "headline"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "formatted_date_str",
	              field_definition: {
	                name: "formatted_date_str"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "formated_pub_date",
	              field_definition: {
	                name: "formated_pub_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "file_type",
	              field_definition: {
	                name: "file_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "file_name",
	              field_definition: {
	                name: "file_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "file_link",
	              field_definition: {
	                name: "file_link"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "encrypted_id",
	              field_definition: {
	                name: "encrypted_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "document_url",
	              field_definition: {
	                name: "document_url"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "date_string",
	              field_definition: {
	                name: "date_string"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "content_url",
	              field_definition: {
	                name: "content_url"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "content_type",
	              field_definition: {
	                name: "content_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "type",
	              field_definition: {
	                name: "content_services_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "company",
	              field_definition: {
	                name: "company"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "authors",
	              field_definition: {
	                name: "authors"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "author_name",
	              field_definition: {
	                name: "author_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "author_id",
	              field_definition: {
	                name: "author_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "author_details",
	              field_definition: {
	                name: "author_details"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "attachment_id",
	              field_definition: {
	                name: "attachment_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "asset_class",
	              field_definition: {
	                name: "asset_class"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "analyst_type",
	              field_definition: {
	                name: "analyst_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "analyst_id",
	              field_definition: {
	                name: "analyst_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "all_attachments",
	              field_definition: {
	                name: "all_attachments"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "alert_date",
	              field_definition: {
	                name: "alert_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "/content_services",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "content_services",
					limit : "",
          offset : "",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	            {
	              name: "type",
	              value: "{{query.query.type}}"
	            },
	          
	        ]
				}
				

	});

	return CapitalMarketsContentServiceContentServices;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CapitalMarketsContentServiceCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsContentServiceCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsContentServiceCount = (function($class, _AggregateCollection) {

	var CapitalMarketsContentServiceCount = $class({
		extends: _AggregateCollection,

		_constructor: function CapitalMarketsContentServiceCount() {
			CitiMobileChallengeSdk.collections.CapitalMarketsContentServiceCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CapitalMarketsContentService,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/capital_markets_content_services.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CapitalMarketsTrading",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "video_url",
						field_definition: {
							name: "video_url"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "video_type",
						field_definition: {
							name: "video_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "type",
						field_definition: {
							name: "content_services_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "total_count",
						field_definition: {
							name: "total_count"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "title",
						field_definition: {
							name: "title"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "tickers",
						field_definition: {
							name: "tickers"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "theme_id",
						field_definition: {
							name: "theme_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "template",
						field_definition: {
							name: "template"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "synopsis",
						field_definition: {
							name: "synopsis"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "summary",
						field_definition: {
							name: "summary"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "source",
						field_definition: {
							name: "source"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "scale",
						field_definition: {
							name: "scale"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "rnum",
						field_definition: {
							name: "rnum"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "resdata_url",
						field_definition: {
							name: "resdata_url"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "region",
						field_definition: {
							name: "region"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "ref_article_url",
						field_definition: {
							name: "ref_article_url"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "ref_article_title",
						field_definition: {
							name: "ref_article_title"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "pub_key",
						field_definition: {
							name: "pub_key"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "pub_id",
						field_definition: {
							name: "pub_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "pub_date",
						field_definition: {
							name: "pub_date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "product_type",
						field_definition: {
							name: "product_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "product_list",
						field_definition: {
							name: "product_list"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "page_count",
						field_definition: {
							name: "page_count"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "obo_preferred_name",
						field_definition: {
							name: "obo_preferred_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "obo_last_name",
						field_definition: {
							name: "obo_last_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "obo_first_name",
						field_definition: {
							name: "obo_first_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "miliseconds",
						field_definition: {
							name: "miliseconds"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "menu_code",
						field_definition: {
							name: "menu_code"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "medial_url_ios",
						field_definition: {
							name: "medial_url_ios"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "media_url_android",
						field_definition: {
							name: "media_url_android"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "kv",
						field_definition: {
							name: "kv"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "image",
						field_definition: {
							name: "image"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "image_group",
						field_definition: {
							name: "image_group"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "html_escaped_title",
						field_definition: {
							name: "html_escaped_title"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "headline",
						field_definition: {
							name: "headline"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "formatted_date_str",
						field_definition: {
							name: "formatted_date_str"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "formated_pub_date",
						field_definition: {
							name: "formated_pub_date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "file_type",
						field_definition: {
							name: "file_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "file_name",
						field_definition: {
							name: "file_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "file_link",
						field_definition: {
							name: "file_link"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "encrypted_id",
						field_definition: {
							name: "encrypted_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "document_url",
						field_definition: {
							name: "document_url"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "date_string",
						field_definition: {
							name: "date_string"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "content_url",
						field_definition: {
							name: "content_url"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "content_type",
						field_definition: {
							name: "content_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "company",
						field_definition: {
							name: "company"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "authors",
						field_definition: {
							name: "authors"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "author_name",
						field_definition: {
							name: "author_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "author_id",
						field_definition: {
							name: "author_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "author_details",
						field_definition: {
							name: "author_details"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "attachment_id",
						field_definition: {
							name: "attachment_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "asset_class",
						field_definition: {
							name: "asset_class"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "analyst_type",
						field_definition: {
							name: "analyst_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "analyst_id",
						field_definition: {
							name: "analyst_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "all_attachments",
						field_definition: {
							name: "all_attachments"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "alert_date",
						field_definition: {
							name: "alert_date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "sectors",
						field_definition: {
							name: "sectors"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "hit_count",
						field_definition: {
							name: "hit_count"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "video_url",
						field_definition: {
							name: "video_url"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "video_type",
						field_definition: {
							name: "video_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "type",
						field_definition: {
							name: "content_services_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "total_count",
						field_definition: {
							name: "total_count"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "title",
						field_definition: {
							name: "title"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "tickers",
						field_definition: {
							name: "tickers"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "theme_id",
						field_definition: {
							name: "theme_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "template",
						field_definition: {
							name: "template"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "synopsis",
						field_definition: {
							name: "synopsis"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "summary",
						field_definition: {
							name: "summary"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "source",
						field_definition: {
							name: "source"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "scale",
						field_definition: {
							name: "scale"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "rnum",
						field_definition: {
							name: "rnum"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "resdata_url",
						field_definition: {
							name: "resdata_url"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "region",
						field_definition: {
							name: "region"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "ref_article_url",
						field_definition: {
							name: "ref_article_url"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "ref_article_title",
						field_definition: {
							name: "ref_article_title"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "pub_key",
						field_definition: {
							name: "pub_key"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "pub_id",
						field_definition: {
							name: "pub_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "pub_date",
						field_definition: {
							name: "pub_date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "product_type",
						field_definition: {
							name: "product_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "product_list",
						field_definition: {
							name: "product_list"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "page_count",
						field_definition: {
							name: "page_count"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "obo_preferred_name",
						field_definition: {
							name: "obo_preferred_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "obo_last_name",
						field_definition: {
							name: "obo_last_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "obo_first_name",
						field_definition: {
							name: "obo_first_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "miliseconds",
						field_definition: {
							name: "miliseconds"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "menu_code",
						field_definition: {
							name: "menu_code"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "medial_url_ios",
						field_definition: {
							name: "medial_url_ios"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "media_url_android",
						field_definition: {
							name: "media_url_android"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "kv",
						field_definition: {
							name: "kv"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "image",
						field_definition: {
							name: "image"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "image_group",
						field_definition: {
							name: "image_group"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "html_escaped_title",
						field_definition: {
							name: "html_escaped_title"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "headline",
						field_definition: {
							name: "headline"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "formatted_date_str",
						field_definition: {
							name: "formatted_date_str"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "formated_pub_date",
						field_definition: {
							name: "formated_pub_date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "file_type",
						field_definition: {
							name: "file_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "file_name",
						field_definition: {
							name: "file_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "file_link",
						field_definition: {
							name: "file_link"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "encrypted_id",
						field_definition: {
							name: "encrypted_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "document_url",
						field_definition: {
							name: "document_url"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "date_string",
						field_definition: {
							name: "date_string"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "content_url",
						field_definition: {
							name: "content_url"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "content_type",
						field_definition: {
							name: "content_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "company",
						field_definition: {
							name: "company"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "authors",
						field_definition: {
							name: "authors"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "author_name",
						field_definition: {
							name: "author_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "author_id",
						field_definition: {
							name: "author_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "author_details",
						field_definition: {
							name: "author_details"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "attachment_id",
						field_definition: {
							name: "attachment_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "asset_class",
						field_definition: {
							name: "asset_class"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "analyst_type",
						field_definition: {
							name: "analyst_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "analyst_id",
						field_definition: {
							name: "analyst_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "all_attachments",
						field_definition: {
							name: "all_attachments"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "alert_date",
						field_definition: {
							name: "alert_date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "sectors",
						field_definition: {
							name: "sectors"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "hit_count",
						field_definition: {
							name: "hit_count"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CapitalMarketsContentServiceCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CapitalMarketsContentServiceCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsContentServiceCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsContentServiceCountExactMatch = (function($class, _AggregateCollection) {

	var CapitalMarketsContentServiceCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function CapitalMarketsContentServiceCountExactMatch() {
			CitiMobileChallengeSdk.collections.CapitalMarketsContentServiceCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CapitalMarketsContentService,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/capital_markets_content_services.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CapitalMarketsTrading",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "video_url",
						field_definition: {
							name: "video_url"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "video_type",
						field_definition: {
							name: "video_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "type",
						field_definition: {
							name: "content_services_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "total_count",
						field_definition: {
							name: "total_count"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "title",
						field_definition: {
							name: "title"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "tickers",
						field_definition: {
							name: "tickers"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "theme_id",
						field_definition: {
							name: "theme_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "template",
						field_definition: {
							name: "template"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "synopsis",
						field_definition: {
							name: "synopsis"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "summary",
						field_definition: {
							name: "summary"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "source",
						field_definition: {
							name: "source"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "sectors",
						field_definition: {
							name: "sectors"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "scale",
						field_definition: {
							name: "scale"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "rnum",
						field_definition: {
							name: "rnum"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "resdata_url",
						field_definition: {
							name: "resdata_url"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "region",
						field_definition: {
							name: "region"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "ref_article_url",
						field_definition: {
							name: "ref_article_url"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "ref_article_title",
						field_definition: {
							name: "ref_article_title"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "pub_key",
						field_definition: {
							name: "pub_key"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "pub_id",
						field_definition: {
							name: "pub_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "pub_date",
						field_definition: {
							name: "pub_date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "product_type",
						field_definition: {
							name: "product_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "product_list",
						field_definition: {
							name: "product_list"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "page_count",
						field_definition: {
							name: "page_count"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "obo_preferred_name",
						field_definition: {
							name: "obo_preferred_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "obo_last_name",
						field_definition: {
							name: "obo_last_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "obo_first_name",
						field_definition: {
							name: "obo_first_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "miliseconds",
						field_definition: {
							name: "miliseconds"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "menu_code",
						field_definition: {
							name: "menu_code"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "medial_url_ios",
						field_definition: {
							name: "medial_url_ios"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "media_url_android",
						field_definition: {
							name: "media_url_android"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "kv",
						field_definition: {
							name: "kv"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "image",
						field_definition: {
							name: "image"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "image_group",
						field_definition: {
							name: "image_group"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "html_escaped_title",
						field_definition: {
							name: "html_escaped_title"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "hit_count",
						field_definition: {
							name: "hit_count"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "headline",
						field_definition: {
							name: "headline"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "formatted_date_str",
						field_definition: {
							name: "formatted_date_str"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "formated_pub_date",
						field_definition: {
							name: "formated_pub_date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "file_type",
						field_definition: {
							name: "file_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "file_name",
						field_definition: {
							name: "file_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "file_link",
						field_definition: {
							name: "file_link"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "encrypted_id",
						field_definition: {
							name: "encrypted_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "document_url",
						field_definition: {
							name: "document_url"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "date_string",
						field_definition: {
							name: "date_string"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "content_url",
						field_definition: {
							name: "content_url"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "content_type",
						field_definition: {
							name: "content_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "company",
						field_definition: {
							name: "company"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "authors",
						field_definition: {
							name: "authors"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "author_name",
						field_definition: {
							name: "author_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "author_id",
						field_definition: {
							name: "author_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "author_details",
						field_definition: {
							name: "author_details"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "attachment_id",
						field_definition: {
							name: "attachment_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "asset_class",
						field_definition: {
							name: "asset_class"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "analyst_type",
						field_definition: {
							name: "analyst_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "analyst_id",
						field_definition: {
							name: "analyst_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "all_attachments",
						field_definition: {
							name: "all_attachments"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "alert_date",
						field_definition: {
							name: "alert_date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "video_url",
						field_definition: {
							name: "video_url"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "video_type",
						field_definition: {
							name: "video_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "type",
						field_definition: {
							name: "content_services_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "total_count",
						field_definition: {
							name: "total_count"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "title",
						field_definition: {
							name: "title"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "tickers",
						field_definition: {
							name: "tickers"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "theme_id",
						field_definition: {
							name: "theme_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "template",
						field_definition: {
							name: "template"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "synopsis",
						field_definition: {
							name: "synopsis"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "summary",
						field_definition: {
							name: "summary"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "source",
						field_definition: {
							name: "source"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "sectors",
						field_definition: {
							name: "sectors"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "scale",
						field_definition: {
							name: "scale"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "rnum",
						field_definition: {
							name: "rnum"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "resdata_url",
						field_definition: {
							name: "resdata_url"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "region",
						field_definition: {
							name: "region"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "ref_article_url",
						field_definition: {
							name: "ref_article_url"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "ref_article_title",
						field_definition: {
							name: "ref_article_title"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "pub_key",
						field_definition: {
							name: "pub_key"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "pub_id",
						field_definition: {
							name: "pub_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "pub_date",
						field_definition: {
							name: "pub_date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "product_type",
						field_definition: {
							name: "product_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "product_list",
						field_definition: {
							name: "product_list"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "page_count",
						field_definition: {
							name: "page_count"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "obo_preferred_name",
						field_definition: {
							name: "obo_preferred_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "obo_last_name",
						field_definition: {
							name: "obo_last_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "obo_first_name",
						field_definition: {
							name: "obo_first_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "miliseconds",
						field_definition: {
							name: "miliseconds"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "menu_code",
						field_definition: {
							name: "menu_code"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "medial_url_ios",
						field_definition: {
							name: "medial_url_ios"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "media_url_android",
						field_definition: {
							name: "media_url_android"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "kv",
						field_definition: {
							name: "kv"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "image",
						field_definition: {
							name: "image"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "image_group",
						field_definition: {
							name: "image_group"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "html_escaped_title",
						field_definition: {
							name: "html_escaped_title"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "hit_count",
						field_definition: {
							name: "hit_count"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "headline",
						field_definition: {
							name: "headline"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "formatted_date_str",
						field_definition: {
							name: "formatted_date_str"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "formated_pub_date",
						field_definition: {
							name: "formated_pub_date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "file_type",
						field_definition: {
							name: "file_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "file_name",
						field_definition: {
							name: "file_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "file_link",
						field_definition: {
							name: "file_link"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "encrypted_id",
						field_definition: {
							name: "encrypted_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "document_url",
						field_definition: {
							name: "document_url"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "date_string",
						field_definition: {
							name: "date_string"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "content_url",
						field_definition: {
							name: "content_url"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "content_type",
						field_definition: {
							name: "content_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "company",
						field_definition: {
							name: "company"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "authors",
						field_definition: {
							name: "authors"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "author_name",
						field_definition: {
							name: "author_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "author_id",
						field_definition: {
							name: "author_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "author_details",
						field_definition: {
							name: "author_details"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "attachment_id",
						field_definition: {
							name: "attachment_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "asset_class",
						field_definition: {
							name: "asset_class"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "analyst_type",
						field_definition: {
							name: "analyst_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "analyst_id",
						field_definition: {
							name: "analyst_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "all_attachments",
						field_definition: {
							name: "all_attachments"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "alert_date",
						field_definition: {
							name: "alert_date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CapitalMarketsContentServiceCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CapitalMarketsContentServiceExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsContentServiceExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsContentServiceExactMatch = (function($class, _ScopeCollection) {

	var CapitalMarketsContentServiceExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function CapitalMarketsContentServiceExactMatch() {
            CitiMobileChallengeSdk.collections.CapitalMarketsContentServiceExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CapitalMarketsContentService,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/capital_markets_content_services.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CapitalMarketsTrading",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "video_url",
	              field_definition: {
	                name: "video_url"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "video_type",
	              field_definition: {
	                name: "video_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "type",
	              field_definition: {
	                name: "content_services_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "total_count",
	              field_definition: {
	                name: "total_count"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "title",
	              field_definition: {
	                name: "title"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "tickers",
	              field_definition: {
	                name: "tickers"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "theme_id",
	              field_definition: {
	                name: "theme_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "template",
	              field_definition: {
	                name: "template"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "synopsis",
	              field_definition: {
	                name: "synopsis"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "summary",
	              field_definition: {
	                name: "summary"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "source",
	              field_definition: {
	                name: "source"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "sectors",
	              field_definition: {
	                name: "sectors"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "scale",
	              field_definition: {
	                name: "scale"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "rnum",
	              field_definition: {
	                name: "rnum"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "resdata_url",
	              field_definition: {
	                name: "resdata_url"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "region",
	              field_definition: {
	                name: "region"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "ref_article_url",
	              field_definition: {
	                name: "ref_article_url"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "ref_article_title",
	              field_definition: {
	                name: "ref_article_title"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "pub_key",
	              field_definition: {
	                name: "pub_key"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "pub_id",
	              field_definition: {
	                name: "pub_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "pub_date",
	              field_definition: {
	                name: "pub_date"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "product_type",
	              field_definition: {
	                name: "product_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "product_list",
	              field_definition: {
	                name: "product_list"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "page_count",
	              field_definition: {
	                name: "page_count"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "obo_preferred_name",
	              field_definition: {
	                name: "obo_preferred_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "obo_last_name",
	              field_definition: {
	                name: "obo_last_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "obo_first_name",
	              field_definition: {
	                name: "obo_first_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "miliseconds",
	              field_definition: {
	                name: "miliseconds"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "menu_code",
	              field_definition: {
	                name: "menu_code"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "medial_url_ios",
	              field_definition: {
	                name: "medial_url_ios"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "media_url_android",
	              field_definition: {
	                name: "media_url_android"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "kv",
	              field_definition: {
	                name: "kv"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "image",
	              field_definition: {
	                name: "image"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "image_group",
	              field_definition: {
	                name: "image_group"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "html_escaped_title",
	              field_definition: {
	                name: "html_escaped_title"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "hit_count",
	              field_definition: {
	                name: "hit_count"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "headline",
	              field_definition: {
	                name: "headline"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "formatted_date_str",
	              field_definition: {
	                name: "formatted_date_str"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "formated_pub_date",
	              field_definition: {
	                name: "formated_pub_date"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "file_type",
	              field_definition: {
	                name: "file_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "file_name",
	              field_definition: {
	                name: "file_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "file_link",
	              field_definition: {
	                name: "file_link"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "encrypted_id",
	              field_definition: {
	                name: "encrypted_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "document_url",
	              field_definition: {
	                name: "document_url"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "date_string",
	              field_definition: {
	                name: "date_string"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "content_url",
	              field_definition: {
	                name: "content_url"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "content_type",
	              field_definition: {
	                name: "content_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "company",
	              field_definition: {
	                name: "company"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "authors",
	              field_definition: {
	                name: "authors"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "author_name",
	              field_definition: {
	                name: "author_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "author_id",
	              field_definition: {
	                name: "author_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "author_details",
	              field_definition: {
	                name: "author_details"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "attachment_id",
	              field_definition: {
	                name: "attachment_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "asset_class",
	              field_definition: {
	                name: "asset_class"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "analyst_type",
	              field_definition: {
	                name: "analyst_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "analyst_id",
	              field_definition: {
	                name: "analyst_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "all_attachments",
	              field_definition: {
	                name: "all_attachments"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "alert_date",
	              field_definition: {
	                name: "alert_date"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "video_url",
	              field_definition: {
	                name: "video_url"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "video_type",
	              field_definition: {
	                name: "video_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "type",
	              field_definition: {
	                name: "content_services_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "total_count",
	              field_definition: {
	                name: "total_count"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "title",
	              field_definition: {
	                name: "title"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "tickers",
	              field_definition: {
	                name: "tickers"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "theme_id",
	              field_definition: {
	                name: "theme_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "template",
	              field_definition: {
	                name: "template"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "synopsis",
	              field_definition: {
	                name: "synopsis"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "summary",
	              field_definition: {
	                name: "summary"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "source",
	              field_definition: {
	                name: "source"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "sectors",
	              field_definition: {
	                name: "sectors"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "scale",
	              field_definition: {
	                name: "scale"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "rnum",
	              field_definition: {
	                name: "rnum"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "resdata_url",
	              field_definition: {
	                name: "resdata_url"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "region",
	              field_definition: {
	                name: "region"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "ref_article_url",
	              field_definition: {
	                name: "ref_article_url"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "ref_article_title",
	              field_definition: {
	                name: "ref_article_title"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "pub_key",
	              field_definition: {
	                name: "pub_key"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "pub_id",
	              field_definition: {
	                name: "pub_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "pub_date",
	              field_definition: {
	                name: "pub_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_type",
	              field_definition: {
	                name: "product_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_list",
	              field_definition: {
	                name: "product_list"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "page_count",
	              field_definition: {
	                name: "page_count"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "obo_preferred_name",
	              field_definition: {
	                name: "obo_preferred_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "obo_last_name",
	              field_definition: {
	                name: "obo_last_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "obo_first_name",
	              field_definition: {
	                name: "obo_first_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "miliseconds",
	              field_definition: {
	                name: "miliseconds"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "menu_code",
	              field_definition: {
	                name: "menu_code"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "medial_url_ios",
	              field_definition: {
	                name: "medial_url_ios"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "media_url_android",
	              field_definition: {
	                name: "media_url_android"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "kv",
	              field_definition: {
	                name: "kv"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "image",
	              field_definition: {
	                name: "image"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "image_group",
	              field_definition: {
	                name: "image_group"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "html_escaped_title",
	              field_definition: {
	                name: "html_escaped_title"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "hit_count",
	              field_definition: {
	                name: "hit_count"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "headline",
	              field_definition: {
	                name: "headline"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "formatted_date_str",
	              field_definition: {
	                name: "formatted_date_str"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "formated_pub_date",
	              field_definition: {
	                name: "formated_pub_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "file_type",
	              field_definition: {
	                name: "file_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "file_name",
	              field_definition: {
	                name: "file_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "file_link",
	              field_definition: {
	                name: "file_link"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "encrypted_id",
	              field_definition: {
	                name: "encrypted_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "document_url",
	              field_definition: {
	                name: "document_url"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "date_string",
	              field_definition: {
	                name: "date_string"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "content_url",
	              field_definition: {
	                name: "content_url"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "content_type",
	              field_definition: {
	                name: "content_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "company",
	              field_definition: {
	                name: "company"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "authors",
	              field_definition: {
	                name: "authors"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "author_name",
	              field_definition: {
	                name: "author_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "author_id",
	              field_definition: {
	                name: "author_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "author_details",
	              field_definition: {
	                name: "author_details"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "attachment_id",
	              field_definition: {
	                name: "attachment_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "asset_class",
	              field_definition: {
	                name: "asset_class"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "analyst_type",
	              field_definition: {
	                name: "analyst_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "analyst_id",
	              field_definition: {
	                name: "analyst_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "all_attachments",
	              field_definition: {
	                name: "all_attachments"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "alert_date",
	              field_definition: {
	                name: "alert_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CapitalMarketsContentServiceExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CapitalMarketsLoginAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsLoginAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsLoginAll = (function($class, _ScopeCollection) {

	var CapitalMarketsLoginAll = $class({

		extends: _ScopeCollection,

        _constructor: function CapitalMarketsLoginAll() {
            CitiMobileChallengeSdk.collections.CapitalMarketsLoginAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CapitalMarketsLogin,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/capital_markets_logins.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CapitalMarketsTrading",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "password",
	              field_definition: {
	                name: "password"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "username",
	              field_definition: {
	                name: "username"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "token",
	              field_definition: {
	                name: "token"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "password",
	              field_definition: {
	                name: "password"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "username",
	              field_definition: {
	                name: "username"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "token",
	              field_definition: {
	                name: "token"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CapitalMarketsLoginAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CapitalMarketsLoginCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsLoginCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsLoginCount = (function($class, _AggregateCollection) {

	var CapitalMarketsLoginCount = $class({
		extends: _AggregateCollection,

		_constructor: function CapitalMarketsLoginCount() {
			CitiMobileChallengeSdk.collections.CapitalMarketsLoginCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CapitalMarketsLogin,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/capital_markets_logins.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CapitalMarketsTrading",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "password",
						field_definition: {
							name: "password"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "username",
						field_definition: {
							name: "username"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "token",
						field_definition: {
							name: "token"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "password",
						field_definition: {
							name: "password"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "username",
						field_definition: {
							name: "username"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "token",
						field_definition: {
							name: "token"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CapitalMarketsLoginCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CapitalMarketsLoginCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsLoginCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsLoginCountExactMatch = (function($class, _AggregateCollection) {

	var CapitalMarketsLoginCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function CapitalMarketsLoginCountExactMatch() {
			CitiMobileChallengeSdk.collections.CapitalMarketsLoginCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CapitalMarketsLogin,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/capital_markets_logins.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CapitalMarketsTrading",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "password",
						field_definition: {
							name: "password"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "username",
						field_definition: {
							name: "username"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "token",
						field_definition: {
							name: "token"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "password",
						field_definition: {
							name: "password"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "username",
						field_definition: {
							name: "username"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "token",
						field_definition: {
							name: "token"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CapitalMarketsLoginCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CapitalMarketsLoginExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsLoginExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsLoginExactMatch = (function($class, _ScopeCollection) {

	var CapitalMarketsLoginExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function CapitalMarketsLoginExactMatch() {
            CitiMobileChallengeSdk.collections.CapitalMarketsLoginExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CapitalMarketsLogin,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/capital_markets_logins.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CapitalMarketsTrading",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "password",
	              field_definition: {
	                name: "password"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "username",
	              field_definition: {
	                name: "username"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "token",
	              field_definition: {
	                name: "token"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "password",
	              field_definition: {
	                name: "password"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "username",
	              field_definition: {
	                name: "username"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "token",
	              field_definition: {
	                name: "token"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CapitalMarketsLoginExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CapitalMarketsOrderAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsOrderAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsOrderAll = (function($class, _ScopeCollection) {

	var CapitalMarketsOrderAll = $class({

		extends: _ScopeCollection,

        _constructor: function CapitalMarketsOrderAll() {
            CitiMobileChallengeSdk.collections.CapitalMarketsOrderAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CapitalMarketsOrder,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/capital_markets_orders.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CapitalMarketsTrading",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "transact_time",
	              field_definition: {
	                name: "transact_time"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "symbol",
	              field_definition: {
	                name: "symbol"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "status",
	              field_definition: {
	                name: "status"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "side",
	              field_definition: {
	                name: "side"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "quantity",
	              field_definition: {
	                name: "quantity"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "price",
	              field_definition: {
	                name: "price"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "last_qty",
	              field_definition: {
	                name: "last_qty"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "last_price",
	              field_definition: {
	                name: "last_price"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "currency",
	              field_definition: {
	                name: "currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "comments",
	              field_definition: {
	                name: "comments"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "transact_time",
	              field_definition: {
	                name: "transact_time"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "symbol",
	              field_definition: {
	                name: "symbol"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "status",
	              field_definition: {
	                name: "status"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "side",
	              field_definition: {
	                name: "side"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "quantity",
	              field_definition: {
	                name: "quantity"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "price",
	              field_definition: {
	                name: "price"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "last_qty",
	              field_definition: {
	                name: "last_qty"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "last_price",
	              field_definition: {
	                name: "last_price"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "currency",
	              field_definition: {
	                name: "currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "comments",
	              field_definition: {
	                name: "comments"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CapitalMarketsOrderAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CapitalMarketsOrderCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsOrderCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsOrderCount = (function($class, _AggregateCollection) {

	var CapitalMarketsOrderCount = $class({
		extends: _AggregateCollection,

		_constructor: function CapitalMarketsOrderCount() {
			CitiMobileChallengeSdk.collections.CapitalMarketsOrderCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CapitalMarketsOrder,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/capital_markets_orders.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CapitalMarketsTrading",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "transact_time",
						field_definition: {
							name: "transact_time"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "symbol",
						field_definition: {
							name: "symbol"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "status",
						field_definition: {
							name: "status"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "side",
						field_definition: {
							name: "side"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "quantity",
						field_definition: {
							name: "quantity"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "price",
						field_definition: {
							name: "price"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "last_qty",
						field_definition: {
							name: "last_qty"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "last_price",
						field_definition: {
							name: "last_price"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "currency",
						field_definition: {
							name: "currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "comments",
						field_definition: {
							name: "comments"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "transact_time",
						field_definition: {
							name: "transact_time"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "symbol",
						field_definition: {
							name: "symbol"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "status",
						field_definition: {
							name: "status"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "side",
						field_definition: {
							name: "side"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "quantity",
						field_definition: {
							name: "quantity"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "price",
						field_definition: {
							name: "price"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "last_qty",
						field_definition: {
							name: "last_qty"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "last_price",
						field_definition: {
							name: "last_price"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "currency",
						field_definition: {
							name: "currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "comments",
						field_definition: {
							name: "comments"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CapitalMarketsOrderCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CapitalMarketsOrderCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsOrderCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsOrderCountExactMatch = (function($class, _AggregateCollection) {

	var CapitalMarketsOrderCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function CapitalMarketsOrderCountExactMatch() {
			CitiMobileChallengeSdk.collections.CapitalMarketsOrderCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CapitalMarketsOrder,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/capital_markets_orders.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CapitalMarketsTrading",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "transact_time",
						field_definition: {
							name: "transact_time"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "symbol",
						field_definition: {
							name: "symbol"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "status",
						field_definition: {
							name: "status"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "side",
						field_definition: {
							name: "side"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "quantity",
						field_definition: {
							name: "quantity"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "price",
						field_definition: {
							name: "price"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "last_qty",
						field_definition: {
							name: "last_qty"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "last_price",
						field_definition: {
							name: "last_price"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "currency",
						field_definition: {
							name: "currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "comments",
						field_definition: {
							name: "comments"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "transact_time",
						field_definition: {
							name: "transact_time"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "symbol",
						field_definition: {
							name: "symbol"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "status",
						field_definition: {
							name: "status"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "side",
						field_definition: {
							name: "side"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "quantity",
						field_definition: {
							name: "quantity"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "price",
						field_definition: {
							name: "price"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "last_qty",
						field_definition: {
							name: "last_qty"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "last_price",
						field_definition: {
							name: "last_price"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "currency",
						field_definition: {
							name: "currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "comments",
						field_definition: {
							name: "comments"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CapitalMarketsOrderCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CapitalMarketsOrderExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsOrderExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsOrderExactMatch = (function($class, _ScopeCollection) {

	var CapitalMarketsOrderExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function CapitalMarketsOrderExactMatch() {
            CitiMobileChallengeSdk.collections.CapitalMarketsOrderExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CapitalMarketsOrder,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/capital_markets_orders.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CapitalMarketsTrading",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "transact_time",
	              field_definition: {
	                name: "transact_time"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "symbol",
	              field_definition: {
	                name: "symbol"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "status",
	              field_definition: {
	                name: "status"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "side",
	              field_definition: {
	                name: "side"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "quantity",
	              field_definition: {
	                name: "quantity"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "price",
	              field_definition: {
	                name: "price"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "last_qty",
	              field_definition: {
	                name: "last_qty"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "last_price",
	              field_definition: {
	                name: "last_price"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "currency",
	              field_definition: {
	                name: "currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "comments",
	              field_definition: {
	                name: "comments"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "transact_time",
	              field_definition: {
	                name: "transact_time"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "symbol",
	              field_definition: {
	                name: "symbol"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "status",
	              field_definition: {
	                name: "status"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "side",
	              field_definition: {
	                name: "side"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "quantity",
	              field_definition: {
	                name: "quantity"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "price",
	              field_definition: {
	                name: "price"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "last_qty",
	              field_definition: {
	                name: "last_qty"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "last_price",
	              field_definition: {
	                name: "last_price"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "currency",
	              field_definition: {
	                name: "currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "comments",
	              field_definition: {
	                name: "comments"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CapitalMarketsOrderExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CapitalMarketsRevenueAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsRevenueAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsRevenueAll = (function($class, _ScopeCollection) {

	var CapitalMarketsRevenueAll = $class({

		extends: _ScopeCollection,

        _constructor: function CapitalMarketsRevenueAll() {
            CitiMobileChallengeSdk.collections.CapitalMarketsRevenueAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CapitalMarketsRevenue,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/capital_markets_revenues.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CapitalMarketsTrading",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "year",
	              field_definition: {
	                name: "year"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "region",
	              field_definition: {
	                name: "region"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "profit_loss",
	              field_definition: {
	                name: "profit_loss"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "product_name",
	              field_definition: {
	                name: "product_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "product_id",
	              field_definition: {
	                name: "product_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "month",
	              field_definition: {
	                name: "month"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "gross_comm",
	              field_definition: {
	                name: "gross_comm"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "client_tier",
	              field_definition: {
	                name: "client_tier"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "client_name",
	              field_definition: {
	                name: "client_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "client_id",
	              field_definition: {
	                name: "client_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "year",
	              field_definition: {
	                name: "year"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "region",
	              field_definition: {
	                name: "region"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "profit_loss",
	              field_definition: {
	                name: "profit_loss"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_name",
	              field_definition: {
	                name: "product_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_id",
	              field_definition: {
	                name: "product_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "month",
	              field_definition: {
	                name: "month"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "gross_comm",
	              field_definition: {
	                name: "gross_comm"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_tier",
	              field_definition: {
	                name: "client_tier"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_name",
	              field_definition: {
	                name: "client_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_id",
	              field_definition: {
	                name: "client_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CapitalMarketsRevenueAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CapitalMarketsRevenueCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsRevenueCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsRevenueCount = (function($class, _AggregateCollection) {

	var CapitalMarketsRevenueCount = $class({
		extends: _AggregateCollection,

		_constructor: function CapitalMarketsRevenueCount() {
			CitiMobileChallengeSdk.collections.CapitalMarketsRevenueCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CapitalMarketsRevenue,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/capital_markets_revenues.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CapitalMarketsTrading",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "year",
						field_definition: {
							name: "year"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "region",
						field_definition: {
							name: "region"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "profit_loss",
						field_definition: {
							name: "profit_loss"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "product_name",
						field_definition: {
							name: "product_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "product_id",
						field_definition: {
							name: "product_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "month",
						field_definition: {
							name: "month"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "gross_comm",
						field_definition: {
							name: "gross_comm"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "client_tier",
						field_definition: {
							name: "client_tier"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "client_name",
						field_definition: {
							name: "client_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "client_id",
						field_definition: {
							name: "client_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "year",
						field_definition: {
							name: "year"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "region",
						field_definition: {
							name: "region"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "profit_loss",
						field_definition: {
							name: "profit_loss"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "product_name",
						field_definition: {
							name: "product_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "product_id",
						field_definition: {
							name: "product_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "month",
						field_definition: {
							name: "month"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "gross_comm",
						field_definition: {
							name: "gross_comm"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "client_tier",
						field_definition: {
							name: "client_tier"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "client_name",
						field_definition: {
							name: "client_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "client_id",
						field_definition: {
							name: "client_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CapitalMarketsRevenueCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CapitalMarketsRevenueCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsRevenueCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsRevenueCountExactMatch = (function($class, _AggregateCollection) {

	var CapitalMarketsRevenueCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function CapitalMarketsRevenueCountExactMatch() {
			CitiMobileChallengeSdk.collections.CapitalMarketsRevenueCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CapitalMarketsRevenue,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/capital_markets_revenues.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CapitalMarketsTrading",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "year",
						field_definition: {
							name: "year"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "region",
						field_definition: {
							name: "region"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "profit_loss",
						field_definition: {
							name: "profit_loss"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "product_name",
						field_definition: {
							name: "product_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "product_id",
						field_definition: {
							name: "product_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "month",
						field_definition: {
							name: "month"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "gross_comm",
						field_definition: {
							name: "gross_comm"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "client_tier",
						field_definition: {
							name: "client_tier"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "client_name",
						field_definition: {
							name: "client_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "client_id",
						field_definition: {
							name: "client_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "year",
						field_definition: {
							name: "year"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "region",
						field_definition: {
							name: "region"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "profit_loss",
						field_definition: {
							name: "profit_loss"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "product_name",
						field_definition: {
							name: "product_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "product_id",
						field_definition: {
							name: "product_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "month",
						field_definition: {
							name: "month"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "gross_comm",
						field_definition: {
							name: "gross_comm"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "client_tier",
						field_definition: {
							name: "client_tier"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "client_name",
						field_definition: {
							name: "client_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "client_id",
						field_definition: {
							name: "client_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CapitalMarketsRevenueCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CapitalMarketsRevenueExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsRevenueExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsRevenueExactMatch = (function($class, _ScopeCollection) {

	var CapitalMarketsRevenueExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function CapitalMarketsRevenueExactMatch() {
            CitiMobileChallengeSdk.collections.CapitalMarketsRevenueExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CapitalMarketsRevenue,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/capital_markets_revenues.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CapitalMarketsTrading",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "year",
	              field_definition: {
	                name: "year"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "region",
	              field_definition: {
	                name: "region"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "profit_loss",
	              field_definition: {
	                name: "profit_loss"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "product_name",
	              field_definition: {
	                name: "product_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "product_id",
	              field_definition: {
	                name: "product_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "month",
	              field_definition: {
	                name: "month"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "gross_comm",
	              field_definition: {
	                name: "gross_comm"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "client_tier",
	              field_definition: {
	                name: "client_tier"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "client_name",
	              field_definition: {
	                name: "client_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "client_id",
	              field_definition: {
	                name: "client_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "year",
	              field_definition: {
	                name: "year"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "region",
	              field_definition: {
	                name: "region"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "profit_loss",
	              field_definition: {
	                name: "profit_loss"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_name",
	              field_definition: {
	                name: "product_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_id",
	              field_definition: {
	                name: "product_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "month",
	              field_definition: {
	                name: "month"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "gross_comm",
	              field_definition: {
	                name: "gross_comm"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_tier",
	              field_definition: {
	                name: "client_tier"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_name",
	              field_definition: {
	                name: "client_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_id",
	              field_definition: {
	                name: "client_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CapitalMarketsRevenueExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CapitalMarketsRevenueRevenuesis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CapitalMarketsRevenueRevenues
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CapitalMarketsRevenueRevenues = (function($class, _ScopeCollection) {

	var CapitalMarketsRevenueRevenues = $class({

		extends: _ScopeCollection,

        _constructor: function CapitalMarketsRevenueRevenues() {
            CitiMobileChallengeSdk.collections.CapitalMarketsRevenueRevenues._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CapitalMarketsRevenue,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/capital_markets_revenues.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "revenues"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
          {
            fieldName: "region",
            paramName: "region",
          },
          
          {
            fieldName: "year",
            paramName: "year",
          },
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CapitalMarketsTrading",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "year",
	              field_definition: {
	                name: "year"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "region",
	              field_definition: {
	                name: "region"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "profit_loss",
	              field_definition: {
	                name: "profit_loss"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_name",
	              field_definition: {
	                name: "product_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_id",
	              field_definition: {
	                name: "product_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "month",
	              field_definition: {
	                name: "month"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "gross_comm",
	              field_definition: {
	                name: "gross_comm"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_tier",
	              field_definition: {
	                name: "client_tier"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_name",
	              field_definition: {
	                name: "client_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "client_id",
	              field_definition: {
	                name: "client_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "/revenues",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "revenues",
					limit : "",
          offset : "",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	            {
	              name: "region",
	              value: "{{query.query.region}}"
	            },
	          
	            {
	              name: "year",
	              value: "{{query.query.year}}"
	            },
	          
	        ]
				}
				

	});

	return CapitalMarketsRevenueRevenues;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CorporatePaymentsAccountAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsAccountAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsAccountAll = (function($class, _ScopeCollection) {

	var CorporatePaymentsAccountAll = $class({

		extends: _ScopeCollection,

        _constructor: function CorporatePaymentsAccountAll() {
            CitiMobileChallengeSdk.collections.CorporatePaymentsAccountAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CorporatePaymentsAccount,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/corporate_payments_accounts.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CorporatePayments",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "name",
	              field_definition: {
	                name: "name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "status",
	              field_definition: {
	                name: "status"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "base_currency_balances",
	              field_definition: {
	                name: "base_currency_balances"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "local_currency_iso_code",
	              field_definition: {
	                name: "local_currency_iso_code"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "country_iso_code",
	              field_definition: {
	                name: "country_iso_code"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "account_name",
	              field_definition: {
	                name: "account_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "branch_name",
	              field_definition: {
	                name: "branch_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "/accounts",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "",
          offset : "",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CorporatePaymentsAccountAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CorporatePaymentsAccountCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsAccountCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsAccountCount = (function($class, _AggregateCollection) {

	var CorporatePaymentsAccountCount = $class({
		extends: _AggregateCollection,

		_constructor: function CorporatePaymentsAccountCount() {
			CitiMobileChallengeSdk.collections.CorporatePaymentsAccountCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CorporatePaymentsAccount,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/corporate_payments_accounts.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CorporatePayments",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "name",
						field_definition: {
							name: "name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "status",
						field_definition: {
							name: "status"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "base_currency_balances",
						field_definition: {
							name: "base_currency_balances"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "local_currency_iso_code",
						field_definition: {
							name: "local_currency_iso_code"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "country_iso_code",
						field_definition: {
							name: "country_iso_code"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "account_name",
						field_definition: {
							name: "account_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "branch_name",
						field_definition: {
							name: "branch_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "name",
						field_definition: {
							name: "name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "status",
						field_definition: {
							name: "status"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "base_currency_balances",
						field_definition: {
							name: "base_currency_balances"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "local_currency_iso_code",
						field_definition: {
							name: "local_currency_iso_code"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "country_iso_code",
						field_definition: {
							name: "country_iso_code"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "account_name",
						field_definition: {
							name: "account_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "branch_name",
						field_definition: {
							name: "branch_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CorporatePaymentsAccountCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CorporatePaymentsAccountCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsAccountCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsAccountCountExactMatch = (function($class, _AggregateCollection) {

	var CorporatePaymentsAccountCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function CorporatePaymentsAccountCountExactMatch() {
			CitiMobileChallengeSdk.collections.CorporatePaymentsAccountCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CorporatePaymentsAccount,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/corporate_payments_accounts.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CorporatePayments",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "name",
						field_definition: {
							name: "name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "status",
						field_definition: {
							name: "status"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "base_currency_balances",
						field_definition: {
							name: "base_currency_balances"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "local_currency_iso_code",
						field_definition: {
							name: "local_currency_iso_code"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "country_iso_code",
						field_definition: {
							name: "country_iso_code"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "account_name",
						field_definition: {
							name: "account_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "branch_name",
						field_definition: {
							name: "branch_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "name",
						field_definition: {
							name: "name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "status",
						field_definition: {
							name: "status"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "base_currency_balances",
						field_definition: {
							name: "base_currency_balances"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "local_currency_iso_code",
						field_definition: {
							name: "local_currency_iso_code"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "country_iso_code",
						field_definition: {
							name: "country_iso_code"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "account_name",
						field_definition: {
							name: "account_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "branch_name",
						field_definition: {
							name: "branch_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CorporatePaymentsAccountCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CorporatePaymentsAccountExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsAccountExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsAccountExactMatch = (function($class, _ScopeCollection) {

	var CorporatePaymentsAccountExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function CorporatePaymentsAccountExactMatch() {
            CitiMobileChallengeSdk.collections.CorporatePaymentsAccountExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CorporatePaymentsAccount,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/corporate_payments_accounts.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CorporatePayments",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "name",
	              field_definition: {
	                name: "name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "status",
	              field_definition: {
	                name: "status"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "base_currency_balances",
	              field_definition: {
	                name: "base_currency_balances"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "local_currency_iso_code",
	              field_definition: {
	                name: "local_currency_iso_code"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "country_iso_code",
	              field_definition: {
	                name: "country_iso_code"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "account_name",
	              field_definition: {
	                name: "account_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "branch_name",
	              field_definition: {
	                name: "branch_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "name",
	              field_definition: {
	                name: "name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "status",
	              field_definition: {
	                name: "status"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "base_currency_balances",
	              field_definition: {
	                name: "base_currency_balances"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "local_currency_iso_code",
	              field_definition: {
	                name: "local_currency_iso_code"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "country_iso_code",
	              field_definition: {
	                name: "country_iso_code"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "account_name",
	              field_definition: {
	                name: "account_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "branch_name",
	              field_definition: {
	                name: "branch_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CorporatePaymentsAccountExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CorporatePaymentsBeneficiaryAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsBeneficiaryAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsBeneficiaryAll = (function($class, _ScopeCollection) {

	var CorporatePaymentsBeneficiaryAll = $class({

		extends: _ScopeCollection,

        _constructor: function CorporatePaymentsBeneficiaryAll() {
            CitiMobileChallengeSdk.collections.CorporatePaymentsBeneficiaryAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CorporatePaymentsBeneficiary,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/corporate_payments_beneficiaries.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CorporatePayments",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "account_status",
	              field_definition: {
	                name: "account_status"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "bank_address",
	              field_definition: {
	                name: "bank_address"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "iban",
	              field_definition: {
	                name: "iban"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "bic",
	              field_definition: {
	                name: "bic"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "routing_code",
	              field_definition: {
	                name: "routing_code"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "currency",
	              field_definition: {
	                name: "currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "bank_account_type",
	              field_definition: {
	                name: "bank_account_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "bank_country",
	              field_definition: {
	                name: "bank_country"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "company_name",
	              field_definition: {
	                name: "company_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "entity_type",
	              field_definition: {
	                name: "entity_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "country",
	              field_definition: {
	                name: "country"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "address",
	              field_definition: {
	                name: "address"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "account_status",
	              field_definition: {
	                name: "account_status"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "bank_address",
	              field_definition: {
	                name: "bank_address"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "iban",
	              field_definition: {
	                name: "iban"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "bic",
	              field_definition: {
	                name: "bic"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "routing_code",
	              field_definition: {
	                name: "routing_code"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "currency",
	              field_definition: {
	                name: "currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "bank_account_type",
	              field_definition: {
	                name: "bank_account_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "bank_country",
	              field_definition: {
	                name: "bank_country"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "company_name",
	              field_definition: {
	                name: "company_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "entity_type",
	              field_definition: {
	                name: "entity_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "country",
	              field_definition: {
	                name: "country"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "address",
	              field_definition: {
	                name: "address"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CorporatePaymentsBeneficiaryAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CorporatePaymentsBeneficiaryCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsBeneficiaryCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsBeneficiaryCount = (function($class, _AggregateCollection) {

	var CorporatePaymentsBeneficiaryCount = $class({
		extends: _AggregateCollection,

		_constructor: function CorporatePaymentsBeneficiaryCount() {
			CitiMobileChallengeSdk.collections.CorporatePaymentsBeneficiaryCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CorporatePaymentsBeneficiary,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/corporate_payments_beneficiaries.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CorporatePayments",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "account_status",
						field_definition: {
							name: "account_status"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "bank_address",
						field_definition: {
							name: "bank_address"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "iban",
						field_definition: {
							name: "iban"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "bic",
						field_definition: {
							name: "bic"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "routing_code",
						field_definition: {
							name: "routing_code"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "currency",
						field_definition: {
							name: "currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "bank_account_type",
						field_definition: {
							name: "bank_account_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "bank_country",
						field_definition: {
							name: "bank_country"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "company_name",
						field_definition: {
							name: "company_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "entity_type",
						field_definition: {
							name: "entity_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "country",
						field_definition: {
							name: "country"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "address",
						field_definition: {
							name: "address"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "account_status",
						field_definition: {
							name: "account_status"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "bank_address",
						field_definition: {
							name: "bank_address"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "iban",
						field_definition: {
							name: "iban"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "bic",
						field_definition: {
							name: "bic"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "routing_code",
						field_definition: {
							name: "routing_code"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "currency",
						field_definition: {
							name: "currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "bank_account_type",
						field_definition: {
							name: "bank_account_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "bank_country",
						field_definition: {
							name: "bank_country"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "company_name",
						field_definition: {
							name: "company_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "entity_type",
						field_definition: {
							name: "entity_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "country",
						field_definition: {
							name: "country"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "address",
						field_definition: {
							name: "address"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CorporatePaymentsBeneficiaryCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CorporatePaymentsBeneficiaryCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsBeneficiaryCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsBeneficiaryCountExactMatch = (function($class, _AggregateCollection) {

	var CorporatePaymentsBeneficiaryCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function CorporatePaymentsBeneficiaryCountExactMatch() {
			CitiMobileChallengeSdk.collections.CorporatePaymentsBeneficiaryCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CorporatePaymentsBeneficiary,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/corporate_payments_beneficiaries.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CorporatePayments",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "account_status",
						field_definition: {
							name: "account_status"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "bank_address",
						field_definition: {
							name: "bank_address"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "iban",
						field_definition: {
							name: "iban"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "bic",
						field_definition: {
							name: "bic"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "routing_code",
						field_definition: {
							name: "routing_code"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "currency",
						field_definition: {
							name: "currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "bank_account_type",
						field_definition: {
							name: "bank_account_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "bank_country",
						field_definition: {
							name: "bank_country"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "company_name",
						field_definition: {
							name: "company_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "entity_type",
						field_definition: {
							name: "entity_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "country",
						field_definition: {
							name: "country"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "address",
						field_definition: {
							name: "address"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "account_status",
						field_definition: {
							name: "account_status"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "bank_address",
						field_definition: {
							name: "bank_address"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "iban",
						field_definition: {
							name: "iban"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "bic",
						field_definition: {
							name: "bic"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "routing_code",
						field_definition: {
							name: "routing_code"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "currency",
						field_definition: {
							name: "currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "bank_account_type",
						field_definition: {
							name: "bank_account_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "bank_country",
						field_definition: {
							name: "bank_country"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "company_name",
						field_definition: {
							name: "company_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "entity_type",
						field_definition: {
							name: "entity_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "country",
						field_definition: {
							name: "country"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "address",
						field_definition: {
							name: "address"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CorporatePaymentsBeneficiaryCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CorporatePaymentsBeneficiaryExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsBeneficiaryExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsBeneficiaryExactMatch = (function($class, _ScopeCollection) {

	var CorporatePaymentsBeneficiaryExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function CorporatePaymentsBeneficiaryExactMatch() {
            CitiMobileChallengeSdk.collections.CorporatePaymentsBeneficiaryExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CorporatePaymentsBeneficiary,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/corporate_payments_beneficiaries.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CorporatePayments",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "account_status",
	              field_definition: {
	                name: "account_status"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "bank_address",
	              field_definition: {
	                name: "bank_address"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "iban",
	              field_definition: {
	                name: "iban"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "bic",
	              field_definition: {
	                name: "bic"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "routing_code",
	              field_definition: {
	                name: "routing_code"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "currency",
	              field_definition: {
	                name: "currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "bank_account_type",
	              field_definition: {
	                name: "bank_account_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "bank_country",
	              field_definition: {
	                name: "bank_country"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "company_name",
	              field_definition: {
	                name: "company_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "entity_type",
	              field_definition: {
	                name: "entity_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "country",
	              field_definition: {
	                name: "country"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "address",
	              field_definition: {
	                name: "address"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "account_status",
	              field_definition: {
	                name: "account_status"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "bank_address",
	              field_definition: {
	                name: "bank_address"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "iban",
	              field_definition: {
	                name: "iban"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "bic",
	              field_definition: {
	                name: "bic"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "routing_code",
	              field_definition: {
	                name: "routing_code"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "currency",
	              field_definition: {
	                name: "currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "bank_account_type",
	              field_definition: {
	                name: "bank_account_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "bank_country",
	              field_definition: {
	                name: "bank_country"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "company_name",
	              field_definition: {
	                name: "company_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "entity_type",
	              field_definition: {
	                name: "entity_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "country",
	              field_definition: {
	                name: "country"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "address",
	              field_definition: {
	                name: "address"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CorporatePaymentsBeneficiaryExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CorporatePaymentsCrossBorderFxBookingAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsCrossBorderFxBookingAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxBookingAll = (function($class, _ScopeCollection) {

	var CorporatePaymentsCrossBorderFxBookingAll = $class({

		extends: _ScopeCollection,

        _constructor: function CorporatePaymentsCrossBorderFxBookingAll() {
            CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxBookingAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxBooking,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/corporate_payments_cross_border_fx_bookings.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CorporatePayments",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "rate_reference",
	              field_definition: {
	                name: "rate_reference"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "accepted_by",
	              field_definition: {
	                name: "accepted_by"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "accepted_on",
	              field_definition: {
	                name: "accepted_on"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "rate_reference",
	              field_definition: {
	                name: "rate_reference"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "accepted_by",
	              field_definition: {
	                name: "accepted_by"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "accepted_on",
	              field_definition: {
	                name: "accepted_on"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CorporatePaymentsCrossBorderFxBookingAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CorporatePaymentsCrossBorderFxBookingCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsCrossBorderFxBookingCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxBookingCount = (function($class, _AggregateCollection) {

	var CorporatePaymentsCrossBorderFxBookingCount = $class({
		extends: _AggregateCollection,

		_constructor: function CorporatePaymentsCrossBorderFxBookingCount() {
			CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxBookingCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxBooking,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/corporate_payments_cross_border_fx_bookings.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CorporatePayments",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "rate_reference",
						field_definition: {
							name: "rate_reference"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "accepted_by",
						field_definition: {
							name: "accepted_by"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "accepted_on",
						field_definition: {
							name: "accepted_on"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "rate_reference",
						field_definition: {
							name: "rate_reference"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "accepted_by",
						field_definition: {
							name: "accepted_by"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "accepted_on",
						field_definition: {
							name: "accepted_on"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CorporatePaymentsCrossBorderFxBookingCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CorporatePaymentsCrossBorderFxBookingCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsCrossBorderFxBookingCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxBookingCountExactMatch = (function($class, _AggregateCollection) {

	var CorporatePaymentsCrossBorderFxBookingCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function CorporatePaymentsCrossBorderFxBookingCountExactMatch() {
			CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxBookingCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxBooking,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/corporate_payments_cross_border_fx_bookings.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CorporatePayments",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "rate_reference",
						field_definition: {
							name: "rate_reference"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "accepted_by",
						field_definition: {
							name: "accepted_by"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "accepted_on",
						field_definition: {
							name: "accepted_on"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "rate_reference",
						field_definition: {
							name: "rate_reference"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "accepted_by",
						field_definition: {
							name: "accepted_by"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "accepted_on",
						field_definition: {
							name: "accepted_on"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CorporatePaymentsCrossBorderFxBookingCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CorporatePaymentsCrossBorderFxBookingExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsCrossBorderFxBookingExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxBookingExactMatch = (function($class, _ScopeCollection) {

	var CorporatePaymentsCrossBorderFxBookingExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function CorporatePaymentsCrossBorderFxBookingExactMatch() {
            CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxBookingExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxBooking,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/corporate_payments_cross_border_fx_bookings.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CorporatePayments",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "rate_reference",
	              field_definition: {
	                name: "rate_reference"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "accepted_by",
	              field_definition: {
	                name: "accepted_by"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "accepted_on",
	              field_definition: {
	                name: "accepted_on"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "rate_reference",
	              field_definition: {
	                name: "rate_reference"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "accepted_by",
	              field_definition: {
	                name: "accepted_by"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "accepted_on",
	              field_definition: {
	                name: "accepted_on"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CorporatePaymentsCrossBorderFxBookingExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CorporatePaymentsCrossBorderFxPaymentAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsCrossBorderFxPaymentAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxPaymentAll = (function($class, _ScopeCollection) {

	var CorporatePaymentsCrossBorderFxPaymentAll = $class({

		extends: _ScopeCollection,

        _constructor: function CorporatePaymentsCrossBorderFxPaymentAll() {
            CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxPaymentAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxPayment,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/corporate_payments_cross_border_fx_payments.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CorporatePayments",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "created_on",
	              field_definition: {
	                name: "created_on"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "created_by",
	              field_definition: {
	                name: "created_by"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payment_details",
	              field_definition: {
	                name: "payment_details"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "beneficiary_address",
	              field_definition: {
	                name: "beneficiary_address"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "beneficiary_name",
	              field_definition: {
	                name: "beneficiary_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "beneficiary_account",
	              field_definition: {
	                name: "beneficiary_account"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "beneficiary_bank",
	              field_definition: {
	                name: "beneficiary_bank"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "debtor_address",
	              field_definition: {
	                name: "debtor_address"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "debtor_account",
	              field_definition: {
	                name: "debtor_account"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "debtor_name",
	              field_definition: {
	                name: "debtor_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "value_date",
	              field_definition: {
	                name: "value_date"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "rate_reference",
	              field_definition: {
	                name: "rate_reference"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "to_amount",
	              field_definition: {
	                name: "to_amount"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "to_currency",
	              field_definition: {
	                name: "to_currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "from_amount",
	              field_definition: {
	                name: "from_amount"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "from_currency",
	              field_definition: {
	                name: "from_currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "citi_ref",
	              field_definition: {
	                name: "citi_ref"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "customer_txn_ref",
	              field_definition: {
	                name: "customer_txn_ref"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "status",
	              field_definition: {
	                name: "status"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "created_on",
	              field_definition: {
	                name: "created_on"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "created_by",
	              field_definition: {
	                name: "created_by"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_details",
	              field_definition: {
	                name: "payment_details"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "beneficiary_address",
	              field_definition: {
	                name: "beneficiary_address"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "beneficiary_name",
	              field_definition: {
	                name: "beneficiary_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "beneficiary_account",
	              field_definition: {
	                name: "beneficiary_account"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "beneficiary_bank",
	              field_definition: {
	                name: "beneficiary_bank"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "debtor_address",
	              field_definition: {
	                name: "debtor_address"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "debtor_account",
	              field_definition: {
	                name: "debtor_account"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "debtor_name",
	              field_definition: {
	                name: "debtor_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "value_date",
	              field_definition: {
	                name: "value_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "rate_reference",
	              field_definition: {
	                name: "rate_reference"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "to_amount",
	              field_definition: {
	                name: "to_amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "to_currency",
	              field_definition: {
	                name: "to_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "from_amount",
	              field_definition: {
	                name: "from_amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "from_currency",
	              field_definition: {
	                name: "from_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "citi_ref",
	              field_definition: {
	                name: "citi_ref"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "customer_txn_ref",
	              field_definition: {
	                name: "customer_txn_ref"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "status",
	              field_definition: {
	                name: "status"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CorporatePaymentsCrossBorderFxPaymentAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CorporatePaymentsCrossBorderFxPaymentCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsCrossBorderFxPaymentCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxPaymentCount = (function($class, _AggregateCollection) {

	var CorporatePaymentsCrossBorderFxPaymentCount = $class({
		extends: _AggregateCollection,

		_constructor: function CorporatePaymentsCrossBorderFxPaymentCount() {
			CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxPaymentCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxPayment,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/corporate_payments_cross_border_fx_payments.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CorporatePayments",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "created_on",
						field_definition: {
							name: "created_on"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "created_by",
						field_definition: {
							name: "created_by"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payment_details",
						field_definition: {
							name: "payment_details"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "beneficiary_address",
						field_definition: {
							name: "beneficiary_address"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "beneficiary_name",
						field_definition: {
							name: "beneficiary_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "beneficiary_account",
						field_definition: {
							name: "beneficiary_account"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "beneficiary_bank",
						field_definition: {
							name: "beneficiary_bank"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "debtor_address",
						field_definition: {
							name: "debtor_address"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "debtor_account",
						field_definition: {
							name: "debtor_account"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "debtor_name",
						field_definition: {
							name: "debtor_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "value_date",
						field_definition: {
							name: "value_date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "rate_reference",
						field_definition: {
							name: "rate_reference"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "to_amount",
						field_definition: {
							name: "to_amount"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "to_currency",
						field_definition: {
							name: "to_currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "from_amount",
						field_definition: {
							name: "from_amount"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "from_currency",
						field_definition: {
							name: "from_currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "citi_ref",
						field_definition: {
							name: "citi_ref"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "customer_txn_ref",
						field_definition: {
							name: "customer_txn_ref"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "status",
						field_definition: {
							name: "status"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "created_on",
						field_definition: {
							name: "created_on"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "created_by",
						field_definition: {
							name: "created_by"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payment_details",
						field_definition: {
							name: "payment_details"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "beneficiary_address",
						field_definition: {
							name: "beneficiary_address"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "beneficiary_name",
						field_definition: {
							name: "beneficiary_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "beneficiary_account",
						field_definition: {
							name: "beneficiary_account"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "beneficiary_bank",
						field_definition: {
							name: "beneficiary_bank"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "debtor_address",
						field_definition: {
							name: "debtor_address"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "debtor_account",
						field_definition: {
							name: "debtor_account"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "debtor_name",
						field_definition: {
							name: "debtor_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "value_date",
						field_definition: {
							name: "value_date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "rate_reference",
						field_definition: {
							name: "rate_reference"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "to_amount",
						field_definition: {
							name: "to_amount"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "to_currency",
						field_definition: {
							name: "to_currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "from_amount",
						field_definition: {
							name: "from_amount"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "from_currency",
						field_definition: {
							name: "from_currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "citi_ref",
						field_definition: {
							name: "citi_ref"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "customer_txn_ref",
						field_definition: {
							name: "customer_txn_ref"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "status",
						field_definition: {
							name: "status"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CorporatePaymentsCrossBorderFxPaymentCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CorporatePaymentsCrossBorderFxPaymentCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsCrossBorderFxPaymentCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxPaymentCountExactMatch = (function($class, _AggregateCollection) {

	var CorporatePaymentsCrossBorderFxPaymentCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function CorporatePaymentsCrossBorderFxPaymentCountExactMatch() {
			CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxPaymentCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxPayment,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/corporate_payments_cross_border_fx_payments.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CorporatePayments",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "created_on",
						field_definition: {
							name: "created_on"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "created_by",
						field_definition: {
							name: "created_by"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payment_details",
						field_definition: {
							name: "payment_details"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "beneficiary_address",
						field_definition: {
							name: "beneficiary_address"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "beneficiary_name",
						field_definition: {
							name: "beneficiary_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "beneficiary_account",
						field_definition: {
							name: "beneficiary_account"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "beneficiary_bank",
						field_definition: {
							name: "beneficiary_bank"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "debtor_address",
						field_definition: {
							name: "debtor_address"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "debtor_account",
						field_definition: {
							name: "debtor_account"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "debtor_name",
						field_definition: {
							name: "debtor_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "value_date",
						field_definition: {
							name: "value_date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "rate_reference",
						field_definition: {
							name: "rate_reference"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "to_amount",
						field_definition: {
							name: "to_amount"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "to_currency",
						field_definition: {
							name: "to_currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "from_amount",
						field_definition: {
							name: "from_amount"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "from_currency",
						field_definition: {
							name: "from_currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "citi_ref",
						field_definition: {
							name: "citi_ref"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "customer_txn_ref",
						field_definition: {
							name: "customer_txn_ref"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "status",
						field_definition: {
							name: "status"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "created_on",
						field_definition: {
							name: "created_on"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "created_by",
						field_definition: {
							name: "created_by"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payment_details",
						field_definition: {
							name: "payment_details"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "beneficiary_address",
						field_definition: {
							name: "beneficiary_address"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "beneficiary_name",
						field_definition: {
							name: "beneficiary_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "beneficiary_account",
						field_definition: {
							name: "beneficiary_account"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "beneficiary_bank",
						field_definition: {
							name: "beneficiary_bank"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "debtor_address",
						field_definition: {
							name: "debtor_address"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "debtor_account",
						field_definition: {
							name: "debtor_account"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "debtor_name",
						field_definition: {
							name: "debtor_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "value_date",
						field_definition: {
							name: "value_date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "rate_reference",
						field_definition: {
							name: "rate_reference"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "to_amount",
						field_definition: {
							name: "to_amount"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "to_currency",
						field_definition: {
							name: "to_currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "from_amount",
						field_definition: {
							name: "from_amount"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "from_currency",
						field_definition: {
							name: "from_currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "citi_ref",
						field_definition: {
							name: "citi_ref"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "customer_txn_ref",
						field_definition: {
							name: "customer_txn_ref"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "status",
						field_definition: {
							name: "status"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CorporatePaymentsCrossBorderFxPaymentCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CorporatePaymentsCrossBorderFxPaymentExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsCrossBorderFxPaymentExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxPaymentExactMatch = (function($class, _ScopeCollection) {

	var CorporatePaymentsCrossBorderFxPaymentExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function CorporatePaymentsCrossBorderFxPaymentExactMatch() {
            CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxPaymentExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxPayment,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/corporate_payments_cross_border_fx_payments.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CorporatePayments",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "created_on",
	              field_definition: {
	                name: "created_on"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "created_by",
	              field_definition: {
	                name: "created_by"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payment_details",
	              field_definition: {
	                name: "payment_details"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "beneficiary_address",
	              field_definition: {
	                name: "beneficiary_address"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "beneficiary_name",
	              field_definition: {
	                name: "beneficiary_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "beneficiary_account",
	              field_definition: {
	                name: "beneficiary_account"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "beneficiary_bank",
	              field_definition: {
	                name: "beneficiary_bank"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "debtor_address",
	              field_definition: {
	                name: "debtor_address"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "debtor_account",
	              field_definition: {
	                name: "debtor_account"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "debtor_name",
	              field_definition: {
	                name: "debtor_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "value_date",
	              field_definition: {
	                name: "value_date"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "rate_reference",
	              field_definition: {
	                name: "rate_reference"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "to_amount",
	              field_definition: {
	                name: "to_amount"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "to_currency",
	              field_definition: {
	                name: "to_currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "from_amount",
	              field_definition: {
	                name: "from_amount"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "from_currency",
	              field_definition: {
	                name: "from_currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "citi_ref",
	              field_definition: {
	                name: "citi_ref"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "customer_txn_ref",
	              field_definition: {
	                name: "customer_txn_ref"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "status",
	              field_definition: {
	                name: "status"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "created_on",
	              field_definition: {
	                name: "created_on"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "created_by",
	              field_definition: {
	                name: "created_by"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_details",
	              field_definition: {
	                name: "payment_details"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "beneficiary_address",
	              field_definition: {
	                name: "beneficiary_address"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "beneficiary_name",
	              field_definition: {
	                name: "beneficiary_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "beneficiary_account",
	              field_definition: {
	                name: "beneficiary_account"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "beneficiary_bank",
	              field_definition: {
	                name: "beneficiary_bank"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "debtor_address",
	              field_definition: {
	                name: "debtor_address"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "debtor_account",
	              field_definition: {
	                name: "debtor_account"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "debtor_name",
	              field_definition: {
	                name: "debtor_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "value_date",
	              field_definition: {
	                name: "value_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "rate_reference",
	              field_definition: {
	                name: "rate_reference"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "to_amount",
	              field_definition: {
	                name: "to_amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "to_currency",
	              field_definition: {
	                name: "to_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "from_amount",
	              field_definition: {
	                name: "from_amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "from_currency",
	              field_definition: {
	                name: "from_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "citi_ref",
	              field_definition: {
	                name: "citi_ref"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "customer_txn_ref",
	              field_definition: {
	                name: "customer_txn_ref"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "status",
	              field_definition: {
	                name: "status"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CorporatePaymentsCrossBorderFxPaymentExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CorporatePaymentsCrossBorderFxPaymentFxPaymentsis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsCrossBorderFxPaymentFxPayments
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxPaymentFxPayments = (function($class, _ScopeCollection) {

	var CorporatePaymentsCrossBorderFxPaymentFxPayments = $class({

		extends: _ScopeCollection,

        _constructor: function CorporatePaymentsCrossBorderFxPaymentFxPayments() {
            CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxPaymentFxPayments._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxPayment,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/corporate_payments_cross_border_fx_payments.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "fx_payments"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
          {
            fieldName: "citi_ref",
            paramName: "citi_ref",
          },
          
          {
            fieldName: "customer_txn_ref",
            paramName: "customer_txn_ref",
          },
          
          {
            fieldName: "to_currency",
            paramName: "to_currency",
          },
          
          {
            fieldName: "beneficiary_name",
            paramName: "beneficiary_name",
          },
          
          {
            fieldName: "value_date",
            paramName: "value_date",
          },
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CorporatePayments",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "created_on",
	              field_definition: {
	                name: "created_on"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "created_on",
	              field_definition: {
	                name: "created_on"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "value_date",
	              field_definition: {
	                name: "value_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "to_currency",
	              field_definition: {
	                name: "to_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "to_amount",
	              field_definition: {
	                name: "to_amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "status",
	              field_definition: {
	                name: "status"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "rate_reference",
	              field_definition: {
	                name: "rate_reference"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_details",
	              field_definition: {
	                name: "payment_details"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "from_currency",
	              field_definition: {
	                name: "from_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "from_amount",
	              field_definition: {
	                name: "from_amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "debtor_name",
	              field_definition: {
	                name: "debtor_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "debtor_address",
	              field_definition: {
	                name: "debtor_address"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "debtor_account",
	              field_definition: {
	                name: "debtor_account"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "customer_txn_ref",
	              field_definition: {
	                name: "customer_txn_ref"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "created_by",
	              field_definition: {
	                name: "created_by"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "citi_ref",
	              field_definition: {
	                name: "citi_ref"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "beneficiary_name",
	              field_definition: {
	                name: "beneficiary_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "beneficiary_bank",
	              field_definition: {
	                name: "beneficiary_bank"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "beneficiary_address",
	              field_definition: {
	                name: "beneficiary_address"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "beneficiary_account",
	              field_definition: {
	                name: "beneficiary_account"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "/crossborder/fx_payments",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "fx_payments",
					limit : "",
          offset : "",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	            {
	              name: "citi_ref",
	              value: "{{query.query.citi_ref}}"
	            },
	          
	            {
	              name: "customer_txn_ref",
	              value: "{{query.query.customer_txn_ref}}"
	            },
	          
	            {
	              name: "to_currency",
	              value: "{{query.query.to_currency}}"
	            },
	          
	            {
	              name: "beneficiary_name",
	              value: "{{query.query.beneficiary_name}}"
	            },
	          
	            {
	              name: "value_date",
	              value: "{{query.query.value_date}}"
	            },
	          
	        ]
				}
				

	});

	return CorporatePaymentsCrossBorderFxPaymentFxPayments;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CorporatePaymentsCrossBorderFxQuoteAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsCrossBorderFxQuoteAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxQuoteAll = (function($class, _ScopeCollection) {

	var CorporatePaymentsCrossBorderFxQuoteAll = $class({

		extends: _ScopeCollection,

        _constructor: function CorporatePaymentsCrossBorderFxQuoteAll() {
            CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxQuoteAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxQuote,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/corporate_payments_cross_border_fx_quotes.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CorporatePayments",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "from_amount",
	              field_definition: {
	                name: "from_amount"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "to_currency",
	              field_definition: {
	                name: "to_currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "from_currency",
	              field_definition: {
	                name: "from_currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "requested_by",
	              field_definition: {
	                name: "requested_by"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "value_date",
	              field_definition: {
	                name: "value_date"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "rate_expiry",
	              field_definition: {
	                name: "rate_expiry"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "to_amount",
	              field_definition: {
	                name: "to_amount"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "requested_on",
	              field_definition: {
	                name: "requested_on"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "rate_reference",
	              field_definition: {
	                name: "rate_reference"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "from_amount",
	              field_definition: {
	                name: "from_amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "to_currency",
	              field_definition: {
	                name: "to_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "from_currency",
	              field_definition: {
	                name: "from_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "requested_by",
	              field_definition: {
	                name: "requested_by"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "value_date",
	              field_definition: {
	                name: "value_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "rate_expiry",
	              field_definition: {
	                name: "rate_expiry"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "to_amount",
	              field_definition: {
	                name: "to_amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "requested_on",
	              field_definition: {
	                name: "requested_on"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "rate_reference",
	              field_definition: {
	                name: "rate_reference"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CorporatePaymentsCrossBorderFxQuoteAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CorporatePaymentsCrossBorderFxQuoteCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsCrossBorderFxQuoteCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxQuoteCount = (function($class, _AggregateCollection) {

	var CorporatePaymentsCrossBorderFxQuoteCount = $class({
		extends: _AggregateCollection,

		_constructor: function CorporatePaymentsCrossBorderFxQuoteCount() {
			CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxQuoteCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxQuote,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/corporate_payments_cross_border_fx_quotes.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CorporatePayments",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "from_amount",
						field_definition: {
							name: "from_amount"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "to_currency",
						field_definition: {
							name: "to_currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "from_currency",
						field_definition: {
							name: "from_currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "requested_by",
						field_definition: {
							name: "requested_by"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "value_date",
						field_definition: {
							name: "value_date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "rate_expiry",
						field_definition: {
							name: "rate_expiry"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "to_amount",
						field_definition: {
							name: "to_amount"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "rate_reference",
						field_definition: {
							name: "rate_reference"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "requested_on",
						field_definition: {
							name: "requested_on"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "from_amount",
						field_definition: {
							name: "from_amount"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "to_currency",
						field_definition: {
							name: "to_currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "from_currency",
						field_definition: {
							name: "from_currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "requested_by",
						field_definition: {
							name: "requested_by"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "value_date",
						field_definition: {
							name: "value_date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "rate_expiry",
						field_definition: {
							name: "rate_expiry"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "to_amount",
						field_definition: {
							name: "to_amount"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "rate_reference",
						field_definition: {
							name: "rate_reference"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "requested_on",
						field_definition: {
							name: "requested_on"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CorporatePaymentsCrossBorderFxQuoteCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CorporatePaymentsCrossBorderFxQuoteCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsCrossBorderFxQuoteCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxQuoteCountExactMatch = (function($class, _AggregateCollection) {

	var CorporatePaymentsCrossBorderFxQuoteCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function CorporatePaymentsCrossBorderFxQuoteCountExactMatch() {
			CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxQuoteCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxQuote,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/corporate_payments_cross_border_fx_quotes.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CorporatePayments",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "from_amount",
						field_definition: {
							name: "from_amount"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "to_currency",
						field_definition: {
							name: "to_currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "from_currency",
						field_definition: {
							name: "from_currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "requested_by",
						field_definition: {
							name: "requested_by"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "value_date",
						field_definition: {
							name: "value_date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "rate_expiry",
						field_definition: {
							name: "rate_expiry"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "to_amount",
						field_definition: {
							name: "to_amount"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "rate_reference",
						field_definition: {
							name: "rate_reference"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "requested_on",
						field_definition: {
							name: "requested_on"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "from_amount",
						field_definition: {
							name: "from_amount"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "to_currency",
						field_definition: {
							name: "to_currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "from_currency",
						field_definition: {
							name: "from_currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "requested_by",
						field_definition: {
							name: "requested_by"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "value_date",
						field_definition: {
							name: "value_date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "rate_expiry",
						field_definition: {
							name: "rate_expiry"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "to_amount",
						field_definition: {
							name: "to_amount"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "rate_reference",
						field_definition: {
							name: "rate_reference"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "requested_on",
						field_definition: {
							name: "requested_on"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CorporatePaymentsCrossBorderFxQuoteCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CorporatePaymentsCrossBorderFxQuoteExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsCrossBorderFxQuoteExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxQuoteExactMatch = (function($class, _ScopeCollection) {

	var CorporatePaymentsCrossBorderFxQuoteExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function CorporatePaymentsCrossBorderFxQuoteExactMatch() {
            CitiMobileChallengeSdk.collections.CorporatePaymentsCrossBorderFxQuoteExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CorporatePaymentsCrossBorderFxQuote,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/corporate_payments_cross_border_fx_quotes.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CorporatePayments",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "from_amount",
	              field_definition: {
	                name: "from_amount"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "to_currency",
	              field_definition: {
	                name: "to_currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "from_currency",
	              field_definition: {
	                name: "from_currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "requested_by",
	              field_definition: {
	                name: "requested_by"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "value_date",
	              field_definition: {
	                name: "value_date"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "rate_expiry",
	              field_definition: {
	                name: "rate_expiry"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "to_amount",
	              field_definition: {
	                name: "to_amount"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "rate_reference",
	              field_definition: {
	                name: "rate_reference"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "requested_on",
	              field_definition: {
	                name: "requested_on"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "from_amount",
	              field_definition: {
	                name: "from_amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "to_currency",
	              field_definition: {
	                name: "to_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "from_currency",
	              field_definition: {
	                name: "from_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "requested_by",
	              field_definition: {
	                name: "requested_by"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "value_date",
	              field_definition: {
	                name: "value_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "rate_expiry",
	              field_definition: {
	                name: "rate_expiry"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "to_amount",
	              field_definition: {
	                name: "to_amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "rate_reference",
	              field_definition: {
	                name: "rate_reference"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "requested_on",
	              field_definition: {
	                name: "requested_on"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CorporatePaymentsCrossBorderFxQuoteExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CorporatePaymentsLoginAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsLoginAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsLoginAll = (function($class, _ScopeCollection) {

	var CorporatePaymentsLoginAll = $class({

		extends: _ScopeCollection,

        _constructor: function CorporatePaymentsLoginAll() {
            CitiMobileChallengeSdk.collections.CorporatePaymentsLoginAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CorporatePaymentsLogin,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/corporate_payments_logins.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CorporatePayments",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "password",
	              field_definition: {
	                name: "password"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "username",
	              field_definition: {
	                name: "username"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "token",
	              field_definition: {
	                name: "token"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "password",
	              field_definition: {
	                name: "password"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "username",
	              field_definition: {
	                name: "username"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "token",
	              field_definition: {
	                name: "token"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CorporatePaymentsLoginAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CorporatePaymentsLoginCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsLoginCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsLoginCount = (function($class, _AggregateCollection) {

	var CorporatePaymentsLoginCount = $class({
		extends: _AggregateCollection,

		_constructor: function CorporatePaymentsLoginCount() {
			CitiMobileChallengeSdk.collections.CorporatePaymentsLoginCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CorporatePaymentsLogin,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/corporate_payments_logins.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CorporatePayments",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "password",
						field_definition: {
							name: "password"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "username",
						field_definition: {
							name: "username"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "token",
						field_definition: {
							name: "token"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "password",
						field_definition: {
							name: "password"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "username",
						field_definition: {
							name: "username"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "token",
						field_definition: {
							name: "token"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CorporatePaymentsLoginCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CorporatePaymentsLoginCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsLoginCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsLoginCountExactMatch = (function($class, _AggregateCollection) {

	var CorporatePaymentsLoginCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function CorporatePaymentsLoginCountExactMatch() {
			CitiMobileChallengeSdk.collections.CorporatePaymentsLoginCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CorporatePaymentsLogin,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/corporate_payments_logins.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CorporatePayments",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "password",
						field_definition: {
							name: "password"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "username",
						field_definition: {
							name: "username"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "token",
						field_definition: {
							name: "token"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "password",
						field_definition: {
							name: "password"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "username",
						field_definition: {
							name: "username"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "token",
						field_definition: {
							name: "token"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CorporatePaymentsLoginCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CorporatePaymentsLoginExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsLoginExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsLoginExactMatch = (function($class, _ScopeCollection) {

	var CorporatePaymentsLoginExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function CorporatePaymentsLoginExactMatch() {
            CitiMobileChallengeSdk.collections.CorporatePaymentsLoginExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CorporatePaymentsLogin,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/corporate_payments_logins.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CorporatePayments",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "password",
	              field_definition: {
	                name: "password"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "username",
	              field_definition: {
	                name: "username"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "token",
	              field_definition: {
	                name: "token"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "password",
	              field_definition: {
	                name: "password"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "username",
	              field_definition: {
	                name: "username"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "token",
	              field_definition: {
	                name: "token"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CorporatePaymentsLoginExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CorporatePaymentsPaymentAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsPaymentAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsPaymentAll = (function($class, _ScopeCollection) {

	var CorporatePaymentsPaymentAll = $class({

		extends: _ScopeCollection,

        _constructor: function CorporatePaymentsPaymentAll() {
            CitiMobileChallengeSdk.collections.CorporatePaymentsPaymentAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CorporatePaymentsPayment,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/corporate_payments_payments.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CorporatePayments",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "status",
	              field_definition: {
	                name: "status"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_details",
	              field_definition: {
	                name: "payment_details"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "customer_reference_number",
	              field_definition: {
	                name: "customer_reference_number"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "created_on",
	              field_definition: {
	                name: "created_on"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "created_by",
	              field_definition: {
	                name: "created_by"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "debit_account_number",
	              field_definition: {
	                name: "debit_account_number"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "debit_account_name",
	              field_definition: {
	                name: "debit_account_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "beneficiary_id",
	              field_definition: {
	                name: "beneficiary_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_type",
	              field_definition: {
	                name: "payment_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_amount",
	              field_definition: {
	                name: "payment_amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_currency",
	              field_definition: {
	                name: "payment_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_method",
	              field_definition: {
	                name: "payment_method"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "email",
	              field_definition: {
	                name: "email"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "value_date",
	              field_definition: {
	                name: "value_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "transaction_reference_number",
	              field_definition: {
	                name: "transaction_reference_number"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "branch_name",
	              field_definition: {
	                name: "branch_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "/payments",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "",
          offset : "",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CorporatePaymentsPaymentAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
CorporatePaymentsPaymentCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsPaymentCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsPaymentCount = (function($class, _AggregateCollection) {

	var CorporatePaymentsPaymentCount = $class({
		extends: _AggregateCollection,

		_constructor: function CorporatePaymentsPaymentCount() {
			CitiMobileChallengeSdk.collections.CorporatePaymentsPaymentCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CorporatePaymentsPayment,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/corporate_payments_payments.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CorporatePayments",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "status",
						field_definition: {
							name: "status"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payment_details",
						field_definition: {
							name: "payment_details"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "customer_reference_number",
						field_definition: {
							name: "customer_reference_number"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "created_on",
						field_definition: {
							name: "created_on"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "created_by",
						field_definition: {
							name: "created_by"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "debit_account_number",
						field_definition: {
							name: "debit_account_number"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "debit_account_name",
						field_definition: {
							name: "debit_account_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "beneficiary_id",
						field_definition: {
							name: "beneficiary_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payment_type",
						field_definition: {
							name: "payment_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payment_amount",
						field_definition: {
							name: "payment_amount"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payment_currency",
						field_definition: {
							name: "payment_currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payment_method",
						field_definition: {
							name: "payment_method"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "email",
						field_definition: {
							name: "email"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "value_date",
						field_definition: {
							name: "value_date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "transaction_reference_number",
						field_definition: {
							name: "transaction_reference_number"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "branch_name",
						field_definition: {
							name: "branch_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payment_details",
						field_definition: {
							name: "payment_details"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "customer_reference_number",
						field_definition: {
							name: "customer_reference_number"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "created_on",
						field_definition: {
							name: "created_on"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "created_by",
						field_definition: {
							name: "created_by"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "debit_account_number",
						field_definition: {
							name: "debit_account_number"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "debit_account_name",
						field_definition: {
							name: "debit_account_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "beneficiary_id",
						field_definition: {
							name: "beneficiary_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payment_type",
						field_definition: {
							name: "payment_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payment_amount",
						field_definition: {
							name: "payment_amount"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "status",
						field_definition: {
							name: "status"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payment_currency",
						field_definition: {
							name: "payment_currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payment_method",
						field_definition: {
							name: "payment_method"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "email",
						field_definition: {
							name: "email"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "value_date",
						field_definition: {
							name: "value_date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "transaction_reference_number",
						field_definition: {
							name: "transaction_reference_number"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "branch_name",
						field_definition: {
							name: "branch_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CorporatePaymentsPaymentCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CorporatePaymentsPaymentCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsPaymentCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsPaymentCountExactMatch = (function($class, _AggregateCollection) {

	var CorporatePaymentsPaymentCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function CorporatePaymentsPaymentCountExactMatch() {
			CitiMobileChallengeSdk.collections.CorporatePaymentsPaymentCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.CorporatePaymentsPayment,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/corporate_payments_payments.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "CorporatePayments",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "status",
						field_definition: {
							name: "status"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payment_details",
						field_definition: {
							name: "payment_details"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "customer_reference_number",
						field_definition: {
							name: "customer_reference_number"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "created_on",
						field_definition: {
							name: "created_on"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "created_by",
						field_definition: {
							name: "created_by"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "debit_account_number",
						field_definition: {
							name: "debit_account_number"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "debit_account_name",
						field_definition: {
							name: "debit_account_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "beneficiary_id",
						field_definition: {
							name: "beneficiary_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payment_type",
						field_definition: {
							name: "payment_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payment_amount",
						field_definition: {
							name: "payment_amount"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payment_currency",
						field_definition: {
							name: "payment_currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payment_method",
						field_definition: {
							name: "payment_method"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "email",
						field_definition: {
							name: "email"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "value_date",
						field_definition: {
							name: "value_date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "transaction_reference_number",
						field_definition: {
							name: "transaction_reference_number"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "branch_name",
						field_definition: {
							name: "branch_name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "status",
						field_definition: {
							name: "status"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payment_details",
						field_definition: {
							name: "payment_details"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "customer_reference_number",
						field_definition: {
							name: "customer_reference_number"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "created_on",
						field_definition: {
							name: "created_on"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "created_by",
						field_definition: {
							name: "created_by"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "debit_account_number",
						field_definition: {
							name: "debit_account_number"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "debit_account_name",
						field_definition: {
							name: "debit_account_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "beneficiary_id",
						field_definition: {
							name: "beneficiary_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payment_type",
						field_definition: {
							name: "payment_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payment_amount",
						field_definition: {
							name: "payment_amount"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payment_currency",
						field_definition: {
							name: "payment_currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payment_method",
						field_definition: {
							name: "payment_method"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "email",
						field_definition: {
							name: "email"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "value_date",
						field_definition: {
							name: "value_date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "transaction_reference_number",
						field_definition: {
							name: "transaction_reference_number"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "branch_name",
						field_definition: {
							name: "branch_name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return CorporatePaymentsPaymentCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
CorporatePaymentsPaymentExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class CorporatePaymentsPaymentExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.CorporatePaymentsPaymentExactMatch = (function($class, _ScopeCollection) {

	var CorporatePaymentsPaymentExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function CorporatePaymentsPaymentExactMatch() {
            CitiMobileChallengeSdk.collections.CorporatePaymentsPaymentExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.CorporatePaymentsPayment,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/corporate_payments_payments.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "CorporatePayments",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "status",
	              field_definition: {
	                name: "status"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payment_details",
	              field_definition: {
	                name: "payment_details"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "customer_reference_number",
	              field_definition: {
	                name: "customer_reference_number"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "created_on",
	              field_definition: {
	                name: "created_on"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "created_by",
	              field_definition: {
	                name: "created_by"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "debit_account_number",
	              field_definition: {
	                name: "debit_account_number"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "debit_account_name",
	              field_definition: {
	                name: "debit_account_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "beneficiary_id",
	              field_definition: {
	                name: "beneficiary_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payment_type",
	              field_definition: {
	                name: "payment_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payment_amount",
	              field_definition: {
	                name: "payment_amount"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payment_currency",
	              field_definition: {
	                name: "payment_currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payment_method",
	              field_definition: {
	                name: "payment_method"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "email",
	              field_definition: {
	                name: "email"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "value_date",
	              field_definition: {
	                name: "value_date"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "transaction_reference_number",
	              field_definition: {
	                name: "transaction_reference_number"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "branch_name",
	              field_definition: {
	                name: "branch_name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "status",
	              field_definition: {
	                name: "status"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_details",
	              field_definition: {
	                name: "payment_details"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "customer_reference_number",
	              field_definition: {
	                name: "customer_reference_number"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "created_on",
	              field_definition: {
	                name: "created_on"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "created_by",
	              field_definition: {
	                name: "created_by"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "debit_account_number",
	              field_definition: {
	                name: "debit_account_number"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "debit_account_name",
	              field_definition: {
	                name: "debit_account_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "beneficiary_id",
	              field_definition: {
	                name: "beneficiary_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_type",
	              field_definition: {
	                name: "payment_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_amount",
	              field_definition: {
	                name: "payment_amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_currency",
	              field_definition: {
	                name: "payment_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_method",
	              field_definition: {
	                name: "payment_method"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "email",
	              field_definition: {
	                name: "email"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "value_date",
	              field_definition: {
	                name: "value_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "transaction_reference_number",
	              field_definition: {
	                name: "transaction_reference_number"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "branch_name",
	              field_definition: {
	                name: "branch_name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return CorporatePaymentsPaymentExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingAccountAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingAccountAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingAccountAll = (function($class, _ScopeCollection) {

	var RetailBankingAccountAll = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingAccountAll() {
            CitiMobileChallengeSdk.collections.RetailBankingAccountAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingAccount,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_accounts.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "txn_exist",
	              field_definition: {
	                name: "txn_exist"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "msgs",
	              field_definition: {
	                name: "msgs"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "account_status",
	              field_definition: {
	                name: "account_status"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "balances",
	              field_definition: {
	                name: "balances"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "offers_indicator",
	              field_definition: {
	                name: "offers_indicator"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "display_acct_no",
	              field_definition: {
	                name: "display_acct_no"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "details_exist",
	              field_definition: {
	                name: "details_exist"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "category_code",
	              field_definition: {
	                name: "category_code"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "is_destination_account",
	              field_definition: {
	                name: "is_destination_account"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "is_source_account",
	              field_definition: {
	                name: "is_source_account"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_type",
	              field_definition: {
	                name: "product_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_currency",
	              field_definition: {
	                name: "product_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "cops_indicator",
	              field_definition: {
	                name: "cops_indicator"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_description",
	              field_definition: {
	                name: "product_description"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "/accounts",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "",
          offset : "",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingAccountAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingAccountBalanceAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingAccountBalanceAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingAccountBalanceAll = (function($class, _ScopeCollection) {

	var RetailBankingAccountBalanceAll = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingAccountBalanceAll() {
            CitiMobileChallengeSdk.collections.RetailBankingAccountBalanceAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingAccountBalance,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_account_balances.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "value",
	              field_definition: {
	                name: "value"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "type",
	              field_definition: {
	                name: "balance_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "account_id",
	              field_definition: {
	                name: "account_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "/accounts/{{params.id}}/balances",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "",
          offset : "",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingAccountBalanceAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingAccountBalanceCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingAccountBalanceCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingAccountBalanceCount = (function($class, _AggregateCollection) {

	var RetailBankingAccountBalanceCount = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingAccountBalanceCount() {
			CitiMobileChallengeSdk.collections.RetailBankingAccountBalanceCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingAccountBalance,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_account_balances.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "value",
						field_definition: {
							name: "value"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "type",
						field_definition: {
							name: "balance_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "account_id",
						field_definition: {
							name: "account_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "value",
						field_definition: {
							name: "value"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "type",
						field_definition: {
							name: "balance_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "account_id",
						field_definition: {
							name: "account_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingAccountBalanceCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingAccountBalanceCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingAccountBalanceCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingAccountBalanceCountExactMatch = (function($class, _AggregateCollection) {

	var RetailBankingAccountBalanceCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingAccountBalanceCountExactMatch() {
			CitiMobileChallengeSdk.collections.RetailBankingAccountBalanceCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingAccountBalance,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_account_balances.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "value",
						field_definition: {
							name: "value"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "type",
						field_definition: {
							name: "balance_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "account_id",
						field_definition: {
							name: "account_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "value",
						field_definition: {
							name: "value"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "type",
						field_definition: {
							name: "balance_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "account_id",
						field_definition: {
							name: "account_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingAccountBalanceCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingAccountBalanceExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingAccountBalanceExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingAccountBalanceExactMatch = (function($class, _ScopeCollection) {

	var RetailBankingAccountBalanceExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingAccountBalanceExactMatch() {
            CitiMobileChallengeSdk.collections.RetailBankingAccountBalanceExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingAccountBalance,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_account_balances.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "value",
	              field_definition: {
	                name: "value"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "type",
	              field_definition: {
	                name: "balance_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "account_id",
	              field_definition: {
	                name: "account_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "value",
	              field_definition: {
	                name: "value"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "type",
	              field_definition: {
	                name: "balance_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "account_id",
	              field_definition: {
	                name: "account_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingAccountBalanceExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingAccountCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingAccountCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingAccountCount = (function($class, _AggregateCollection) {

	var RetailBankingAccountCount = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingAccountCount() {
			CitiMobileChallengeSdk.collections.RetailBankingAccountCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingAccount,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_accounts.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "txn_exist",
						field_definition: {
							name: "txn_exist"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "msgs",
						field_definition: {
							name: "msgs"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "account_status",
						field_definition: {
							name: "account_status"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "balances",
						field_definition: {
							name: "balances"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "offers_indicator",
						field_definition: {
							name: "offers_indicator"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "display_acct_no",
						field_definition: {
							name: "display_acct_no"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "details_exist",
						field_definition: {
							name: "details_exist"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "category_code",
						field_definition: {
							name: "category_code"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "is_destination_account",
						field_definition: {
							name: "is_destination_account"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "is_source_account",
						field_definition: {
							name: "is_source_account"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "product_type",
						field_definition: {
							name: "product_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "product_currency",
						field_definition: {
							name: "product_currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "cops_indicator",
						field_definition: {
							name: "cops_indicator"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "product_description",
						field_definition: {
							name: "product_description"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "txn_exist",
						field_definition: {
							name: "txn_exist"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "msgs",
						field_definition: {
							name: "msgs"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "account_status",
						field_definition: {
							name: "account_status"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "balances",
						field_definition: {
							name: "balances"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "offers_indicator",
						field_definition: {
							name: "offers_indicator"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "display_acct_no",
						field_definition: {
							name: "display_acct_no"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "details_exist",
						field_definition: {
							name: "details_exist"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "category_code",
						field_definition: {
							name: "category_code"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "is_destination_account",
						field_definition: {
							name: "is_destination_account"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "is_source_account",
						field_definition: {
							name: "is_source_account"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "product_type",
						field_definition: {
							name: "product_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "product_currency",
						field_definition: {
							name: "product_currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "cops_indicator",
						field_definition: {
							name: "cops_indicator"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "product_description",
						field_definition: {
							name: "product_description"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingAccountCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingAccountCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingAccountCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingAccountCountExactMatch = (function($class, _AggregateCollection) {

	var RetailBankingAccountCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingAccountCountExactMatch() {
			CitiMobileChallengeSdk.collections.RetailBankingAccountCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingAccount,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_accounts.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "txn_exist",
						field_definition: {
							name: "txn_exist"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "msgs",
						field_definition: {
							name: "msgs"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "account_status",
						field_definition: {
							name: "account_status"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "balances",
						field_definition: {
							name: "balances"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "offers_indicator",
						field_definition: {
							name: "offers_indicator"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "display_acct_no",
						field_definition: {
							name: "display_acct_no"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "details_exist",
						field_definition: {
							name: "details_exist"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "category_code",
						field_definition: {
							name: "category_code"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "is_destination_account",
						field_definition: {
							name: "is_destination_account"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "is_source_account",
						field_definition: {
							name: "is_source_account"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "product_type",
						field_definition: {
							name: "product_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "product_currency",
						field_definition: {
							name: "product_currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "cops_indicator",
						field_definition: {
							name: "cops_indicator"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "product_description",
						field_definition: {
							name: "product_description"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "txn_exist",
						field_definition: {
							name: "txn_exist"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "msgs",
						field_definition: {
							name: "msgs"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "account_status",
						field_definition: {
							name: "account_status"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "balances",
						field_definition: {
							name: "balances"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "offers_indicator",
						field_definition: {
							name: "offers_indicator"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "display_acct_no",
						field_definition: {
							name: "display_acct_no"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "details_exist",
						field_definition: {
							name: "details_exist"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "category_code",
						field_definition: {
							name: "category_code"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "is_destination_account",
						field_definition: {
							name: "is_destination_account"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "is_source_account",
						field_definition: {
							name: "is_source_account"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "product_type",
						field_definition: {
							name: "product_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "product_currency",
						field_definition: {
							name: "product_currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "cops_indicator",
						field_definition: {
							name: "cops_indicator"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "product_description",
						field_definition: {
							name: "product_description"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingAccountCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingAccountExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingAccountExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingAccountExactMatch = (function($class, _ScopeCollection) {

	var RetailBankingAccountExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingAccountExactMatch() {
            CitiMobileChallengeSdk.collections.RetailBankingAccountExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingAccount,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_accounts.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "txn_exist",
	              field_definition: {
	                name: "txn_exist"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "msgs",
	              field_definition: {
	                name: "msgs"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "account_status",
	              field_definition: {
	                name: "account_status"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "balances",
	              field_definition: {
	                name: "balances"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "offers_indicator",
	              field_definition: {
	                name: "offers_indicator"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "display_acct_no",
	              field_definition: {
	                name: "display_acct_no"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "details_exist",
	              field_definition: {
	                name: "details_exist"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "category_code",
	              field_definition: {
	                name: "category_code"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "is_destination_account",
	              field_definition: {
	                name: "is_destination_account"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "is_source_account",
	              field_definition: {
	                name: "is_source_account"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "product_type",
	              field_definition: {
	                name: "product_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "product_currency",
	              field_definition: {
	                name: "product_currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "cops_indicator",
	              field_definition: {
	                name: "cops_indicator"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "product_description",
	              field_definition: {
	                name: "product_description"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "txn_exist",
	              field_definition: {
	                name: "txn_exist"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "msgs",
	              field_definition: {
	                name: "msgs"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "account_status",
	              field_definition: {
	                name: "account_status"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "balances",
	              field_definition: {
	                name: "balances"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "offers_indicator",
	              field_definition: {
	                name: "offers_indicator"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "display_acct_no",
	              field_definition: {
	                name: "display_acct_no"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "details_exist",
	              field_definition: {
	                name: "details_exist"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "category_code",
	              field_definition: {
	                name: "category_code"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "is_destination_account",
	              field_definition: {
	                name: "is_destination_account"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "is_source_account",
	              field_definition: {
	                name: "is_source_account"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_type",
	              field_definition: {
	                name: "product_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_currency",
	              field_definition: {
	                name: "product_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "cops_indicator",
	              field_definition: {
	                name: "cops_indicator"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "product_description",
	              field_definition: {
	                name: "product_description"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingAccountExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingAccountFundTransferAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingAccountFundTransferAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingAccountFundTransferAll = (function($class, _ScopeCollection) {

	var RetailBankingAccountFundTransferAll = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingAccountFundTransferAll() {
            CitiMobileChallengeSdk.collections.RetailBankingAccountFundTransferAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingAccountFundTransfer,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_account_fund_transfers.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "reference_number",
	              field_definition: {
	                name: "reference_number"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "transaction_date",
	              field_definition: {
	                name: "transaction_date"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payment_type",
	              field_definition: {
	                name: "payment_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payee_type",
	              field_definition: {
	                name: "payee_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payee_id",
	              field_definition: {
	                name: "payee_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payee_desc",
	              field_definition: {
	                name: "payee_desc"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "memo",
	              field_definition: {
	                name: "memo"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "destination_id",
	              field_definition: {
	                name: "destination_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "destination_account_id",
	              field_definition: {
	                name: "destination_account_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "currency",
	              field_definition: {
	                name: "currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "amount",
	              field_definition: {
	                name: "amount"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "reference_number",
	              field_definition: {
	                name: "reference_number"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "transaction_date",
	              field_definition: {
	                name: "transaction_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_type",
	              field_definition: {
	                name: "payment_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payee_type",
	              field_definition: {
	                name: "payee_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payee_id",
	              field_definition: {
	                name: "payee_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payee_desc",
	              field_definition: {
	                name: "payee_desc"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "memo",
	              field_definition: {
	                name: "memo"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "destination_id",
	              field_definition: {
	                name: "destination_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "destination_account_id",
	              field_definition: {
	                name: "destination_account_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "currency",
	              field_definition: {
	                name: "currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "amount",
	              field_definition: {
	                name: "amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingAccountFundTransferAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingAccountFundTransferCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingAccountFundTransferCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingAccountFundTransferCount = (function($class, _AggregateCollection) {

	var RetailBankingAccountFundTransferCount = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingAccountFundTransferCount() {
			CitiMobileChallengeSdk.collections.RetailBankingAccountFundTransferCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingAccountFundTransfer,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_account_fund_transfers.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "reference_number",
						field_definition: {
							name: "reference_number"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "transaction_date",
						field_definition: {
							name: "transaction_date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payment_type",
						field_definition: {
							name: "payment_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payee_type",
						field_definition: {
							name: "payee_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payee_id",
						field_definition: {
							name: "payee_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payee_desc",
						field_definition: {
							name: "payee_desc"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "memo",
						field_definition: {
							name: "memo"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "destination_id",
						field_definition: {
							name: "destination_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "destination_account_id",
						field_definition: {
							name: "destination_account_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "currency",
						field_definition: {
							name: "currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "amount",
						field_definition: {
							name: "amount"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "reference_number",
						field_definition: {
							name: "reference_number"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "transaction_date",
						field_definition: {
							name: "transaction_date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payment_type",
						field_definition: {
							name: "payment_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payee_type",
						field_definition: {
							name: "payee_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payee_id",
						field_definition: {
							name: "payee_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payee_desc",
						field_definition: {
							name: "payee_desc"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "memo",
						field_definition: {
							name: "memo"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "destination_id",
						field_definition: {
							name: "destination_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "destination_account_id",
						field_definition: {
							name: "destination_account_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "currency",
						field_definition: {
							name: "currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "amount",
						field_definition: {
							name: "amount"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingAccountFundTransferCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingAccountFundTransferCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingAccountFundTransferCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingAccountFundTransferCountExactMatch = (function($class, _AggregateCollection) {

	var RetailBankingAccountFundTransferCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingAccountFundTransferCountExactMatch() {
			CitiMobileChallengeSdk.collections.RetailBankingAccountFundTransferCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingAccountFundTransfer,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_account_fund_transfers.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "reference_number",
						field_definition: {
							name: "reference_number"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "transaction_date",
						field_definition: {
							name: "transaction_date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payment_type",
						field_definition: {
							name: "payment_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payee_type",
						field_definition: {
							name: "payee_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payee_id",
						field_definition: {
							name: "payee_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payee_desc",
						field_definition: {
							name: "payee_desc"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "memo",
						field_definition: {
							name: "memo"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "destination_id",
						field_definition: {
							name: "destination_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "destination_account_id",
						field_definition: {
							name: "destination_account_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "currency",
						field_definition: {
							name: "currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "amount",
						field_definition: {
							name: "amount"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "reference_number",
						field_definition: {
							name: "reference_number"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "transaction_date",
						field_definition: {
							name: "transaction_date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payment_type",
						field_definition: {
							name: "payment_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payee_type",
						field_definition: {
							name: "payee_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payee_id",
						field_definition: {
							name: "payee_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payee_desc",
						field_definition: {
							name: "payee_desc"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "memo",
						field_definition: {
							name: "memo"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "destination_id",
						field_definition: {
							name: "destination_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "destination_account_id",
						field_definition: {
							name: "destination_account_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "currency",
						field_definition: {
							name: "currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "amount",
						field_definition: {
							name: "amount"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingAccountFundTransferCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingAccountFundTransferExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingAccountFundTransferExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingAccountFundTransferExactMatch = (function($class, _ScopeCollection) {

	var RetailBankingAccountFundTransferExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingAccountFundTransferExactMatch() {
            CitiMobileChallengeSdk.collections.RetailBankingAccountFundTransferExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingAccountFundTransfer,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_account_fund_transfers.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "reference_number",
	              field_definition: {
	                name: "reference_number"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "transaction_date",
	              field_definition: {
	                name: "transaction_date"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payment_type",
	              field_definition: {
	                name: "payment_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payee_type",
	              field_definition: {
	                name: "payee_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payee_id",
	              field_definition: {
	                name: "payee_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payee_desc",
	              field_definition: {
	                name: "payee_desc"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "memo",
	              field_definition: {
	                name: "memo"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "destination_id",
	              field_definition: {
	                name: "destination_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "destination_account_id",
	              field_definition: {
	                name: "destination_account_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "currency",
	              field_definition: {
	                name: "currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "amount",
	              field_definition: {
	                name: "amount"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "reference_number",
	              field_definition: {
	                name: "reference_number"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "transaction_date",
	              field_definition: {
	                name: "transaction_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_type",
	              field_definition: {
	                name: "payment_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payee_type",
	              field_definition: {
	                name: "payee_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payee_id",
	              field_definition: {
	                name: "payee_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payee_desc",
	              field_definition: {
	                name: "payee_desc"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "memo",
	              field_definition: {
	                name: "memo"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "destination_id",
	              field_definition: {
	                name: "destination_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "destination_account_id",
	              field_definition: {
	                name: "destination_account_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "currency",
	              field_definition: {
	                name: "currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "amount",
	              field_definition: {
	                name: "amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingAccountFundTransferExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingAccountTransactionAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingAccountTransactionAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingAccountTransactionAll = (function($class, _ScopeCollection) {

	var RetailBankingAccountTransactionAll = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingAccountTransactionAll() {
            CitiMobileChallengeSdk.collections.RetailBankingAccountTransactionAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingAccountTransaction,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_account_transactions.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "transaction_type",
	              field_definition: {
	                name: "transaction_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "transaction_index",
	              field_definition: {
	                name: "transaction_index"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "transaction_identifier",
	              field_definition: {
	                name: "transaction_identifier"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "transaction_amount",
	              field_definition: {
	                name: "transaction_amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "pending_date",
	              field_definition: {
	                name: "pending_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "formatted_amount",
	              field_definition: {
	                name: "formatted_amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "description",
	              field_definition: {
	                name: "transaction_description"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "date_posted",
	              field_definition: {
	                name: "date_posted"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "check_image_eligible",
	              field_definition: {
	                name: "check_image_eligible"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "activity",
	              field_definition: {
	                name: "activity"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "account_id",
	              field_definition: {
	                name: "account_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "/accounts/{{params.id}}/transactions",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "",
          offset : "",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingAccountTransactionAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingAccountTransactionCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingAccountTransactionCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingAccountTransactionCount = (function($class, _AggregateCollection) {

	var RetailBankingAccountTransactionCount = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingAccountTransactionCount() {
			CitiMobileChallengeSdk.collections.RetailBankingAccountTransactionCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingAccountTransaction,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_account_transactions.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "transaction_type",
						field_definition: {
							name: "transaction_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "transaction_index",
						field_definition: {
							name: "transaction_index"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "transaction_identifier",
						field_definition: {
							name: "transaction_identifier"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "transaction_amount",
						field_definition: {
							name: "transaction_amount"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "pending_date",
						field_definition: {
							name: "pending_date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "formatted_amount",
						field_definition: {
							name: "formatted_amount"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "description",
						field_definition: {
							name: "transaction_description"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "date_posted",
						field_definition: {
							name: "date_posted"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "check_image_eligible",
						field_definition: {
							name: "check_image_eligible"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "activity",
						field_definition: {
							name: "activity"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "account_id",
						field_definition: {
							name: "account_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "transaction_type",
						field_definition: {
							name: "transaction_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "transaction_index",
						field_definition: {
							name: "transaction_index"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "transaction_identifier",
						field_definition: {
							name: "transaction_identifier"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "transaction_amount",
						field_definition: {
							name: "transaction_amount"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "pending_date",
						field_definition: {
							name: "pending_date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "formatted_amount",
						field_definition: {
							name: "formatted_amount"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "description",
						field_definition: {
							name: "transaction_description"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "date_posted",
						field_definition: {
							name: "date_posted"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "check_image_eligible",
						field_definition: {
							name: "check_image_eligible"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "activity",
						field_definition: {
							name: "activity"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "account_id",
						field_definition: {
							name: "account_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingAccountTransactionCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingAccountTransactionCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingAccountTransactionCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingAccountTransactionCountExactMatch = (function($class, _AggregateCollection) {

	var RetailBankingAccountTransactionCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingAccountTransactionCountExactMatch() {
			CitiMobileChallengeSdk.collections.RetailBankingAccountTransactionCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingAccountTransaction,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_account_transactions.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "transaction_type",
						field_definition: {
							name: "transaction_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "transaction_index",
						field_definition: {
							name: "transaction_index"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "transaction_identifier",
						field_definition: {
							name: "transaction_identifier"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "transaction_amount",
						field_definition: {
							name: "transaction_amount"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "pending_date",
						field_definition: {
							name: "pending_date"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "formatted_amount",
						field_definition: {
							name: "formatted_amount"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "description",
						field_definition: {
							name: "transaction_description"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "date_posted",
						field_definition: {
							name: "date_posted"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "check_image_eligible",
						field_definition: {
							name: "check_image_eligible"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "activity",
						field_definition: {
							name: "activity"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "account_id",
						field_definition: {
							name: "account_id"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "transaction_type",
						field_definition: {
							name: "transaction_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "transaction_index",
						field_definition: {
							name: "transaction_index"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "transaction_identifier",
						field_definition: {
							name: "transaction_identifier"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "transaction_amount",
						field_definition: {
							name: "transaction_amount"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "pending_date",
						field_definition: {
							name: "pending_date"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "formatted_amount",
						field_definition: {
							name: "formatted_amount"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "description",
						field_definition: {
							name: "transaction_description"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "date_posted",
						field_definition: {
							name: "date_posted"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "check_image_eligible",
						field_definition: {
							name: "check_image_eligible"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "activity",
						field_definition: {
							name: "activity"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "account_id",
						field_definition: {
							name: "account_id"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingAccountTransactionCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingAccountTransactionExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingAccountTransactionExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingAccountTransactionExactMatch = (function($class, _ScopeCollection) {

	var RetailBankingAccountTransactionExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingAccountTransactionExactMatch() {
            CitiMobileChallengeSdk.collections.RetailBankingAccountTransactionExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingAccountTransaction,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_account_transactions.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "transaction_type",
	              field_definition: {
	                name: "transaction_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "transaction_index",
	              field_definition: {
	                name: "transaction_index"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "transaction_identifier",
	              field_definition: {
	                name: "transaction_identifier"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "transaction_amount",
	              field_definition: {
	                name: "transaction_amount"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "pending_date",
	              field_definition: {
	                name: "pending_date"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "formatted_amount",
	              field_definition: {
	                name: "formatted_amount"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "description",
	              field_definition: {
	                name: "transaction_description"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "date_posted",
	              field_definition: {
	                name: "date_posted"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "check_image_eligible",
	              field_definition: {
	                name: "check_image_eligible"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "activity",
	              field_definition: {
	                name: "activity"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "account_id",
	              field_definition: {
	                name: "account_id"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "transaction_type",
	              field_definition: {
	                name: "transaction_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "transaction_index",
	              field_definition: {
	                name: "transaction_index"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "transaction_identifier",
	              field_definition: {
	                name: "transaction_identifier"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "transaction_amount",
	              field_definition: {
	                name: "transaction_amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "pending_date",
	              field_definition: {
	                name: "pending_date"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "formatted_amount",
	              field_definition: {
	                name: "formatted_amount"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "description",
	              field_definition: {
	                name: "transaction_description"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "date_posted",
	              field_definition: {
	                name: "date_posted"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "check_image_eligible",
	              field_definition: {
	                name: "check_image_eligible"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "activity",
	              field_definition: {
	                name: "activity"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "account_id",
	              field_definition: {
	                name: "account_id"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingAccountTransactionExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingForeignCurrencyAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingForeignCurrencyAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingForeignCurrencyAll = (function($class, _ScopeCollection) {

	var RetailBankingForeignCurrencyAll = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingForeignCurrencyAll() {
            CitiMobileChallengeSdk.collections.RetailBankingForeignCurrencyAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingForeignCurrency,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_foreign_currencies.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "rate",
	              field_definition: {
	                name: "rate"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "to_currency",
	              field_definition: {
	                name: "to_currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "from_currency",
	              field_definition: {
	                name: "from_currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "rate",
	              field_definition: {
	                name: "rate"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "to_currency",
	              field_definition: {
	                name: "to_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "from_currency",
	              field_definition: {
	                name: "from_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingForeignCurrencyAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingForeignCurrencyCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingForeignCurrencyCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingForeignCurrencyCount = (function($class, _AggregateCollection) {

	var RetailBankingForeignCurrencyCount = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingForeignCurrencyCount() {
			CitiMobileChallengeSdk.collections.RetailBankingForeignCurrencyCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingForeignCurrency,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_foreign_currencies.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "rate",
						field_definition: {
							name: "rate"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "to_currency",
						field_definition: {
							name: "to_currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "from_currency",
						field_definition: {
							name: "from_currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "rate",
						field_definition: {
							name: "rate"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "to_currency",
						field_definition: {
							name: "to_currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "from_currency",
						field_definition: {
							name: "from_currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingForeignCurrencyCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingForeignCurrencyCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingForeignCurrencyCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingForeignCurrencyCountExactMatch = (function($class, _AggregateCollection) {

	var RetailBankingForeignCurrencyCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingForeignCurrencyCountExactMatch() {
			CitiMobileChallengeSdk.collections.RetailBankingForeignCurrencyCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingForeignCurrency,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_foreign_currencies.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "rate",
						field_definition: {
							name: "rate"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "to_currency",
						field_definition: {
							name: "to_currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "from_currency",
						field_definition: {
							name: "from_currency"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "rate",
						field_definition: {
							name: "rate"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "to_currency",
						field_definition: {
							name: "to_currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "from_currency",
						field_definition: {
							name: "from_currency"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingForeignCurrencyCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingForeignCurrencyExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingForeignCurrencyExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingForeignCurrencyExactMatch = (function($class, _ScopeCollection) {

	var RetailBankingForeignCurrencyExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingForeignCurrencyExactMatch() {
            CitiMobileChallengeSdk.collections.RetailBankingForeignCurrencyExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingForeignCurrency,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_foreign_currencies.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "rate",
	              field_definition: {
	                name: "rate"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "to_currency",
	              field_definition: {
	                name: "to_currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "from_currency",
	              field_definition: {
	                name: "from_currency"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "rate",
	              field_definition: {
	                name: "rate"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "to_currency",
	              field_definition: {
	                name: "to_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "from_currency",
	              field_definition: {
	                name: "from_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingForeignCurrencyExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingForeignCurrencyForeignCurrencyis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingForeignCurrencyForeignCurrency
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingForeignCurrencyForeignCurrency = (function($class, _ScopeCollection) {

	var RetailBankingForeignCurrencyForeignCurrency = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingForeignCurrencyForeignCurrency() {
            CitiMobileChallengeSdk.collections.RetailBankingForeignCurrencyForeignCurrency._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingForeignCurrency,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_foreign_currencies.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "foreign_currency"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
          {
            fieldName: "from_currency",
            paramName: "from_currency",
          },
          
          {
            fieldName: "to_currency",
            paramName: "to_currency",
          },
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "to_currency",
	              field_definition: {
	                name: "to_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "rate",
	              field_definition: {
	                name: "rate"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "from_currency",
	              field_definition: {
	                name: "from_currency"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "/foreign_currency",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "foreign_currency",
					limit : "",
          offset : "",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	            {
	              name: "from_currency",
	              value: "{{query.query.from_currency}}"
	            },
	          
	            {
	              name: "to_currency",
	              value: "{{query.query.to_currency}}"
	            },
	          
	        ]
				}
				

	});

	return RetailBankingForeignCurrencyForeignCurrency;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingLocationAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingLocationAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingLocationAll = (function($class, _ScopeCollection) {

	var RetailBankingLocationAll = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingLocationAll() {
            CitiMobileChallengeSdk.collections.RetailBankingLocationAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingLocation,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_locations.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "state",
	              field_definition: {
	                name: "state"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "postal_code",
	              field_definition: {
	                name: "postal_code"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "phone",
	              field_definition: {
	                name: "phone"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "name",
	              field_definition: {
	                name: "name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "longitude",
	              field_definition: {
	                name: "longitude"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "location_type",
	              field_definition: {
	                name: "location_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "latitude",
	              field_definition: {
	                name: "latitude"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "external_link",
	              field_definition: {
	                name: "external_link"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "country",
	              field_definition: {
	                name: "country"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "comments",
	              field_definition: {
	                name: "comments"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "city",
	              field_definition: {
	                name: "city"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "address_2",
	              field_definition: {
	                name: "address_line_two"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "address_1",
	              field_definition: {
	                name: "address_line_one"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "state",
	              field_definition: {
	                name: "state"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "postal_code",
	              field_definition: {
	                name: "postal_code"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "phone",
	              field_definition: {
	                name: "phone"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "name",
	              field_definition: {
	                name: "name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "longitude",
	              field_definition: {
	                name: "longitude"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "location_type",
	              field_definition: {
	                name: "location_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "latitude",
	              field_definition: {
	                name: "latitude"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "external_link",
	              field_definition: {
	                name: "external_link"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "country",
	              field_definition: {
	                name: "country"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "comments",
	              field_definition: {
	                name: "comments"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "city",
	              field_definition: {
	                name: "city"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "address_2",
	              field_definition: {
	                name: "address_line_two"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "address_1",
	              field_definition: {
	                name: "address_line_one"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingLocationAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingLocationCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingLocationCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingLocationCount = (function($class, _AggregateCollection) {

	var RetailBankingLocationCount = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingLocationCount() {
			CitiMobileChallengeSdk.collections.RetailBankingLocationCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingLocation,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_locations.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "state",
						field_definition: {
							name: "state"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "postal_code",
						field_definition: {
							name: "postal_code"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "phone",
						field_definition: {
							name: "phone"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "name",
						field_definition: {
							name: "name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "longitude",
						field_definition: {
							name: "longitude"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "location_type",
						field_definition: {
							name: "location_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "latitude",
						field_definition: {
							name: "latitude"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "external_link",
						field_definition: {
							name: "external_link"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "country",
						field_definition: {
							name: "country"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "comments",
						field_definition: {
							name: "comments"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "city",
						field_definition: {
							name: "city"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "address_2",
						field_definition: {
							name: "address_line_two"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "address_1",
						field_definition: {
							name: "address_line_one"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "state",
						field_definition: {
							name: "state"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "postal_code",
						field_definition: {
							name: "postal_code"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "phone",
						field_definition: {
							name: "phone"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "name",
						field_definition: {
							name: "name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "longitude",
						field_definition: {
							name: "longitude"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "location_type",
						field_definition: {
							name: "location_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "latitude",
						field_definition: {
							name: "latitude"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "external_link",
						field_definition: {
							name: "external_link"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "country",
						field_definition: {
							name: "country"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "comments",
						field_definition: {
							name: "comments"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "city",
						field_definition: {
							name: "city"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "address_2",
						field_definition: {
							name: "address_line_two"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "address_1",
						field_definition: {
							name: "address_line_one"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingLocationCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingLocationCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingLocationCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingLocationCountExactMatch = (function($class, _AggregateCollection) {

	var RetailBankingLocationCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingLocationCountExactMatch() {
			CitiMobileChallengeSdk.collections.RetailBankingLocationCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingLocation,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_locations.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "state",
						field_definition: {
							name: "state"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "postal_code",
						field_definition: {
							name: "postal_code"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "phone",
						field_definition: {
							name: "phone"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "name",
						field_definition: {
							name: "name"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "longitude",
						field_definition: {
							name: "longitude"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "location_type",
						field_definition: {
							name: "location_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "latitude",
						field_definition: {
							name: "latitude"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "external_link",
						field_definition: {
							name: "external_link"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "country",
						field_definition: {
							name: "country"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "comments",
						field_definition: {
							name: "comments"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "city",
						field_definition: {
							name: "city"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "address_2",
						field_definition: {
							name: "address_line_two"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "address_1",
						field_definition: {
							name: "address_line_one"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "state",
						field_definition: {
							name: "state"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "postal_code",
						field_definition: {
							name: "postal_code"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "phone",
						field_definition: {
							name: "phone"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "name",
						field_definition: {
							name: "name"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "longitude",
						field_definition: {
							name: "longitude"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "location_type",
						field_definition: {
							name: "location_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "latitude",
						field_definition: {
							name: "latitude"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "external_link",
						field_definition: {
							name: "external_link"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "country",
						field_definition: {
							name: "country"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "comments",
						field_definition: {
							name: "comments"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "city",
						field_definition: {
							name: "city"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "address_2",
						field_definition: {
							name: "address_line_two"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "address_1",
						field_definition: {
							name: "address_line_one"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingLocationCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingLocationExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingLocationExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingLocationExactMatch = (function($class, _ScopeCollection) {

	var RetailBankingLocationExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingLocationExactMatch() {
            CitiMobileChallengeSdk.collections.RetailBankingLocationExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingLocation,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_locations.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "state",
	              field_definition: {
	                name: "state"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "postal_code",
	              field_definition: {
	                name: "postal_code"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "phone",
	              field_definition: {
	                name: "phone"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "name",
	              field_definition: {
	                name: "name"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "longitude",
	              field_definition: {
	                name: "longitude"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "location_type",
	              field_definition: {
	                name: "location_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "latitude",
	              field_definition: {
	                name: "latitude"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "external_link",
	              field_definition: {
	                name: "external_link"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "country",
	              field_definition: {
	                name: "country"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "comments",
	              field_definition: {
	                name: "comments"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "city",
	              field_definition: {
	                name: "city"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "address_2",
	              field_definition: {
	                name: "address_line_two"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "address_1",
	              field_definition: {
	                name: "address_line_one"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "state",
	              field_definition: {
	                name: "state"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "postal_code",
	              field_definition: {
	                name: "postal_code"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "phone",
	              field_definition: {
	                name: "phone"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "name",
	              field_definition: {
	                name: "name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "longitude",
	              field_definition: {
	                name: "longitude"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "location_type",
	              field_definition: {
	                name: "location_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "latitude",
	              field_definition: {
	                name: "latitude"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "external_link",
	              field_definition: {
	                name: "external_link"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "country",
	              field_definition: {
	                name: "country"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "comments",
	              field_definition: {
	                name: "comments"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "city",
	              field_definition: {
	                name: "city"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "address_2",
	              field_definition: {
	                name: "address_line_two"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "address_1",
	              field_definition: {
	                name: "address_line_one"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingLocationExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingLocationLocationsis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingLocationLocations
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingLocationLocations = (function($class, _ScopeCollection) {

	var RetailBankingLocationLocations = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingLocationLocations() {
            CitiMobileChallengeSdk.collections.RetailBankingLocationLocations._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingLocation,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_locations.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "locations"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
          {
            fieldName: "latitude",
            paramName: "latitude",
          },
          
          {
            fieldName: "longitude",
            paramName: "longitude",
          },
          
          {
            fieldName: "id",
            paramName: "id",
          },
          
          {
            fieldName: "id",
            paramName: "id",
          },
          
          {
            fieldName: "location_type",
            paramName: "location_type",
          },
          
          {
            fieldName: "address_line_one",
            paramName: "address_line_one",
          },
          
          {
            fieldName: "city",
            paramName: "city",
          },
          
          {
            fieldName: "state",
            paramName: "state",
          },
          
          {
            fieldName: "postal_code",
            paramName: "postal_code",
          },
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "state",
	              field_definition: {
	                name: "state"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "postal_code",
	              field_definition: {
	                name: "postal_code"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "phone",
	              field_definition: {
	                name: "phone"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "name",
	              field_definition: {
	                name: "name"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "longitude",
	              field_definition: {
	                name: "longitude"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "location_type",
	              field_definition: {
	                name: "location_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "latitude",
	              field_definition: {
	                name: "latitude"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "external_link",
	              field_definition: {
	                name: "external_link"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "country",
	              field_definition: {
	                name: "country"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "comments",
	              field_definition: {
	                name: "comments"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "city",
	              field_definition: {
	                name: "city"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "address_2",
	              field_definition: {
	                name: "address_line_two"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "address_1",
	              field_definition: {
	                name: "address_line_one"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "/locations",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "locations",
					limit : "",
          offset : "",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	            {
	              name: "latitude",
	              value: "{{query.query.latitude}}"
	            },
	          
	            {
	              name: "longitude",
	              value: "{{query.query.longitude}}"
	            },
	          
	            {
	              name: "radius",
	              value: "{{query.query.radius}}"
	            },
	          
	            {
	              name: "radius_uom",
	              value: "{{query.query.radius_uom}}"
	            },
	          
	            {
	              name: "location_type",
	              value: "{{query.query.location_type}}"
	            },
	          
	            {
	              name: "address",
	              value: "{{query.query.address}}"
	            },
	          
	            {
	              name: "city",
	              value: "{{query.query.city}}"
	            },
	          
	            {
	              name: "state",
	              value: "{{query.query.state}}"
	            },
	          
	            {
	              name: "postal_code",
	              value: "{{query.query.postal_code}}"
	            },
	          
	        ]
				}
				

	});

	return RetailBankingLocationLocations;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingLoginAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingLoginAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingLoginAll = (function($class, _ScopeCollection) {

	var RetailBankingLoginAll = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingLoginAll() {
            CitiMobileChallengeSdk.collections.RetailBankingLoginAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingLogin,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_logins.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "token",
	              field_definition: {
	                name: "token"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "password",
	              field_definition: {
	                name: "password"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "is_eligible_for_offers",
	              field_definition: {
	                name: "is_eligible_for_offers"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "is_person_to_person_required",
	              field_definition: {
	                name: "is_person_to_person_required"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "username",
	              field_definition: {
	                name: "username"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "token",
	              field_definition: {
	                name: "token"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "password",
	              field_definition: {
	                name: "password"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "is_eligible_for_offers",
	              field_definition: {
	                name: "is_eligible_for_offers"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "is_person_to_person_required",
	              field_definition: {
	                name: "is_person_to_person_required"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "username",
	              field_definition: {
	                name: "username"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingLoginAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingLoginCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingLoginCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingLoginCount = (function($class, _AggregateCollection) {

	var RetailBankingLoginCount = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingLoginCount() {
			CitiMobileChallengeSdk.collections.RetailBankingLoginCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingLogin,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_logins.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "token",
						field_definition: {
							name: "token"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "password",
						field_definition: {
							name: "password"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "is_eligible_for_offers",
						field_definition: {
							name: "is_eligible_for_offers"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "is_person_to_person_required",
						field_definition: {
							name: "is_person_to_person_required"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "username",
						field_definition: {
							name: "username"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "token",
						field_definition: {
							name: "token"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "password",
						field_definition: {
							name: "password"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "is_eligible_for_offers",
						field_definition: {
							name: "is_eligible_for_offers"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "is_person_to_person_required",
						field_definition: {
							name: "is_person_to_person_required"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "username",
						field_definition: {
							name: "username"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingLoginCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingLoginCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingLoginCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingLoginCountExactMatch = (function($class, _AggregateCollection) {

	var RetailBankingLoginCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingLoginCountExactMatch() {
			CitiMobileChallengeSdk.collections.RetailBankingLoginCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingLogin,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_logins.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "password",
						field_definition: {
							name: "password"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "is_eligible_for_offers",
						field_definition: {
							name: "is_eligible_for_offers"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "is_person_to_person_required",
						field_definition: {
							name: "is_person_to_person_required"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "username",
						field_definition: {
							name: "username"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "token",
						field_definition: {
							name: "token"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "token",
						field_definition: {
							name: "token"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "password",
						field_definition: {
							name: "password"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "is_eligible_for_offers",
						field_definition: {
							name: "is_eligible_for_offers"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "is_person_to_person_required",
						field_definition: {
							name: "is_person_to_person_required"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "username",
						field_definition: {
							name: "username"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingLoginCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingLoginExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingLoginExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingLoginExactMatch = (function($class, _ScopeCollection) {

	var RetailBankingLoginExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingLoginExactMatch() {
            CitiMobileChallengeSdk.collections.RetailBankingLoginExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingLogin,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_logins.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "token",
	              field_definition: {
	                name: "token"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "password",
	              field_definition: {
	                name: "password"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "is_eligible_for_offers",
	              field_definition: {
	                name: "is_eligible_for_offers"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "is_person_to_person_required",
	              field_definition: {
	                name: "is_person_to_person_required"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "username",
	              field_definition: {
	                name: "username"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "token",
	              field_definition: {
	                name: "token"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "password",
	              field_definition: {
	                name: "password"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "is_eligible_for_offers",
	              field_definition: {
	                name: "is_eligible_for_offers"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "is_person_to_person_required",
	              field_definition: {
	                name: "is_person_to_person_required"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "username",
	              field_definition: {
	                name: "username"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingLoginExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingPayeeAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingPayeeAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingPayeeAll = (function($class, _ScopeCollection) {

	var RetailBankingPayeeAll = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingPayeeAll() {
            CitiMobileChallengeSdk.collections.RetailBankingPayeeAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingPayee,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_payees.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_method",
	              field_definition: {
	                name: "payment_method"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payee_type",
	              field_definition: {
	                name: "payee_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payee_list_id_type",
	              field_definition: {
	                name: "payee_list_id_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payee_list_id_2",
	              field_definition: {
	                name: "payee_list_id_two"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payee_description",
	              field_definition: {
	                name: "payee_description"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payee_account",
	              field_definition: {
	                name: "payee_account"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "last_payment_amt",
	              field_definition: {
	                name: "last_payment_amt"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "detail_prefix",
	              field_definition: {
	                name: "detail_prefix"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "bank_name_ext",
	              field_definition: {
	                name: "bank_name_ext"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "add_payee_details",
	              field_definition: {
	                name: "add_payee_details"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "/payees",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "",
          offset : "",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingPayeeAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingPayeeCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingPayeeCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingPayeeCount = (function($class, _AggregateCollection) {

	var RetailBankingPayeeCount = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingPayeeCount() {
			CitiMobileChallengeSdk.collections.RetailBankingPayeeCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingPayee,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_payees.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payment_method",
						field_definition: {
							name: "payment_method"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payee_type",
						field_definition: {
							name: "payee_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payee_list_id_type",
						field_definition: {
							name: "payee_list_id_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payee_list_id_2",
						field_definition: {
							name: "payee_list_id_two"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payee_description",
						field_definition: {
							name: "payee_description"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payee_account",
						field_definition: {
							name: "payee_account"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "last_payment_amt",
						field_definition: {
							name: "last_payment_amt"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "detail_prefix",
						field_definition: {
							name: "detail_prefix"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "bank_name_ext",
						field_definition: {
							name: "bank_name_ext"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "add_payee_details",
						field_definition: {
							name: "add_payee_details"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payment_method",
						field_definition: {
							name: "payment_method"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payee_type",
						field_definition: {
							name: "payee_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payee_list_id_type",
						field_definition: {
							name: "payee_list_id_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payee_list_id_2",
						field_definition: {
							name: "payee_list_id_two"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payee_description",
						field_definition: {
							name: "payee_description"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payee_account",
						field_definition: {
							name: "payee_account"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "last_payment_amt",
						field_definition: {
							name: "last_payment_amt"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "detail_prefix",
						field_definition: {
							name: "detail_prefix"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "bank_name_ext",
						field_definition: {
							name: "bank_name_ext"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "add_payee_details",
						field_definition: {
							name: "add_payee_details"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingPayeeCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingPayeeCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingPayeeCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingPayeeCountExactMatch = (function($class, _AggregateCollection) {

	var RetailBankingPayeeCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingPayeeCountExactMatch() {
			CitiMobileChallengeSdk.collections.RetailBankingPayeeCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingPayee,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_payees.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payment_method",
						field_definition: {
							name: "payment_method"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payee_type",
						field_definition: {
							name: "payee_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payee_list_id_type",
						field_definition: {
							name: "payee_list_id_type"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payee_list_id_2",
						field_definition: {
							name: "payee_list_id_two"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payee_description",
						field_definition: {
							name: "payee_description"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "payee_account",
						field_definition: {
							name: "payee_account"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "last_payment_amt",
						field_definition: {
							name: "last_payment_amt"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "detail_prefix",
						field_definition: {
							name: "detail_prefix"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "bank_name_ext",
						field_definition: {
							name: "bank_name_ext"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "add_payee_details",
						field_definition: {
							name: "add_payee_details"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payment_method",
						field_definition: {
							name: "payment_method"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payee_type",
						field_definition: {
							name: "payee_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payee_list_id_type",
						field_definition: {
							name: "payee_list_id_type"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payee_list_id_2",
						field_definition: {
							name: "payee_list_id_two"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payee_description",
						field_definition: {
							name: "payee_description"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "payee_account",
						field_definition: {
							name: "payee_account"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "last_payment_amt",
						field_definition: {
							name: "last_payment_amt"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "detail_prefix",
						field_definition: {
							name: "detail_prefix"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "bank_name_ext",
						field_definition: {
							name: "bank_name_ext"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "add_payee_details",
						field_definition: {
							name: "add_payee_details"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingPayeeCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingPayeeExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingPayeeExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingPayeeExactMatch = (function($class, _ScopeCollection) {

	var RetailBankingPayeeExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingPayeeExactMatch() {
            CitiMobileChallengeSdk.collections.RetailBankingPayeeExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingPayee,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_payees.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payment_method",
	              field_definition: {
	                name: "payment_method"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payee_type",
	              field_definition: {
	                name: "payee_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payee_list_id_type",
	              field_definition: {
	                name: "payee_list_id_type"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payee_list_id_2",
	              field_definition: {
	                name: "payee_list_id_two"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payee_description",
	              field_definition: {
	                name: "payee_description"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "payee_account",
	              field_definition: {
	                name: "payee_account"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "last_payment_amt",
	              field_definition: {
	                name: "last_payment_amt"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "detail_prefix",
	              field_definition: {
	                name: "detail_prefix"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "bank_name_ext",
	              field_definition: {
	                name: "bank_name_ext"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "add_payee_details",
	              field_definition: {
	                name: "add_payee_details"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payment_method",
	              field_definition: {
	                name: "payment_method"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payee_type",
	              field_definition: {
	                name: "payee_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payee_list_id_type",
	              field_definition: {
	                name: "payee_list_id_type"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payee_list_id_2",
	              field_definition: {
	                name: "payee_list_id_two"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payee_description",
	              field_definition: {
	                name: "payee_description"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "payee_account",
	              field_definition: {
	                name: "payee_account"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "last_payment_amt",
	              field_definition: {
	                name: "last_payment_amt"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "detail_prefix",
	              field_definition: {
	                name: "detail_prefix"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "bank_name_ext",
	              field_definition: {
	                name: "bank_name_ext"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "add_payee_details",
	              field_definition: {
	                name: "add_payee_details"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingPayeeExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingPayeeTypeAllis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingPayeeTypeAll
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingPayeeTypeAll = (function($class, _ScopeCollection) {

	var RetailBankingPayeeTypeAll = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingPayeeTypeAll() {
            CitiMobileChallengeSdk.collections.RetailBankingPayeeTypeAll._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingPayeeType,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_payee_types.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "all"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "value",
	              field_definition: {
	                name: "value"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "/payee_types",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "all",
					limit : "",
          offset : "",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingPayeeTypeAll;

})(AP.utility.createClass, AP.collection.ScopeCollection);

/**
RetailBankingPayeeTypeCountis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingPayeeTypeCount
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingPayeeTypeCount = (function($class, _AggregateCollection) {

	var RetailBankingPayeeTypeCount = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingPayeeTypeCount() {
			CitiMobileChallengeSdk.collections.RetailBankingPayeeTypeCount._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingPayeeType,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_payee_types.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "value",
						field_definition: {
							name: "value"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "value",
						field_definition: {
							name: "value"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingPayeeTypeCount;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingPayeeTypeCountExactMatchis an aggregate collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.AggregateCollection` to learn about about aggregates.
@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingPayeeTypeCountExactMatch
@extends AP.collection.AggregateCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingPayeeTypeCountExactMatch = (function($class, _AggregateCollection) {

	var RetailBankingPayeeTypeCountExactMatch = $class({
		extends: _AggregateCollection,

		_constructor: function RetailBankingPayeeTypeCountExactMatch() {
			CitiMobileChallengeSdk.collections.RetailBankingPayeeTypeCountExactMatch._super.constructor.apply(this, arguments);
		},

		static: {
			/**
			The collection ID may be used to look-up a collection from an
		  	application class.
		  	@property collectionId
		  	@type String
		  	@static
			 */
			collectionId: ""
		},

		/**
		The model associated with this collection.  Results returned by server
  		requests for this collection are converted into instances of this model.
  		@property model
  		@type AP.model.Model
		 */
		model: CitiMobileChallengeSdk.models.RetailBankingPayeeType,

		/**
		Server requests for this collection use this URL.
	  	@property apiEndpoint
	  	@type String
		 */
		apiEndpoint: "/api/v2/retail_banking_payee_types.json",

		/**
		Name/value pairs included with every server request.  Extra parameters are
	  	converted to URL parameters at request-time.
	  	@property extraParams
	  	@type Object
		 */
		extraParams: {
			scope: "count_exact_match"
		},

		/**
		Array of query field configurations.  Query fields map model field names onto
	  	URL parameter names.  See `AP.collection.ScopeCollection` to learn more
	  	about query fields.
	  	@property queryFields
	  	@type Array
		 */
		queryFields: [
			
		],

		/**
		Name of the interface to use. Can be an HttpAdapter or the default connection
		to an Anypresence API.
		@property storage_interface
		@type String
		*/
		storage_interface: "RetailBanking",

		
		/**
		Adapter configurations for this query scope.
		Only required for query scopes whose adapter interface is an HttpAdapter.
		@property adapter_configuration
		@type Object
		*/
		adapter_configuration: {
			request_field_level_mappings: [
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "value",
						field_definition: {
							name: "value"
						}
					},
				
					{
						type: "RequestFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			response_field_level_mappings: [
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "value",
						field_definition: {
							name: "value"
						}
					},
				
					{
						type: "ResponseFieldLevelMapping",
						remote_field_name: "id",
						field_definition: {
							name: "id"
						}
					},
				
			],
			http_verb: "GET",
			path_selector : "$",
			incremental_path : "",
			body_format : "json",
			object_name_mapping : "",
			body_payload_template : "",
			action : "count_exact_match",
			limit : "limit",
			offset : "limit",
			incremental_headers: [
				
			],
			incremental_url_parameters: [
				
			]
		}
		

	});

	return RetailBankingPayeeTypeCountExactMatch;

})(AP.utility.createClass, AP.collection.AggregateCollection);

/**
RetailBankingPayeeTypeExactMatchis a scope collection for application `CitiMobileChallengeSdk`.  See
`AP.collection.ScopeCollection` for more information about scopes.

@module CitiMobileChallengeSdk
@submodule collections
@class RetailBankingPayeeTypeExactMatch
@extends AP.collection.ScopeCollection
 */
CitiMobileChallengeSdk.collections.RetailBankingPayeeTypeExactMatch = (function($class, _ScopeCollection) {

	var RetailBankingPayeeTypeExactMatch = $class({

		extends: _ScopeCollection,

        _constructor: function RetailBankingPayeeTypeExactMatch() {
            CitiMobileChallengeSdk.collections.RetailBankingPayeeTypeExactMatch._super.constructor.apply(this, arguments);
        },

        static: {
          /**
          The collection ID may be used to look-up a collection from an
          application class.
          @property collectionId
          @type String
          @static
           */
          collectionId: ""
        },

        /**
        The model associated with this collection.  Results returned by server
        requests for this collection are converted into instances of this model.
        @property model
        @type AP.model.Model
         */
        model: CitiMobileChallengeSdk.models.RetailBankingPayeeType,

        /**
        Server requests for this collection use this URL.
        @property apiEndpoint
        @type String
         */
        apiEndpoint: "/api/v2/retail_banking_payee_types.json",

        /**
        Name/value pairs included with every server request.  Extra parameters are
        converted to URL parameters at request-time.
        @property extraParams
        @type Object
         */
        extraParams: {
          scope: "exact_match"
        },

        /**
        Array of query field configurations.  Query fields map model field names onto
        URL parameter names.  See `AP.collection.ScopeCollection` to learn more
        about query fields.
        @property queryFields
        @type Array
         */
        queryFields: [
          
        ],

				/**
		    Name of the interface to use. Can be an HttpAdapter or the default connection
		    to an Anypresence API.
		    @property storage_interface
		    @type String
		    */
		    storage_interface: "RetailBanking",

				
				/**
		    Adapter configurations for this query scope.
		    Only required for query scopes whose adapter interface is an HttpAdapter.
		    @property adapter_configuration
		    @type Object
		    */
				adapter_configuration: {
					request_field_level_mappings: [
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "value",
	              field_definition: {
	                name: "value"
	              }
	            },
	          
	            {
	              type: "RequestFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        response_field_level_mappings: [
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "value",
	              field_definition: {
	                name: "value"
	              }
	            },
	          
	            {
	              type: "ResponseFieldLevelMapping",
	              remote_field_name: "id",
	              field_definition: {
	                name: "id"
	              }
	            },
	          
	        ],
	        http_verb: "GET",
	        path_selector : "$.*",
	        incremental_path : "",
	        body_format : "json",
	        object_name_mapping : "",
	        body_payload_template : "",
	        action : "exact_match",
					limit : "limit",
          offset : "limit",
	        incremental_headers: [
	          
	        ],
	        incremental_url_parameters: [
	          
	        ]
				}
				

	});

	return RetailBankingPayeeTypeExactMatch;

})(AP.utility.createClass, AP.collection.ScopeCollection);

CitiMobileChallengeSdk.ExampleCustomClass = (function($class) {
	
	var exampleCustomClass = $class({
		_constructor: function ExampleCustomClass() {
			this.message = "This is a custom class.";
		},
		
		message: null,
		
		getMessage: function() {
			return this.message;
		}
	});
	
	return exampleCustomClass;
	
})(AP.utility.createClass);
